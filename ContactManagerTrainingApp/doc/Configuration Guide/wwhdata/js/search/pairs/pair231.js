function FileData_Pairs(x)
{
x.t("root","element");
x.t("example","suppose");
x.t("example","claimsearchcriteria");
x.t("example","criteriadef");
x.t("example","criterion");
x.t("equal","numeric");
x.t("targetentityname","attributes");
x.t("possible","map");
x.t("possible","values");
x.t("possible","adding");
x.t("possible","contains");
x.t("introduce","problems");
x.t("exist","base");
x.t("le","less");
x.t("properties","required");
x.t("properties","guidewire");
x.t("properties","due");
x.t("properties","adding");
x.t("within","criteriadef");
x.t("table","possible");
x.t("table","describes");
x.t("table","therefore");
x.t("describes","xml");
x.t("describes","valid");
x.t("description","searchconfig");
x.t("description","property");
x.t("description","entity");
x.t("description","criterion");
x.t("submission","cancellation");
x.t("forceeqmatchtype","name");
x.t("situation","whenever");
x.t("key","data");
x.t("key","column");
x.t("required","properties");
x.t("required","description");
x.t("required","base");
x.t("required","search");
x.t("required","fields");
x.t("required","section");
x.t("required","optional");
x.t("user's","search");
x.t("always","case-insensitive");
x.t("performs","simple");
x.t("improve","performance");
x.t("user","interface");
x.t("tables","joined");
x.t("searchconfig","criteriadef");
x.t("uses","eq");
x.t("uses","startswith");
x.t("uses","matchtype");
x.t("uses","value");
x.t("uses","following");
x.t("targetproperty","name");
x.t("targetproperty","following");
x.t("stringproperty","forceeqmatchtype=");
x.t("stringproperty","unless");
x.t("field","following");
x.t("ge","greater");
x.t("leading","key");
x.t("working","database");
x.t("text_val.select","link");
x.t("interface","configuration");
x.t("basic","structure");
x.t("type","possible");
x.t("type","targetproperty");
x.t("type","evaluates");
x.t("type","startswith");
x.t("type","name");
x.t("type","target");
x.t("type","expensive");
x.t("type","comments");
x.t("type","/criteriadef");
x.t("type","existing");
x.t("type","terms");
x.t("type","attributes");
x.t("evaluates","false");
x.t("evaluates","true");
x.t("evaluates","data");
x.t("eq","match");
x.t("eq","(equality)");
x.t("eq","equals");
x.t("change","properties");
x.t("change","search");
x.t("change","match");
x.t("whenever","change");
x.t("sections","guidewire");
x.t("down","production");
x.t("entities","certain");
x.t("entities","policy");
x.t("entities","used");
x.t("guidewire","recommends");
x.t("guidewire","expressly");
x.t("guidewire","strongly");
x.t("guidewire","carefully");
x.t("guidewire","divides");
x.t("one-to-one","mapping");
x.t("property","name");
x.t("property","entity");
x.t("property","criteria");
x.t("link","directly");
x.t("certain","non-persistent");
x.t("certain","appropriate");
x.t("element","introduce");
x.t("element","performs");
x.t("element","uses");
x.t("element","search-config.xml");
x.t("element","name");
x.t("element","perform");
x.t("element","specifies");
x.t("element","define");
x.t("element","criteriadef");
x.t("element","following");
x.t("element","criterion");
x.t("element","associated");
x.t("element","specify");
x.t("new","required");
x.t("new","criteriadef");
x.t("contents","existing");
x.t("single","search");
x.t("single","column");
x.t("objects","matchtype");
x.t("details","situation");
x.t("document","entity");
x.t("messsage","policycenter");
x.t("search-config.xml","file");
x.t("search-config.xml","instead");
x.t("search-config.xml","criteriadef");
x.t("search-config.xml","modify");
x.t("file","element");
x.t("file","define");
x.t("file","following");
x.t("list","describes");
x.t("lt","less");
x.t("indexes","place");
x.t("add","new");
x.t("add","depends");
x.t("add","column");
x.t("cancellation","add");
x.t("recommends","remove");
x.t("recommends","avoid");
x.t("recommends","consult");
x.t("forceeqmatchtype=","flagproperty");
x.t("forceeqmatchtype=","booleanproperty");
x.t("startswith","string");
x.t("startswith","match");
x.t("startswith","code");
x.t("startswith","caution");
x.t("startswith","contains");
x.t("joined","search");
x.t("guide","user");
x.t("simple","one-to-one");
x.t("simple","matches");
x.t("simple","matching");
x.t("remove","required");
x.t("remove","criteriadef");
x.t("unless","flagproperty");
x.t("due","restrictions");
x.t("configuring","search");
x.t("configuring","fields");
x.t("false","criterion");
x.t("flagproperty","matchtype=");
x.t("flagproperty","criteria");
x.t("depends","database");
x.t("reasons","guidewire");
x.t("expressly","prohibits");
x.t("directly","page");
x.t("true","case");
x.t("true","criterion");
x.t("prohibits","addition");
x.t("text_val.focus","text_val.select");
x.t("functionality","database");
x.t("name","boolean");
x.t("name","targetentity=");
x.t("name","target");
x.t("name","subelement");
x.t("name","attribute");
x.t("name","criterion");
x.t("name","criteria");
x.t("performance","eq");
x.t("performance","reasons");
x.t("performance","attempt");
x.t("performance","second");
x.t("performance","issues");
x.t("performance","exact");
x.t("performance","tuning");
x.t("performance","therefore");
x.t("perform","simple");
x.t("perform","match");
x.t("base","configuration");
x.t("base","criteriadef");
x.t("dependent","data");
x.t("virtual","property");
x.t("avoid","using");
x.t("avoid","contains");
x.t("gt","greater");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("zero","criterion");
x.t("boolean","property");
x.t("targetentity=","targetentityname");
x.t("targetentity=","name");
x.t("place","guidewire");
x.t("search","example");
x.t("search","properties");
x.t("search","table");
x.t("search","field");
x.t("search","functionality");
x.t("search","screens");
x.t("search","important");
x.t("search","term");
x.t("search","configuration");
x.t("search","implementation");
x.t("search","warning");
x.t("search","criteria");
x.t("map","single");
x.t("modifying","criterion");
x.t("target","entity");
x.t("string","objects");
x.t("string","startswith");
x.t("string","important");
x.t("attempt","modify");
x.t("fields","tables");
x.t("fields","policycenter");
x.t("fields","changing");
x.t("fields","warning");
x.t("subelement","within");
x.t("subelement","description");
x.t("subelement","certain");
x.t("subelement","criteriadef");
x.t("attribute","required");
x.t("attribute","evaluates");
x.t("attribute","dependent");
x.t("attribute","target");
x.t("attribute","entity");
x.t("attribute","criterion");
x.t("attribute","criteria");
x.t("problems","policycenter");
x.t("second","contains");
x.t("chosen","properties");
x.t("chosen","match");
x.t("addition","guidewire");
x.t("addition","new");
x.t("policycenter","uses");
x.t("policycenter","search");
x.t("policycenter","matches");
x.t("policycenter","configuration");
x.t("policycenter","installation");
x.t("ones","remove");
x.t("error","occurred");
x.t("property=","stringproperty");
x.t("property=","attributename");
x.t("strongly","recommends");
x.t("severe","enough");
x.t("syntax","criteriadef");
x.t("syntax","criterion");
x.t("matchtype","attribute");
x.t("matchtype","case-sensitivity");
x.t("matchtype","values");
x.t("matchtype","criterion");
x.t("expensive","type");
x.t("expensive","terms");
x.t("suppose","add");
x.t("issues","severe");
x.t("guidewire_selectall","var");
x.t("cause","performance");
x.t("function","guidewire_selectall");
x.t("comments","contains");
x.t("enough","bring");
x.t("define","zero");
x.t("define","mapping");
x.t("specifies","perform");
x.t("specifies","policycenter");
x.t("specifies","mapping");
x.t("against","target");
x.t("screens","required");
x.t("carefully","chosen");
x.t("instead","modify");
x.t("index","improve");
x.t("index","add");
x.t("index","column");
x.t("xml","working");
x.t("xml","search-config.xml");
x.t("xml","function");
x.t("xml","elements");
x.t("non-persistent","entities");
x.t("targetproperty=","attributename");
x.t("/criteriadef","following");
x.t("match","example");
x.t("match","stringproperty");
x.t("match","uses");
x.t("match","type");
x.t("match","attribute");
x.t("match","types");
x.t("match","values");
x.t("booleanproperty","matchtype=");
x.t("section","enhance");
x.t("types","existing");
x.t("important","guidewire");
x.t("important","performance");
x.t("important","virtual");
x.t("case-insensitive","match");
x.t("claimsearchcriteria","object");
x.t("(equality)","match");
x.t("code","uses");
x.t("term","criteria");
x.t("consult","database");
x.t("database","details");
x.t("database","search");
x.t("database","addition");
x.t("database","except");
x.t("database","expert");
x.t("matches","column");
x.t("matches","criteria");
x.t("exact","index");
x.t("greater","equal");
x.t("greater","numeric");
x.t("enhance","performance");
x.t("occurred","messsage");
x.t("existing","required");
x.t("existing","ones");
x.t("existing","criteriadef");
x.t("less","equal");
x.t("less","numeric");
x.t("consider","adding");
x.t("changing","match");
x.t("configuration","working");
x.t("configuration","guide");
x.t("configuration","configuring");
x.t("configuration","criteriadef");
x.t("targetentity","type");
x.t("divides","main");
x.t("value","user's");
x.t("tuning","specific");
x.t("main","search");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","search");
x.t("implementation","case");
x.t("condition","search");
x.t("valid","matchtype");
x.t("case-sensitivity","depends");
x.t("page","error");
x.t("attributename","forceeqmatchtype=");
x.t("attributename","targetproperty=");
x.t("attributename","matchtype=");
x.t("data","type");
x.t("data","entities");
x.t("criteriadef","root");
x.t("criteriadef","element");
x.t("criteriadef","attribute");
x.t("criteriadef","subelement");
x.t("criteriadef","elements");
x.t("criteriadef","entity=");
x.t("criteriadef","criterion");
x.t("query","against");
x.t("optional","sections");
x.t("policyperiod","submission");
x.t("equals","numeric");
x.t("caution","performance");
x.t("appropriate","indexes");
x.t("production","database");
x.t("values","forceeqmatchtype");
x.t("values","single");
x.t("values","string");
x.t("policy","policyperiod");
x.t("case","match");
x.t("case","consider");
x.t("structure","criteriadef");
x.t("column","leading");
x.t("column","type");
x.t("column","important");
x.t("column","(field)");
x.t("column","restrictive");
x.t("date","le");
x.t("date","ge");
x.t("date","lt");
x.t("date","startswith");
x.t("date","gt");
x.t("numeric","date");
x.t("mapping","key");
x.t("mapping","search");
x.t("mapping","criteria");
x.t("mapping","documentsearchcriteria");
x.t("matchtype=","type");
x.t("matchtype=","startswith");
x.t("used","search");
x.t("following","table");
x.t("following","basic");
x.t("following","entities");
x.t("following","list");
x.t("following","syntax");
x.t("following","definitions");
x.t("following","subelements");
x.t("elements","exist");
x.t("elements","search-config.xml");
x.t("elements","criterion");
x.t("entity","example");
x.t("entity","possible");
x.t("entity","type");
x.t("entity","element");
x.t("entity","document");
x.t("entity","true");
x.t("entity","search");
x.t("entity","target");
x.t("entity","attribute");
x.t("entity","policycenter");
x.t("entity","matchtype");
x.t("entity","targetentity");
x.t("entity","criteriadef");
x.t("(field)","search");
x.t("except","startswith");
x.t("entity=","name");
x.t("entity=","entityname");
x.t("warning","guidewire");
x.t("warning","add");
x.t("warning","performance");
x.t("installation","warning");
x.t("using","contains");
x.t("bring","down");
x.t("criteria","possible");
x.t("criteria","cause");
x.t("criteria","xml");
x.t("criteria","match");
x.t("criteria","query");
x.t("criteria","entity");
x.t("criteria","adding");
x.t("criteria","entries");
x.t("criterion","performs");
x.t("criterion","uses");
x.t("criterion","element");
x.t("criterion","subelement");
x.t("criterion","attribute");
x.t("criterion","property=");
x.t("criterion","specifies");
x.t("criterion","subelements");
x.t("terms","performance");
x.t("adding","required");
x.t("adding","modifying");
x.t("adding","index");
x.t("modify","required");
x.t("modify","contents");
x.t("documentsearchcriteria","entity");
x.t("definitions","criteriadef");
x.t("definitions","criterion");
x.t("associated","following");
x.t("expert","example");
x.t("restrictive","equality");
x.t("therefore","change");
x.t("var","text_val=eval");
x.t("restrictions","configuring");
x.t("entries","file");
x.t("entityname","targetentity=");
x.t("equality","condition");
x.t("matching","simple");
x.t("specify","mapping");
x.t("attributes","following");
x.t("object","criteriadef");
x.t("subelements","criteriadef");
x.t("subelements","criterion");
x.t("contains","always");
x.t("contains","string");
x.t("contains","match");
}
