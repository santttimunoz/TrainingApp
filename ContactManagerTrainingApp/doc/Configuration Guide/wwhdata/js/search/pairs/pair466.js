function FileData_Pairs(x)
{
x.t("interfaces","extend");
x.t("example","matcher");
x.t("equal","gw.api.logicalmatch.effdatedlogicalmatcher");
x.t("gw.api.logicalmatch.effdatedlogicalmatcher","interface");
x.t("method","determine");
x.t("method","returns");
x.t("version","maxnumberofsidebysidequotes");
x.t("quoting","job");
x.t("quoting","field");
x.t("quoting","side-by-side");
x.t("quoting","selectedversion");
x.t("quoting","object");
x.t("implement","interface");
x.t("describes","object");
x.t("description","sidebyside");
x.t("studio","press");
x.t("related","side-by-side");
x.t("key","points");
x.t("foreign","key");
x.t("job","type");
x.t("job","side-by-side");
x.t("job","configuration");
x.t("job","entity");
x.t("topic","describes");
x.t("derived","property");
x.t("field","description");
x.t("shows","entity");
x.t("implemented","gw.lob.pa.personalvehiclematcher");
x.t("text_val.select","link");
x.t("points","policyperiod");
x.t("interface","studio");
x.t("interface","implemented");
x.t("interface","entities");
x.t("interface","provides");
x.t("interface","islogicalmatcheruntyped");
x.t("interface","effdatedlogicalmatcher");
x.t("press","ctrl");
x.t("type","base");
x.t("open","file");
x.t("extend","logicalmatcher");
x.t("guidewire","policycenter");
x.t("property","returns");
x.t("entities","implement");
x.t("entities","determines");
x.t("entities","logically");
x.t("entities","equivalent");
x.t("entities","gw.api.logicalmatch.logicalmatcher");
x.t("link","directly");
x.t("maxnumberofsidebysidequotes","derived");
x.t("new","entity");
x.t("messsage","policycenter");
x.t("determines","whether");
x.t("file","editor");
x.t("add","new");
x.t("add","matcher");
x.t("guide","guidewire");
x.t("configuring","side-by-side");
x.t("directly","page");
x.t("specified","config.xml");
x.t("true","two");
x.t("personalvehicle","entity");
x.t("personalvehicle.eti","double-click");
x.t("text_val.focus","text_val.select");
x.t("definition","shows");
x.t("base","data");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","methods");
x.t("provides","matching");
x.t("methods","determine");
x.t("islogicalmatcheruntyped","method");
x.t("secondary","value");
x.t("config.xml","job");
x.t("determine","whether");
x.t("determine","two");
x.t("effdatedlogicalmatcher","interface");
x.t("double-click","search");
x.t("search","result");
x.t("fields","related");
x.t("logically","equivalent");
x.t("policycenter","job");
x.t("policycenter","configuration");
x.t("selected","version");
x.t("quotes","specified");
x.t("error","occurred");
x.t("equivalent","interfaces");
x.t("equivalent","method");
x.t("equivalent","side-by-side");
x.t("equivalent","gw.lob.pa.personalvehiclematcher");
x.t("guidewire_selectall","var");
x.t("number","side-by-side");
x.t("gw.api.logicalmatch.logicalmatcher","interface");
x.t("function","guidewire_selectall");
x.t("maximum","number");
x.t("implements","logicalmatcher");
x.t("specifies","whether");
x.t("whether","job");
x.t("whether","entities");
x.t("editor","view");
x.t("row","primary");
x.t("things","logically");
x.t("side-by-side","quoting");
x.t("side-by-side","quotes");
x.t("side-by-side","periods");
x.t("matcher","personalvehicle");
x.t("matcher","package");
x.t("matcher","compares");
x.t("primary","value");
x.t("enter","personalvehicle.eti");
x.t("occurred","messsage");
x.t("configuration","guide");
x.t("configuration","configuring");
x.t("value","equal");
x.t("value","general");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("periods","add");
x.t("gw.lob.pa.personalvehiclematcher","example");
x.t("gw.lob.pa.personalvehiclematcher","class");
x.t("view","implementsinterface");
x.t("page","error");
x.t("ctrl","shift");
x.t("data","entities");
x.t("data","add");
x.t("policyperiod","selected");
x.t("result","open");
x.t("implementsinterface","row");
x.t("two","entities");
x.t("two","things");
x.t("package","entity");
x.t("model","topic");
x.t("model","function");
x.t("model","side-by-side");
x.t("entity","job");
x.t("entity","definition");
x.t("entity","base");
x.t("entity","provides");
x.t("entity","implements");
x.t("entity","following");
x.t("entity","entity");
x.t("following","fields");
x.t("compares","two");
x.t("class","secondary");
x.t("general","matcher");
x.t("selectedversion","foreign");
x.t("returns","true");
x.t("returns","maximum");
x.t("logicalmatcher","interface");
x.t("var","text_val=eval");
x.t("sidebyside","specifies");
x.t("shift","enter");
x.t("object","model");
}
