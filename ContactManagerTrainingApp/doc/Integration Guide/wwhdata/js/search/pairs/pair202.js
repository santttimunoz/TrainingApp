function FileData_Pairs(x)
{
x.t("example","personalautotaxcostdata");
x.t("example","personal");
x.t("differently","cost");
x.t("properties","cost-related");
x.t("properties","common");
x.t("properties","methods");
x.t("properties","cost");
x.t("properties","important");
x.t("properties","amount");
x.t("properties","represent");
x.t("properties","defined");
x.t("properties","prorating");
x.t("policy-related","integrations");
x.t("just","regular");
x.t("defines","methods");
x.t("costdata","create");
x.t("costdata","class");
x.t("costdata","object");
x.t("every","cost");
x.t("every","line-specific");
x.t("needs","know");
x.t("implement","rating");
x.t("integration","guide");
x.t("integration","implementing");
x.t("business","includes");
x.t("business","cost");
x.t("business","subclass");
x.t("create","equivalent");
x.t("built-in","apis");
x.t("built-in","default");
x.t("built-in","abstract");
x.t("normal","cost");
x.t("key","objects");
x.t("related","cost");
x.t("instance","cost");
x.t("regular","cost");
x.t("integrations","rating");
x.t("personalautotaxcost","entity\u2019s");
x.t("personalautotaxcost","entity");
x.t("line","business");
x.t("text_val.select","link");
x.t("personalautotaxcostdata","cost");
x.t("personalautotaxcostdata","class");
x.t("tell","policycenter");
x.t("calls","case");
x.t("rate","values");
x.t("followed","suffix");
x.t("property","personalautotaxcost");
x.t("apis","costdata");
x.t("apis","implement");
x.t("apis","built-in");
x.t("apis","call");
x.t("default","rating");
x.t("guidewire","recommendation");
x.t("objects","contain");
x.t("objects","fixed");
x.t("objects","cost");
x.t("objects","compared");
x.t("objects","represent");
x.t("link","directly");
x.t("new","line");
x.t("details","cost");
x.t("engine","tasks");
x.t("engine","heavily");
x.t("includes","properties");
x.t("includes","cost");
x.t("includes","following");
x.t("cost-related","properties");
x.t("cost-related","property");
x.t("messsage","policycenter");
x.t("list","important");
x.t("need","apis");
x.t("need","call");
x.t("id","key");
x.t("guide","policy-related");
x.t("according","percentage");
x.t("api","methods");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("prorate","according");
x.t("name","personalautotaxcostdata");
x.t("name","entity");
x.t("common","costs");
x.t("tasks","finding");
x.t("part","policycenter");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","tell");
x.t("methods","cost-related");
x.t("methods","constructors");
x.t("methods","override");
x.t("methods","call");
x.t("combine","similar");
x.t("contain","cost");
x.t("contain","function");
x.t("personal","auto");
x.t("policycenter","needs");
x.t("policycenter","integration");
x.t("policycenter","persist");
x.t("rating","integration");
x.t("rating","new");
x.t("rating","engine");
x.t("rating","details");
x.t("rating","architecture");
x.t("effective","every");
x.t("auto","line");
x.t("error","occurred");
x.t("equivalent","properties");
x.t("equivalent","cost");
x.t("know","combine");
x.t("fixed","id");
x.t("cost","effective");
x.t("cost","core");
x.t("cost","data");
x.t("cost","entity");
x.t("guidewire_selectall","var");
x.t("entity\u2019s","corresponding");
x.t("constructors","override");
x.t("function","guidewire_selectall");
x.t("line-specific","cost");
x.t("finding","related");
x.t("may","need");
x.t("implementing","rating");
x.t("mimics","cost");
x.t("persist","costdata");
x.t("important","properties");
x.t("important","cost-related");
x.t("important","note");
x.t("term","cost");
x.t("override","api");
x.t("override","methods");
x.t("override","cost");
x.t("abstract","rating");
x.t("occurred","messsage");
x.t("compared","normal");
x.t("architecture","guidewire");
x.t("amount","rate");
x.t("instances","cost");
x.t("instances","work");
x.t("similar","cost");
x.t("core","properties");
x.t("recommendation","abstractratingengine");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("represent","links");
x.t("page","error");
x.t("persists","cost");
x.t("help","rating");
x.t("data","example");
x.t("data","apis");
x.t("data","objects");
x.t("data","entity");
x.t("data","class");
x.t("data","object");
x.t("inherits","built-in");
x.t("defined","corresponding");
x.t("values","just");
x.t("values","prorate");
x.t("case","typically");
x.t("called","personalautotaxcost");
x.t("percentage","term");
x.t("note","properties");
x.t("heavily","modify");
x.t("work","differently");
x.t("typically","need");
x.t("subclass","costdata");
x.t("costs","cost");
x.t("call","every");
x.t("call","apis");
x.t("entity","example");
x.t("entity","properties");
x.t("entity","instance");
x.t("entity","line");
x.t("entity","followed");
x.t("entity","list");
x.t("entity","name");
x.t("entity","part");
x.t("entity","cost");
x.t("entity","instances");
x.t("entity","called");
x.t("entity","including");
x.t("corresponding","cost");
x.t("following","important");
x.t("links","details");
x.t("links","entity");
x.t("class","defines");
x.t("class","built-in");
x.t("class","includes");
x.t("class","name");
x.t("class","equivalent");
x.t("class","mimics");
x.t("class","help");
x.t("class","inherits");
x.t("abstractratingengine","calls");
x.t("modify","may");
x.t("var","text_val=eval");
x.t("including","properties");
x.t("suffix","data");
x.t("prorating","amount");
x.t("object","costdata");
x.t("object","details");
x.t("object","includes");
x.t("object","methods");
x.t("object","cost");
x.t("object","persists");
x.t("object","class");
}
