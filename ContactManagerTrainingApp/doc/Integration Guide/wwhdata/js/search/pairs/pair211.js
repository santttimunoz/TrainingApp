function FileData_Pairs(x)
{
x.t("example","last");
x.t("example","personal");
x.t("example","means");
x.t("example","typical");
x.t("complex","personal");
x.t("complex","code");
x.t("passed","constructor");
x.t("passed","rateslice");
x.t("looks","first");
x.t("looks","private");
x.t("looks","override");
x.t("root","type");
x.t("papvehiclecostnew","cov.personalvehicle.costnew");
x.t("parameter","determine");
x.t("properties","constructor");
x.t("properties","cost");
x.t("properties","important");
x.t("properties","case");
x.t("properties","vehicle\u2019s");
x.t("construct","effdate");
x.t("construct","personalautocovcost");
x.t("construct","versionlist");
x.t("assertkeytype","vehicleidarg");
x.t("assertkeytype","covidarg");
x.t("method","looks");
x.t("method","needs");
x.t("method","implement");
x.t("method","personalautocovcostdata");
x.t("method","copying");
x.t("method","calls");
x.t("method","pasystableratingengine");
x.t("method","finds");
x.t("method","resulting");
x.t("method","common");
x.t("method","copies");
x.t("method","first");
x.t("method","line-specific");
x.t("method","already");
x.t("method","called");
x.t("method","following");
x.t("method","using");
x.t("dates","just");
x.t("dates","modifier");
x.t("ratepacollisioncov","cov");
x.t("ratepacollisioncov","(cov)");
x.t("age","vehicle");
x.t("vehicle-level","line-level");
x.t("columns","private");
x.t("columns","actual");
x.t("penalties","taxes");
x.t("discount","period");
x.t("discount","sums");
x.t("discount","costs");
x.t("discount","notable");
x.t("policy-related","integrations");
x.t("version","just");
x.t("version","lists");
x.t("version","list");
x.t("version","check");
x.t("version","sets");
x.t("just","needs");
x.t("just","traverse");
x.t("just","vehicle");
x.t("just","using");
x.t("rather","actual");
x.t("pattern","built-in");
x.t("pattern","iscostversionlistforvehicle");
x.t("protected","override");
x.t("needs","populate");
x.t("needs","extract");
x.t("implement","costdata");
x.t("implement","copying");
x.t("costdata","objects");
x.t("costdata","adjacent");
x.t("costdata","baserate");
x.t("lists","finds");
x.t("lists","thus");
x.t("nothing","otherwise");
x.t("within","loop");
x.t("within","rateslice");
x.t("parentalcov","return");
x.t("ratingdate","getagefactor");
x.t("ratingdate","_referencedateplugin.getcoveragereferencedate");
x.t("ratingdate","getuwcompanyratefactor");
x.t("ratingdate","getnolossdiscountfactor");
x.t("ratingdate","getratefactorinrange");
x.t("ratingdate","getdriverratingfactor");
x.t("ratingdate","var");
x.t("multipolicy","discount");
x.t("multipolicy","discounts");
x.t("personalautocovcostdata","ratewindow");
x.t("personalautocovcostdata","key");
x.t("personalautocovcostdata","look");
x.t("personalautocovcostdata","close");
x.t("personalautocovcostdata","pasystableratingengine");
x.t("personalautocovcostdata","standard");
x.t("personalautocovcostdata","cost");
x.t("personalautocovcostdata","function");
x.t("personalautocovcostdata","extends");
x.t("personalautocovcostdata","probably");
x.t("integration","guide");
x.t("integration","rating");
x.t("create","information");
x.t("alternate","constructor");
x.t("question","override");
x.t("question","traversing");
x.t("business","slice");
x.t("built-in","methods");
x.t("built-in","rating");
x.t("cov.pattern","coveragepattern");
x.t("ratewindow","method");
x.t("key","objects");
x.t("key","covidarg");
x.t("key","values");
x.t("key","note");
x.t("key","var");
x.t("key","object");
x.t("key","super");
x.t("ensures","fixed");
x.t("related","discussion");
x.t("normal","straightforward");
x.t("cov.personalvehicle.paline","ratingdate");
x.t("various","modifiers");
x.t("instance","persists");
x.t("avoids","errors");
x.t("arguments","construct");
x.t("foreign","keys");
x.t("void","super.setspecificfieldsoncost");
x.t("covvl","effdatedutil.createversionlist");
x.t("modifiers","based");
x.t("apply","percentage");
x.t("integrations","rating");
x.t("referenced","entity");
x.t("try","find");
x.t("_cov.versionlist","however");
x.t("papcollrate","base");
x.t("double","cov");
x.t("demonstration","system");
x.t("tables","used");
x.t("line","example");
x.t("line","method");
x.t("line","setspecificfieldsoncost");
x.t("line","cost");
x.t("line","personalautoline");
x.t("uses","parameter");
x.t("super.setspecificfieldsoncost","line");
x.t("traverse","graph");
x.t("papcolldeductible","cov.pacolldeductibleterm.optionvalue.optioncode");
x.t("last","line");
x.t("later","merge");
x.t("look","personalautocovcostdata");
x.t("look","methods");
x.t("look","standard");
x.t("look","up");
x.t("look","rating");
x.t("text_val.select","link");
x.t("errors","switching");
x.t("copying","custom");
x.t("points","vehicle");
x.t("effdatedutil.createversionlist","method");
x.t("effdatedutil.createversionlist","line.branch");
x.t("(chronological)","version");
x.t("patowinglaborcov","return");
x.t("statement","using");
x.t("cost.basis","//");
x.t("year","cost.standardtermamount");
x.t("adjrate.setscale","roundinglevel");
x.t("essentially","slice");
x.t("mode","however");
x.t("close","look");
x.t("type","version");
x.t("type","avoids");
x.t("type","personalautocovversionlist");
x.t("type","coverage");
x.t("type","personalautocovcost");
x.t("lots","types");
x.t("populate","line-specific");
x.t("cost.copystandardcolumnstoactualcolumns","end");
x.t("calculations","apply");
x.t("time","cancellation");
x.t("time","applies");
x.t("time","rating");
x.t("time","including");
x.t("expdate","assertkeytype");
x.t("expdate","date");
x.t("calls","common");
x.t("calls","standard");
x.t("calls","setfieldvalue");
x.t("calls","ratevehiclecoverage");
x.t("calls","private");
x.t("calls","superclass");
x.t("fairly","standard");
x.t("coverage\u2019s","fixedid");
x.t("(revisionable)","entities");
x.t("however","just");
x.t("however","code");
x.t("rate","window");
x.t("rate","coverage");
x.t("rate","combination");
x.t("rate","end");
x.t("rate","slice");
x.t("rate","factor");
x.t("getagefactor","cov.personalvehicle");
x.t("typesafe","compile");
x.t("property","coverage\u2019s");
x.t("property","fixed");
x.t("property","keyvalues");
x.t("encapsulated","key");
x.t("entities","store");
x.t("default","pcfinancialslogger.logdebug");
x.t("populatecostdata","method");
x.t("populatecostdata","cost");
x.t("assumes","vehicle");
x.t("penalty","simply");
x.t("link","directly");
x.t("link","cost");
x.t("objects","passed");
x.t("objects","construct");
x.t("objects","getversionedcosts");
x.t("objects","contain");
x.t("objects","next");
x.t("objects","cost");
x.t("objects","extends");
x.t("objects","abstractratingengine");
x.t("want","pacostdata");
x.t("details","method");
x.t("details","personalautocovcostdata");
x.t("details","setfieldvalue");
x.t("details","rating");
x.t("branch","fixed");
x.t("==","_vehicleid");
x.t("loop","loop");
x.t("loop","coverage");
x.t("loop","vehicle");
x.t("loop","across");
x.t("engine","look");
x.t("_referencedateplugin.getcoveragereferencedate","cov.pattern");
x.t("start","cov.slicedate");
x.t("start","next");
x.t("start","end");
x.t("start","slice");
x.t("start","date");
x.t("new","personalvehiclecovcostdata");
x.t("vehicleidarg","key");
x.t("vehicleidarg","personalvehicle");
x.t("vehicleidarg","_covid");
x.t("getversionedcosts","method");
x.t("getversionedcosts","line");
x.t("personalautocovversionlist","next");
x.t("personalautocovversionlist","return");
x.t("pasystableratingengine","rates");
x.t("pasystableratingengine","class");
x.t("messsage","policycenter");
x.t("generics","gosu");
x.t("generics","syntax");
x.t("generics","particular");
x.t("indicates","gosu");
x.t("proper","type");
x.t("finds","corresponds");
x.t("finds","versionlist");
x.t("list","costdata");
x.t("list","typed");
x.t("list","com.guidewire.commons.entity.effdate.effdatedversionlist");
x.t("list","cost");
x.t("list","object");
x.t("(costvl)",".tolist");
x.t("need","complex");
x.t("roundingmode.half_up","cost.copystandardcolumnstoactualcolumns");
x.t("id","protected");
x.t("id","key");
x.t("id","coverage");
x.t("id","keys");
x.t("ratepacomprehensivecov","(cov)");
x.t("add","list");
x.t("cancellation","penalties");
x.t("cancellation","penalty");
x.t("sum","costs");
x.t("tax","calculations");
x.t("guide","policy-related");
x.t("guide","class");
x.t("(non-core)","properties");
x.t("applies","discount");
x.t("applies","flat");
x.t("applies","vehicle");
x.t("check","fixedid");
x.t("simple","need");
x.t("getuwcompanyratefactor","(cov.personalvehicle.paline)");
x.t("setspecificfieldsoncost","method");
x.t("setspecificfieldsoncost","line");
x.t("flat","percentage");
x.t("directly","page");
x.t("bracket","notation");
x.t("_vehicleid","key");
x.t("_vehicleid","vehicleidarg");
x.t("_vehicleid","_covid");
x.t("_vehicleid","versioned");
x.t("_vehicleid","c.personalvehicle.fixedid");
x.t("_vehicleid","note");
x.t("personalvehicle","assertkeytype");
x.t("personalvehicle","_vehicleid");
x.t("line.branch","_covid");
x.t("converts","cost");
x.t("text_val.focus","text_val.select");
x.t("definition","pacostdata");
x.t("resulting","version");
x.t("costvl.allversions.first","return");
x.t("pacollisioncov","return");
x.t("pacollisioncov","personalvehiclecovcostdata");
x.t("ratepatowinglaborcov","(cov)");
x.t("common","vehicle-level");
x.t("common","ratevehiclecoverage_impl");
x.t("gosu","generics");
x.t("gosu","reference");
x.t("follows","class");
x.t("constructor","ensures");
x.t("constructor","proper");
x.t("constructor","initializes");
x.t("constructor","populates");
x.t("constructor","work");
x.t("typed","root");
x.t("corresponds","vehicle");
x.t("cov.personalvehicle","ratingdate");
x.t("cov.personalvehicle","var");
x.t("getnolossdiscountfactor","cov.personalvehicle.paline");
x.t("declares","superclass");
x.t("angle","bracket");
x.t("custom","properties");
x.t("com.guidewire.commons.entity.effdate.effdatedversionlist","var");
x.t("argument","passed");
x.t("base","ratingdate");
x.t("base","rate");
x.t("(start)","var");
x.t("cost.numdaysinratedterm","this.numdaysincoverageratedterm");
x.t("modifier","itself");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","converts");
x.t("methods","gw.lob.pa.rating.personalautocovcostdata");
x.t("boolean","var");
x.t("useful","details");
x.t("window","method");
x.t("discounts","cancellation");
x.t("gw.lob.pa.rating.personalautocovcostdata","class");
x.t("generic","class");
x.t("determine","effective");
x.t("determine","cost");
x.t("determine","given");
x.t("standard","columns");
x.t("standard","pattern");
x.t("standard","populatecostdata");
x.t("standard","constructor");
x.t("standard","collision");
x.t("find","actual");
x.t("up","base");
x.t("up","point");
x.t("up","rates");
x.t("allows","definition");
x.t("easiest","approach");
x.t("entity.windowed.personalautocovcostversionlist","boolean");
x.t("typeis","personalautocovcost");
x.t("diver\u2019s","record");
x.t("sets","coverage");
x.t("sets","effective");
x.t("sets","term");
x.t("lines","business");
x.t("record","loss");
x.t("copies","standard");
x.t("copies","rates");
x.t("personal","auto");
x.t("contain","fixed");
x.t("switching","order");
x.t("coverage","rather");
x.t("coverage","points");
x.t("coverage","effdatedutil.createversionlist");
x.t("coverage","fairly");
x.t("coverage","id");
x.t("coverage","argument");
x.t("coverage","fixed");
x.t("coverage","private");
x.t("coverage","vehicle");
x.t("coverage","rateslice");
x.t("coverage","costs");
x.t("personalautocovcostversionlist","applies");
x.t("chosen","deductible");
x.t("cov.slicedate","var");
x.t("policycenter","integration");
x.t("rating","integration");
x.t("rating","line");
x.t("rating","engine");
x.t("rating","multiply");
x.t("rating","code");
x.t("rating","typeof");
x.t("rating","coverages");
x.t("auto","line");
x.t("auto","close");
x.t("auto","rating");
x.t("auto","cost");
x.t("auto","collision");
x.t("setfieldvalue","method");
x.t("setfieldvalue","easiest");
x.t("setfieldvalue","policy");
x.t("store","value");
x.t("complicated","method");
x.t("effective","dates");
x.t("effective","span");
x.t("effective","date");
x.t("lastly","abstractratingengine");
x.t("error","occurred");
x.t("point","time");
x.t("syntax","follows");
x.t("next","look");
x.t("next","code");
x.t("next","slice");
x.t("next","abstractratingengine");
x.t("rateparentalcov","(cov)");
x.t("getratefactor","papcollrate");
x.t("getratefactor","papcolldeductible");
x.t("getratefactorinrange","papvehiclecostnew");
x.t("cost.standardbaserate","baserate");
x.t("fully-populated","personalvehiclecovcostdata");
x.t("period","time");
x.t("finally","tax");
x.t("means","want");
x.t("fixed","id");
x.t("fixed","ids");
x.t("(c)","_vehicleid");
x.t("first","(chronological)");
x.t("first","calls");
x.t("first","figure");
x.t("ratevehiclecoverage","coverage");
x.t("ratevehiclecoverage","cov");
x.t("ratevehiclecoverage","call");
x.t("multiply","factors");
x.t("cost.standardtermamount","adjrate.setscale");
x.t("guidewire_selectall","var");
x.t("cost","method");
x.t("cost","version");
x.t("cost","just");
x.t("cost","costdata");
x.t("cost","personalautocovcostdata");
x.t("cost","start");
x.t("cost","new");
x.t("cost","diver\u2019s");
x.t("cost","sets");
x.t("cost","coverage");
x.t("cost","lastly");
x.t("cost","row");
x.t("cost","cost.setfieldvalue");
x.t("cost","data");
x.t("cost","personalautocovcost");
x.t("cost","baserate");
x.t("cost","entity");
x.t("written","general");
x.t("constructors","personalautocovcostdata");
x.t("constructors","constructors");
x.t("constructors","cost");
x.t("initializes","properties");
x.t("personalautocov","_vehicleid");
x.t("personalautocov","_covid");
x.t("personalautocov","object");
x.t("c.personalautocov.fixedid","information");
x.t("keyvalues","list");
x.t("line-level","coverage");
x.t("line-level","coverages");
x.t("computed","up");
x.t("function","ratepacollisioncov");
x.t("function","populatecostdata");
x.t("function","getversionedcosts");
x.t("function","setspecificfieldsoncost");
x.t("function","sets");
x.t("function","ratevehiclecoverage");
x.t("function","guidewire_selectall");
x.t("function","function");
x.t("function","ratevehiclecoverage_impl");
x.t("function","iscostversionlistforvehicle");
x.t("resource-intensive","error-prone");
x.t("approach","note");
x.t("casts","specific");
x.t("firstversion","costvl.allversions.first");
x.t("firstversion","typeis");
x.t("implements","rateslice");
x.t("this.numdaysincoverageratedterm","cost.standardbaserate");
x.t("adjacent","costdata");
x.t("particular","example");
x.t("covidarg","alternate");
x.t("covidarg","key");
x.t("covidarg","personalautocov");
x.t("line-specific","(non-core)");
x.t("line-specific","rating");
x.t("cannot","call");
x.t("private","method");
x.t("private","function");
x.t("canceled","nothing");
x.t("combination","line-level");
x.t("straightforward","useful");
x.t("getnextslicedateafter","(start)");
x.t("row","superclass");
x.t("superclass","version");
x.t("superclass","gosu");
x.t("superclass","constructor");
x.t("types","data");
x.t("compile","time");
x.t("populates","cost");
x.t("covvl.costs.where","costvl");
x.t("pacomprehensivecov","return");
x.t("things","chosen");
x.t("loss","history");
x.t("important","details");
x.t("calling","setfieldvalue");
x.t("switch","statement");
x.t("switch","typeof");
x.t("factors","various");
x.t("simply","applies");
x.t("code","construct");
x.t("code","within");
x.t("code","uses");
x.t("code","calls");
x.t("code","add");
x.t("code","simple");
x.t("code","determine");
x.t("code","personal");
x.t("code","casts");
x.t("code","gets");
x.t("reference","guide");
x.t("reference","entity");
x.t("effdate","expdate");
x.t("effdate","date");
x.t("firstversion.vehicle.fixedid","==");
x.t("end","getnextslicedateafter");
x.t("end","cov.fixedid");
x.t("end","result");
x.t("end","date");
x.t("ids","encapsulated");
x.t("ids","code");
x.t("_covid","key");
x.t("_covid","personalautocovversionlist");
x.t("_covid","c.personalautocov.fixedid");
x.t("_covid","covidarg");
x.t("_covid","cost.setfieldvalue");
x.t("_covid","note");
x.t("vehicle","looks");
x.t("vehicle","age");
x.t("vehicle","within");
x.t("vehicle","question");
x.t("vehicle","year");
x.t("vehicle","rate");
x.t("vehicle","loop");
x.t("vehicle","coverage");
x.t("vehicle","fixed");
x.t("vehicle","cost");
x.t("vehicle","private");
x.t("vehicle","ids");
x.t("effective-dated","(revisionable)");
x.t("thus","calling");
x.t("thus","code");
x.t("override","property");
x.t("override","function");
x.t("return","ratepacollisioncov");
x.t("return","ratepacomprehensivecov");
x.t("return","_vehicleid");
x.t("return","ratepatowinglaborcov");
x.t("return","rateparentalcov");
x.t("return","cost");
x.t("return","firstversion");
x.t("return","covvl.costs.where");
x.t("return","null");
x.t("return","ratevehiclecoverage_impl");
x.t("sliced","appropriate");
x.t("collision","coverage");
x.t("term","amount");
x.t("sums","costs");
x.t("given","personalautocovcostversionlist");
x.t("bigdecimal","cost.numdaysinratedterm");
x.t("bigdecimal","adjrate");
x.t("bigdecimal","personalvehiclecovcostdata");
x.t("database","rate");
x.t("actual","columns");
x.t("actual","personalautocov");
x.t("actual","reference");
x.t("(cov.personalvehicle.paline)","return");
x.t("span","discount");
x.t("span","cost");
x.t("roundinglevel","roundingmode.half_up");
x.t("occurred","messsage");
x.t("existing","cost");
x.t("subtype-specific","properties");
x.t("typeof","cov");
x.t("null","switch");
x.t("keys","link");
x.t("keys","effective-dated");
x.t("instances","related");
x.t("instances","key");
x.t("instances","details");
x.t("discussion","pattern");
x.t("discussion","fixed");
x.t("cost.setfieldvalue","personalvehicle");
x.t("cost.setfieldvalue","personalautocov");
x.t("cov","ratingdate");
x.t("cov","pacollisioncov");
x.t("cov","return");
x.t("cov","personalvehiclecov");
x.t("cov","baserate");
x.t("cov","case");
x.t("cov.pacolldeductibleterm.optionvalue.optioncode","ratingdate");
x.t("amount","copies");
x.t("value","fixedid");
x.t("similar","lines");
x.t("(cov)","default");
x.t("(cov)","switch");
x.t("(cov)","case");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","properties");
x.t("specific","type");
x.t("already","sliced");
x.t("coveragepattern","cov.personalvehicle");
x.t("figure","date");
x.t("implementation","looks");
x.t("extends","pacostdata");
x.t("versioned","costs");
x.t("assertslicemode","(cov)");
x.t("rates","essentially");
x.t("rates","next");
x.t("rates","cost");
x.t("rates","following");
x.t("cost.standardadjrate","adjrate");
x.t("notation","indicates");
x.t("subtype","create");
x.t("rateslice","method");
x.t("personalvehiclecov","personalvehiclecovcostdata");
x.t("personalvehiclecov","baserate");
x.t("page","error");
x.t("fixedid","referenced");
x.t("fixedid","property");
x.t("fixedid","associated");
x.t("personalautoline","list");
x.t("personalautoline","cost");
x.t(".tolist","case");
x.t("persists","database");
x.t("data","typesafe");
x.t("data","objects");
x.t("data","setspecificfieldsoncost");
x.t("data","constructors");
x.t("data","subclass");
x.t("data","object");
x.t("personalautocovcost","void");
x.t("personalautocovcost","angle");
x.t("personalautocovcost","allows");
x.t("personalautocovcost","firstversion.vehicle.fixedid");
x.t("personalautocovcost","class");
x.t("personalautocovcost","super");
x.t("information","generics");
x.t("information","cost");
x.t("graph","normal");
x.t("graph","resource-intensive");
x.t("versionlist","existing");
x.t("versionlist","object");
x.t("typical","first");
x.t("probably","complicated");
x.t("costvl","entity.windowed.personalautocovcostversionlist");
x.t("costvl","iscostversionlistforvehicle");
x.t("appropriate","effective");
x.t("personalvehiclecovcostdata","start");
x.t("personalvehiclecovcostdata","code");
x.t("personalvehiclecovcostdata","assertslicemode");
x.t("personalvehiclecovcostdata","var");
x.t("baserate","getratefactor");
x.t("baserate","bigdecimal");
x.t("baserate","cost.standardadjrate");
x.t("baserate","adjrate");
x.t("adjrate","cost.basis");
x.t("adjrate","return");
x.t("adjrate","bigdecimal");
x.t("adjrate","baserate");
x.t("adjrate","structure");
x.t("cov.fixedid","populatecostdata");
x.t("result","ratevehiclecoverage");
x.t("pacostdata","generic");
x.t("pacostdata","written");
x.t("pacostdata","personalautocovcost");
x.t("pacostdata","class");
x.t("case","method");
x.t("case","parentalcov");
x.t("case","look");
x.t("case","patowinglaborcov");
x.t("case","pacollisioncov");
x.t("case","pacomprehensivecov");
x.t("case","vehicle");
x.t("c.personalvehicle.fixedid","_covid");
x.t("policy","auto");
x.t("values","personalautocovcostdata");
x.t("values","cost");
x.t("slice","mode");
x.t("slice","rate");
x.t("slice","details");
x.t("slice","rating");
x.t("slice","canceled");
x.t("slice","date");
x.t("getdriverratingfactor","cov.personalvehicle");
x.t("called","iscostversionlistforvehicle");
x.t("structure","example");
x.t("structure","similar");
x.t("ratevehiclecoverage_impl","function");
x.t("ratevehiclecoverage_impl","cov");
x.t("deductible","vehicle");
x.t("taxes","multipolicy");
x.t("note","key");
x.t("note","copying");
x.t("note","fixed");
x.t("note","discussion");
x.t("date","look");
x.t("date","expdate");
x.t("date","start");
x.t("date","vehicleidarg");
x.t("date","span");
x.t("date","implementation");
x.t("date","slice");
x.t("iscostversionlistforvehicle","method");
x.t("iscostversionlistforvehicle","(costvl)");
x.t("iscostversionlistforvehicle","costvl");
x.t("iscostversionlistforvehicle","work");
x.t("otherwise","loop");
x.t("pcfinancialslogger.logdebug","rating");
x.t("history","underwriting");
x.t("underwriting","company");
x.t("percentage","sum");
x.t("work","version");
x.t("work","lots");
x.t("work","determine");
x.t("work","class");
x.t("based","branch");
x.t("based","things");
x.t("based","existing");
x.t("algorithm","structure");
x.t("cov.personalvehicle.costnew","double");
x.t("factor","demonstration");
x.t("itself","effective");
x.t("vehicle\u2019s","fixedid");
x.t("order","arguments");
x.t("subclass","rate");
x.t("subclass","specific");
x.t("costs","method");
x.t("costs","personalautocovcostdata");
x.t("costs","point");
x.t("costs","finally");
x.t("costs","computed");
x.t("costs","including");
x.t("call","_cov.versionlist");
x.t("call","fully-populated");
x.t("merge","costdata");
x.t("corresponding","entity");
x.t("entity","question");
x.t("entity","instance");
x.t("entity","type");
x.t("entity","instances");
x.t("entity","subtype");
x.t("entity","graph");
x.t("entity","alternative");
x.t("traversing","entity");
x.t("following","multipolicy");
x.t("following","general");
x.t("system","tables");
x.t("used","personal");
x.t("class","complex");
x.t("class","personalautocovcostdata");
x.t("class","later");
x.t("class","declares");
x.t("class","implements");
x.t("class","personalautocovcost");
x.t("class","work");
x.t("class","parameterized");
x.t("class","contains");
x.t("general","work");
x.t("general","algorithm");
x.t("using","type");
x.t("using","effective");
x.t("using","fixed");
x.t("//","assumes");
x.t("alternative","try");
x.t("error-prone","thus");
x.t("across","line-level");
x.t("company","example");
x.t("abstractratingengine","built-in");
x.t("abstractratingengine","class");
x.t("abstractratingengine","prorates");
x.t("associated","vehicle");
x.t("prorates","cost");
x.t("var","ratingdate");
x.t("var","covvl");
x.t("var","start");
x.t("var","_vehicleid");
x.t("var","text_val=eval");
x.t("var","cost");
x.t("var","firstversion");
x.t("var","end");
x.t("var","_covid");
x.t("var","baserate");
x.t("var","adjrate");
x.t("parameterized","corresponding");
x.t("notable","rates");
x.t("including","discount");
x.t("including","cancellation");
x.t("contains","properties");
x.t("object","foreign");
x.t("object","setspecificfieldsoncost");
x.t("object","constructors");
x.t("object","cost");
x.t("object","cannot");
x.t("object","return");
x.t("object","based");
x.t("object","var");
x.t("object","object");
x.t("super","(c)");
x.t("super","effdate");
x.t("extract","subtype-specific");
x.t("gets","list");
x.t("coverages","within");
x.t("coverages","case");
}
