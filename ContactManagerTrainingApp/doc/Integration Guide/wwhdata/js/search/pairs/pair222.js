function FileData_Pairs(x)
{
x.t("reinsurable","reinsurable");
x.t("reinsurable","passed");
x.t("reinsurable","parameter");
x.t("reinsurable","currency");
x.t("reinsurable","descendant");
x.t("reinsurable","assume");
x.t("reinsurable","boolean");
x.t("reinsurable","risks");
x.t("reinsurable","policycenter");
x.t("reinsurable","choosing");
x.t("reinsurable","considers");
x.t("reinsurable","values");
x.t("reinsurable","risk");
x.t("reinsurable","date");
x.t("example","specify");
x.t("passed","reinsurable");
x.t("active","programs");
x.t("years","search");
x.t("properties","main");
x.t("properties","following");
x.t("method","always");
x.t("method","program");
x.t("method","uses");
x.t("method","calculates");
x.t("method","evaluates");
x.t("method","determines");
x.t("method","up");
x.t("method","attempts");
x.t("method","calculate");
x.t("method","return");
x.t("method","matches");
x.t("method","choose");
x.t("method","ireinsuranceconfigplugin");
x.t("method","returns");
x.t("method","specify");
x.t("dates","new");
x.t("dates","intervals");
x.t("programcancoverreinsurable","plugin");
x.t("programcancoverreinsurable","program");
x.t("parameter","method");
x.t("parameter","description");
x.t("parameter","program");
x.t("policy-related","integrations");
x.t("recalculating","ceded");
x.t("reinsuranceeffectivetime","method");
x.t("reinsuranceeffectivetime","property");
x.t("reinsuranceeffectivetime","date");
x.t("integration","guide");
x.t("integration","reinsurance");
x.t("studio","navigating");
x.t("studio","modify");
x.t("searchtype","searchtype");
x.t("searchtype","riprogram");
x.t("searchtype","stage");
x.t("description","candidates");
x.t("related","reinsurable");
x.t("related","reinsurance");
x.t("always","creates");
x.t("always","returns");
x.t("once","search");
x.t("covers","reinsurable");
x.t("covers","given");
x.t("surplusritreaty","monetaryamount");
x.t("noon","instead");
x.t("apply","program");
x.t("plugin","method");
x.t("plugin","plugin");
x.t("plugin","methods");
x.t("plugin","implementations");
x.t("plugin","policycenter");
x.t("plugin","reinsurance");
x.t("plugin","function");
x.t("plugin","implementation");
x.t("plugin","specify");
x.t("integrations","reinsurance");
x.t("creates","reinsurable");
x.t("currency","reinsurable");
x.t("currency","reinsurance");
x.t("program","example");
x.t("program","reinsurable");
x.t("program","parameter");
x.t("program","method");
x.t("program","covers");
x.t("program","property");
x.t("program","among");
x.t("program","riprogram");
x.t("program","cover");
x.t("program","chosen");
x.t("program","first");
x.t("program","function");
x.t("program","ririsk");
x.t("program","already");
x.t("program","ireinsuranceconfigplugin");
x.t("program","associated");
x.t("generating","risk");
x.t("pair","inclusion");
x.t("uses","maximum");
x.t("uses","gw.api.database.sequenceutil");
x.t("choosereinsuranceprogram","method");
x.t("choosereinsuranceprogram","candidates");
x.t("text_val.select","link");
x.t("configurable","behavior");
x.t("calculates","no");
x.t("calculates","values");
x.t("descendant","type");
x.t("statement","return");
x.t("statement","call");
x.t("support","reinsurance");
x.t("necessary","policycenter");
x.t("gross","retention");
x.t("type","reinsurable");
x.t("type","base");
x.t("type","riagreement");
x.t("type","override");
x.t("type","given");
x.t("type","policyrisk");
x.t("type","differs");
x.t("change","method");
x.t("change","impact");
x.t("change","implementation");
x.t("evaluates","method");
x.t("best","program");
x.t("times","once");
x.t("prior_year_programs","method");
x.t("time","new");
x.t("time","component");
x.t("time","begin");
x.t("time","portion");
x.t("calls","method");
x.t("calls","programcancoverreinsurable");
x.t("calls","choosereinsuranceprogram");
x.t("calls","gettargetmaxretention");
x.t("calls","shouldpolicytermgeneratereinsurables");
x.t("calls","getoverridecededamountforsurplusritreaty");
x.t("calls","getdefaultgrossretention");
x.t("calls","getinclusiontype");
x.t("calls","generaterisknumber");
x.t("net","retention");
x.t("navigating","project");
x.t("extend","specific");
x.t("bound","branches");
x.t("centralize","configurable");
x.t("default","gross");
x.t("default","inclusion");
x.t("default","policycenter");
x.t("default","value");
x.t("default","implementation");
x.t("default","values");
x.t("default","behavior");
x.t("multiplied","gross");
x.t("property","reinsuranceeffectivetime");
x.t("property","time");
x.t("property","provides");
x.t("entities","related");
x.t("gettargetmaxretention","method");
x.t("gettargetmaxretention","ririsk");
x.t("link","directly");
x.t("want","reinsurance");
x.t("want","override");
x.t("new","reinsurable");
x.t("new","reinsurance");
x.t("new","policy");
x.t("getting","default");
x.t("getting","inclusion");
x.t("getting","targeted");
x.t("getting","override");
x.t("surplus","reinsurance");
x.t("surplus","treaty");
x.t("riattachmentinclusiontype","method");
x.t("details","reinsurable");
x.t("single","gosu");
x.t("among","candidates");
x.t("amounts","reinsurable");
x.t("amounts","surplus");
x.t("amounts","affected");
x.t("agreements","generating");
x.t("agreements","getting");
x.t("agreements","policycenter");
x.t("includes","draft");
x.t("premium","amounts");
x.t("riprogram","reinsurable");
x.t("riprogram","parameters");
x.t("riprogram","represents");
x.t("messsage","policycenter");
x.t("policies","reinsurable");
x.t("policies","reinsurance");
x.t("file","depending");
x.t("list","candidate");
x.t("list","reinsurance");
x.t("list","ririsk");
x.t("determines","targeted");
x.t("need","generated");
x.t("ireinsuranceconfigplugin.gwp","configuring");
x.t("during","specific");
x.t("group","specific");
x.t("assign","best");
x.t("candidate","reinsurance");
x.t("guide","policy-related");
x.t("guide","reinsurance");
x.t("assume","program");
x.t("filter","list");
x.t("configuring","multicurrency");
x.t("large","includes");
x.t("riskversionlist","list");
x.t("java.lang.string","method");
x.t("java.lang.string","unique");
x.t("directly","define");
x.t("directly","page");
x.t("requires","recalculating");
x.t("specified","value");
x.t("true","program");
x.t("true","default");
x.t("true","policy");
x.t("text_val.focus","text_val.select");
x.t("obtain","default");
x.t("obtain","target");
x.t("obtain","unique");
x.t("obtain","risk");
x.t("no","amount");
x.t("stored","policycenter");
x.t("changed","policy");
x.t("12:01","return");
x.t("12:01","date");
x.t("gosu","statement");
x.t("base","configuration");
x.t("component","effective");
x.t("cover","reinsurable");
x.t("cover","particular");
x.t("regions","default");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","reinsuranceconfigplugin.gs");
x.t("provides","constant");
x.t("provides","ireinsuranceconfigplugin");
x.t("window","configuration");
x.t("methods","properties");
x.t("methods","reinsurance");
x.t("boolean","method");
x.t("boolean","default");
x.t("prior","years");
x.t("parameters","parameter");
x.t("find","registry");
x.t("implementations","policycenter");
x.t("determine","reinsurable");
x.t("determine","program");
x.t("up","three");
x.t("attempts","apply");
x.t("attempts","assign");
x.t("search","best");
x.t("search","type");
x.t("search","policycenter");
x.t("active_programs","draft_programs");
x.t("target","net");
x.t("target","max");
x.t("programs","new");
x.t("programs","agreements");
x.t("programs","cover");
x.t("programs","prior");
x.t("programs","finally");
x.t("programs","applicable");
x.t("programs","correct");
x.t("programs","draft");
x.t("riagreement","riattachmentinclusiontype");
x.t("riagreement","ririsk");
x.t("lines","multiplied");
x.t("string","replace");
x.t("examine","reinsurable");
x.t("risks","related");
x.t("risks","getting");
x.t("risks","stored");
x.t("risks","find");
x.t("risks","policycenter");
x.t("risks","policy");
x.t("retention","reinsurable");
x.t("retention","amounts");
x.t("retention","inclusion");
x.t("retention","ceded");
x.t("retention","return");
x.t("retention","given");
x.t("retention","amount");
x.t("inclusion","type");
x.t("inclusion","types");
x.t("inclusion","appear");
x.t("earlier","default");
x.t("ricoveragegroup","type");
x.t("coverage","group");
x.t("three","times");
x.t("chosen","searchtype");
x.t("chosen","reinsurance");
x.t("policycenter","integration");
x.t("policycenter","studio");
x.t("policycenter","always");
x.t("policycenter","uses");
x.t("policycenter","calculates");
x.t("policycenter","best");
x.t("policycenter","calls");
x.t("policycenter","getting");
x.t("policycenter","provides");
x.t("policycenter","attempts");
x.t("policycenter","stores");
x.t("policycenter","overrides");
x.t("policycenter","gets");
x.t("effective","dates");
x.t("effective","time");
x.t("effective","interval");
x.t("effective","date");
x.t("begin","noon");
x.t("preceding","statement");
x.t("shouldpolicytermgeneratereinsurables","method");
x.t("shouldpolicytermgeneratereinsurables","period");
x.t("error","occurred");
x.t("logic","configure");
x.t("config","plugins");
x.t("choosing","reinsurance");
x.t("calculate","default");
x.t("calculate","override");
x.t("phasing","support");
x.t("reinsurance","integration");
x.t("reinsurance","program");
x.t("reinsurance","entities");
x.t("reinsurance","agreements");
x.t("reinsurance","programs");
x.t("reinsurance","coverage");
x.t("reinsurance","effective");
x.t("reinsurance","return");
x.t("reinsurance","configuration");
x.t("reinsurance","agreement");
x.t("reinsurance","implementation");
x.t("reinsurance","treaties");
x.t("reinsurance","management");
x.t("reinsurance","system");
x.t("reinsurance","modify");
x.t("reinsurance","treaty");
x.t("monetaryamount","method");
x.t("monetaryamount","target");
x.t("monetaryamount","calculated");
x.t("period","function");
x.t("period","policyperiod");
x.t("ri_risk_number","string");
x.t("finally","programs");
x.t("targeted","maximum");
x.t("allowed","lines");
x.t("allowed","amount");
x.t("first","considering");
x.t("guidewire_selectall","var");
x.t("number","reinsurable");
x.t("number","plugin");
x.t("number","following");
x.t("function","programcancoverreinsurable");
x.t("function","choosereinsuranceprogram");
x.t("function","gettargetmaxretention");
x.t("function","shouldpolicytermgeneratereinsurables");
x.t("function","guidewire_selectall");
x.t("function","getoverridecededamountforsurplusritreaty");
x.t("function","getdefaultgrossretention");
x.t("function","getinclusiontype");
x.t("function","generaterisknumber");
x.t("max","retention");
x.t("maximum","retention");
x.t("maximum","allowed");
x.t("maximum","retentions");
x.t("getoverridecededamountforsurplusritreaty","method");
x.t("getoverridecededamountforsurplusritreaty","ririsk");
x.t("define","subclass");
x.t("may","want");
x.t("whether","program");
x.t("whether","programs");
x.t("whether","generate");
x.t("different","default");
x.t("unique","number");
x.t("unique","identifier");
x.t("unique","risk");
x.t("receive","risk");
x.t("represents","reinsurable");
x.t("represents","chosen");
x.t("particular","regions");
x.t("reinsuranceconfigplugin","override");
x.t("characteristics","individual");
x.t("stores","inclusion");
x.t("instead","bigdecimal");
x.t("instead","midnight");
x.t("replace","preceding");
x.t("ceded","surplus");
x.t("ceded","amounts");
x.t("ceded","premium");
x.t("ceded","amount");
x.t("ceded","risk");
x.t("types","risks");
x.t("returned","time");
x.t("purpose","ireinsuranceconfigplugin");
x.t("impact","large");
x.t("code","directly");
x.t("identifier","new");
x.t("reinsuranceconfigplugin.gs","studio");
x.t("reinsuranceconfigplugin.gs","implementation");
x.t("override","extend");
x.t("override","default");
x.t("override","function");
x.t("override","ceded");
x.t("override","amount");
x.t("ririsk","pair");
x.t("ririsk","change");
x.t("ririsk","default");
x.t("ririsk","details");
x.t("ririsk","policycenter");
x.t("ririsk","monetaryamount");
x.t("ririsk","function");
x.t("ririsk","whether");
x.t("ririsk","ririsk");
x.t("ririsk","agreement");
x.t("ririsk","instances");
x.t("return","true");
x.t("return","12:01");
x.t("return","different");
x.t("return","sequenceutil.next");
x.t("return","value");
x.t("sequenceutil.next","ri_risk_number");
x.t("candidates","necessary");
x.t("candidates","riprogram");
x.t("candidates","list");
x.t("stage","search");
x.t("appear","per");
x.t("given","reinsurable");
x.t("given","reinsurance");
x.t("given","ririsk");
x.t("bigdecimal","effective");
x.t("policyrisk","represents");
x.t("matches","currency");
x.t("upon","characteristics");
x.t("branches","turn");
x.t("greater","maximum");
x.t("considers","programs");
x.t("occurred","messsage");
x.t("project","window");
x.t("less","maximum");
x.t("null","default");
x.t("null","policycenter");
x.t("null","instead");
x.t("configuration","plugin");
x.t("configuration","guide");
x.t("configuration","policycenter");
x.t("configuration","config");
x.t("configuration","following");
x.t("agreement","surplusritreaty");
x.t("agreement","program");
x.t("agreement","riagreement");
x.t("agreement","ririsk");
x.t("amount","getting");
x.t("amount","surplus");
x.t("amount","policycenter");
x.t("amount","function");
x.t("amount","ceded");
x.t("amount","return");
x.t("amount","less");
x.t("amount","cede");
x.t("amount","returns");
x.t("midnight","generating");
x.t("instances","reinsurable");
x.t("main","purpose");
x.t("value","method");
x.t("value","gross");
x.t("value","changed");
x.t("value","12:01");
x.t("value","returned");
x.t("value","greater");
x.t("value","null");
x.t("cede","monetaryamount");
x.t("interval","during");
x.t("additional","risk");
x.t("considering","active");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","method");
x.t("implementation","reinsuranceeffectivetime");
x.t("implementation","want");
x.t("implementation","base");
x.t("implementation","examine");
x.t("implementation","getoverridecededamountforsurplusritreaty");
x.t("implementation","generaterisknumber");
x.t("implementation","ireinsuranceconfigplugin");
x.t("implementation","returns");
x.t("specific","methods");
x.t("specific","effective");
x.t("specific","reinsurance");
x.t("specific","policy");
x.t("specific","date");
x.t("depending","upon");
x.t("periods","getting");
x.t("periods","earlier");
x.t("periods","policycenter");
x.t("periods","whether");
x.t("periods","specific");
x.t("constant","date");
x.t("already","correct");
x.t("generate","reinsurable");
x.t("generate","unique");
x.t("getdefaultgrossretention","method");
x.t("getdefaultgrossretention","ririsk");
x.t("generated","new");
x.t("opening","ireinsuranceconfigplugin.gwp");
x.t("page","error");
x.t("help","configure");
x.t("registry","opening");
x.t("registry","ireinsuranceconfigplugin");
x.t("purposes","getting");
x.t("treaties","effective");
x.t("treaties","policycenter");
x.t("applicable","program");
x.t("applicable","specific");
x.t("configure","policies");
x.t("configure","reinsurance");
x.t("getinclusiontype","method");
x.t("getinclusiontype","ririsk");
x.t("gw.api.database.sequenceutil","class");
x.t("correct","program");
x.t("correct","ricoveragegroup");
x.t("policyperiod","boolean");
x.t("values","gross");
x.t("values","change");
x.t("values","default");
x.t("values","active_programs");
x.t("policy","file");
x.t("policy","need");
x.t("policy","period");
x.t("policy","periods");
x.t("policy","terms");
x.t("intervals","default");
x.t("risk","default");
x.t("risk","riskversionlist");
x.t("risk","target");
x.t("risk","policycenter");
x.t("risk","number");
x.t("risk","whether");
x.t("risk","receive");
x.t("risk","ririsk");
x.t("risk","specific");
x.t("risk","date");
x.t("risk","carrier");
x.t("risk","numbers");
x.t("risk","following");
x.t("risk","tab");
x.t("risk","criteria");
x.t("generaterisknumber","method");
x.t("generaterisknumber","java.lang.string");
x.t("choose","correct");
x.t("plugins","registry");
x.t("date","method");
x.t("date","searchtype");
x.t("date","change");
x.t("date","time");
x.t("date","new");
x.t("date","policycenter");
x.t("date","effective");
x.t("date","whether");
x.t("date","value");
x.t("date","applicable");
x.t("date","date");
x.t("based","reinsurance");
x.t("draft_programs","prior_year_programs");
x.t("subclass","reinsuranceconfigplugin");
x.t("carrier","may");
x.t("numbers","new");
x.t("call","reinsurance");
x.t("ireinsuranceconfigplugin","centralize");
x.t("ireinsuranceconfigplugin","filter");
x.t("ireinsuranceconfigplugin","obtain");
x.t("ireinsuranceconfigplugin","methods");
x.t("ireinsuranceconfigplugin","determine");
x.t("ireinsuranceconfigplugin","policycenter");
x.t("ireinsuranceconfigplugin","calculate");
x.t("ireinsuranceconfigplugin","ceded");
x.t("ireinsuranceconfigplugin","generate");
x.t("ireinsuranceconfigplugin","help");
x.t("ireinsuranceconfigplugin","configure");
x.t("management","logic");
x.t("individual","risk");
x.t("following","method");
x.t("following","single");
x.t("following","reinsurance");
x.t("following","purposes");
x.t("draft","bound");
x.t("draft","programs");
x.t("turn","requires");
x.t("system","obtain");
x.t("calculated","gross");
x.t("class","obtain");
x.t("per","risk");
x.t("tab","policy");
x.t("returns","reinsurable");
x.t("returns","default");
x.t("returns","riprogram");
x.t("returns","java.lang.string");
x.t("returns","true");
x.t("returns","monetaryamount");
x.t("returns","function");
x.t("returns","override");
x.t("returns","null");
x.t("returns","date");
x.t("overrides","ceded");
x.t("portion","specified");
x.t("portion","reinsurance");
x.t("terms","phasing");
x.t("criteria","program");
x.t("modify","code");
x.t("modify","reinsuranceconfigplugin.gs");
x.t("behavior","reinsurance");
x.t("behavior","override");
x.t("associated","ririsk");
x.t("var","text_val=eval");
x.t("treaty","always");
x.t("treaty","amount");
x.t("multicurrency","reinsurance");
x.t("affected","policy");
x.t("specify","time");
x.t("specify","whether");
x.t("specify","additional");
x.t("differs","default");
x.t("gets","reinsuranceeffectivetime");
x.t("retentions","based");
}
