function FileData_Pairs(x)
{
x.t("example","change");
x.t("example","transaction");
x.t("example","following");
x.t("differently","prorated");
x.t("money","parameters");
x.t("scaleamount","method");
x.t("scaleamount","optional");
x.t("passed","constructor");
x.t("ignore","leap");
x.t("date2","running");
x.t("date2","var");
x.t("method","example");
x.t("method","method");
x.t("method","costdata");
x.t("method","built-in");
x.t("method","required");
x.t("method","calls");
x.t("method","public");
x.t("method","signature");
x.t("method","calculate");
x.t("method","contrast");
x.t("method","tostring");
x.t("method","return");
x.t("method","often");
x.t("method","takes");
x.t("method","called");
x.t("method","signatures");
x.t("method","corresponding");
x.t("method","proratefromstart");
x.t("prorationplugin","checks");
x.t("prorationplugin","implements");
x.t("dates","leap");
x.t("dates","base");
x.t("dates","represent");
x.t("parameter","plugin");
x.t("parameter","add");
x.t("parameter","applies");
x.t("parameter","specified");
x.t("parameter","true");
x.t("parameter","name");
x.t("parameter","ignoreleapdayforeffdatedcalc");
x.t("parameter","proration");
x.t("parameter","iprorationplugin");
x.t("provide","prorater");
x.t("construct","required");
x.t("below","details");
x.t("transactions","instead");
x.t("transactions","offset");
x.t("rather","directly");
x.t("version","method");
x.t("version","default");
x.t("version","need");
x.t("day","based");
x.t("day","either");
x.t("scalable","fields");
x.t("implement","method");
x.t("implement","plugin");
x.t("costdata","overview");
x.t("costdata","class");
x.t("costdata","object");
x.t("full","offset");
x.t("integration","guide");
x.t("integration","calling");
x.t("built-in","implementation");
x.t("create","class");
x.t("studio","navigate");
x.t("table","prorater");
x.t("description","construct");
x.t("description","proration");
x.t("complementary","therefore");
x.t("subclasses","policycenter");
x.t("financial","days");
x.t("instance","correct");
x.t("instance","class");
x.t("required","sets");
x.t("required","override");
x.t("required","prorates");
x.t("variables","store");
x.t("covers","new");
x.t("covers","old");
x.t("plugin","example");
x.t("plugin","prorationplugin");
x.t("plugin","parameter");
x.t("plugin","rather");
x.t("plugin","studio");
x.t("plugin","generating");
x.t("plugin","interface");
x.t("plugin","calculates");
x.t("plugin","provides");
x.t("plugin","policycenter");
x.t("plugin","function");
x.t("plugin","proration");
x.t("plugin","implementation");
x.t("plugin","ignores");
x.t("job","policychange");
x.t("uses","policycenter");
x.t("uses","proration");
x.t("uses","prorater");
x.t("generating","transaction");
x.t("field","enter");
x.t("getproraterforrounding","method");
x.t("text_val.select","link");
x.t("interface","example");
x.t("interface","implement");
x.t("interface","need");
x.t("interface","true");
x.t("calculates","number");
x.t("calculates","cost");
x.t("mode","passed");
x.t("mode","constructor");
x.t("findendofratedterm","methods");
x.t("findendofratedterm","optional");
x.t("cost.actualamount","property");
x.t("calculations","rating");
x.t("calculations","proration");
x.t("change","method");
x.t("change","plugin");
x.t("change","typically");
x.t("change","corresponding");
x.t("open","iprorationplugin.gwp");
x.t("type","cost");
x.t("calls","method");
x.t("calls","prorate");
x.t("calls","bigdecimal");
x.t("public","final");
x.t("calculation","wrong");
x.t("checks","plugin");
x.t("default","implementation");
x.t("property","indicates");
x.t("property","effective");
x.t("assumes","cost");
x.t("partial","ones");
x.t("link","directly");
x.t("leap","day");
x.t("leap","days");
x.t("start","date");
x.t("new","premium");
x.t("new","amount");
x.t("signature","takes");
x.t("engine","financialdaysbetween");
x.t("details","findendofratedterm");
x.t("details","prorater");
x.t("items","policy");
x.t("relationship","cost");
x.t("premium","ignoreleapdayforeffdatedcalc");
x.t("premium","remainder");
x.t("includes","ignores");
x.t("amounts","may");
x.t("messsage","policycenter");
x.t("need","calculate");
x.t("need","customize");
x.t("need","override");
x.t("need","update");
x.t("indicates","actual");
x.t("disagree","termamount");
x.t("add","parameter");
x.t("add","plugin");
x.t("add","ignoreleapdays");
x.t("numdays","policycenter");
x.t("numdays","prorater.financialdaysbetween");
x.t("guide","provide");
x.t("guide","plugins");
x.t("applies","prorated");
x.t("navigate","configuration");
x.t("false","ignoreleapdayforeffdatedcalc");
x.t("recommended","implement");
x.t("overview","cost");
x.t("directly","implementing");
x.t("directly","page");
x.t("true","false");
x.t("true","base");
x.t("true","financialdaysbetween");
x.t("true","ignoreleapdays");
x.t("declare","inner");
x.t("specified","config.xml");
x.t("termamount","property");
x.t("text_val.focus","text_val.select");
x.t("account","policy");
x.t("range","rating");
x.t("range","policycenter");
x.t("range","starting");
x.t("name","field");
x.t("prorate","method");
x.t("prorate","policycenter");
x.t("prorate","amount");
x.t("wrong","policycenter");
x.t("constructor","parameters");
x.t("constructor","two");
x.t("constructor","call");
x.t("partial-term","job");
x.t("partial-term","offset");
x.t("base","configuration");
x.t("old","premium");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("financialdaysbetween","method");
x.t("financialdaysbetween","findendofratedterm");
x.t("financialdaysbetween","optional");
x.t("parameters","below");
x.t("parameters","constructor");
x.t("parameters","period");
x.t("parameters","click");
x.t("inner","class");
x.t("methods","ignore");
x.t("methods","complementary");
x.t("methods","prorater");
x.t("provides","partial-term");
x.t("config.xml","parameter");
x.t("config.xml","true");
x.t("standard","proration");
x.t("periodstart","date");
x.t("final","means");
x.t("fields","need");
x.t("fields","add");
x.t("sets","private");
x.t("entire","period");
x.t("policycenter","integration");
x.t("policycenter","calculates");
x.t("policycenter","assumes");
x.t("policycenter","rating");
x.t("policycenter","resolve");
x.t("policycenter","standardizes");
x.t("policycenter","adds");
x.t("policycenter","following");
x.t("policycenter","generates");
x.t("rating","integration");
x.t("rating","uses");
x.t("rating","code");
x.t("rating","system");
x.t("store","rounding");
x.t("effective","dates");
x.t("effective","date");
x.t("ones","thus");
x.t("error","occurred");
x.t("calculate","leap");
x.t("calculate","date");
x.t("premiums","scalable");
x.t("config","plugins");
x.t("contrast","modify");
x.t("policychange","rated");
x.t("calculating","prorated");
x.t("period","start");
x.t("period","range");
x.t("period","end");
x.t("monetaryamount","version");
x.t("monetaryamount","need");
x.t("monetaryamount","value");
x.t("means","cannot");
x.t("rated","amounts");
x.t("resolve","discrepancy");
x.t("guidewire_selectall","var");
x.t("number","financial");
x.t("number","days");
x.t("ignoreleapdayforeffdatedcalc","parameter");
x.t("ignoreleapdayforeffdatedcalc","config.xml");
x.t("ignoreleapdayforeffdatedcalc","configuration");
x.t("others","described");
x.t("cost","costdata");
x.t("cost","base");
x.t("cost","calling");
x.t("cost","proration");
x.t("cost","data");
x.t("cost","entity");
x.t("function","guidewire_selectall");
x.t("implements","plugin");
x.t("implements","standard");
x.t("implements","iprorationplugin");
x.t("forgivenroundinglevel","extends");
x.t("customize","proration");
x.t("private","variables");
x.t("cannot","override");
x.t("represents","costs");
x.t("may","change");
x.t("standardizes","proration");
x.t("newdate","date2");
x.t("newdate","prorater.findendofratedterm");
x.t("instead","partial");
x.t("starting","periodstart");
x.t("implementing","proration");
x.t("calling","financialdaysbetween");
x.t("calling","computeamount");
x.t("tostring","optional");
x.t("end","date");
x.t("code","calls");
x.t("code","interacts");
x.t("code","values");
x.t("code","var");
x.t("return","instance");
x.t("return","new");
x.t("override","scaleamount");
x.t("override","method");
x.t("override","description");
x.t("override","methods");
x.t("override","others");
x.t("override","bigdecimal");
x.t("level","rounding");
x.t("term","base");
x.t("term","computeamount");
x.t("term","onset");
x.t("often","necessitates");
x.t("adds","partial-term");
x.t("thus","offset");
x.t("bigdecimal","version");
x.t("bigdecimal","return");
x.t("bigdecimal","value");
x.t("discrepancy","policycenter");
x.t("proration","built-in");
x.t("proration","create");
x.t("proration","plugin");
x.t("proration","calculations");
x.t("proration","engine");
x.t("proration","base");
x.t("proration","policycenter");
x.t("click","add");
x.t("enter","true");
x.t("enter","ignoreleapdays");
x.t("actual","cost");
x.t("occurred","messsage");
x.t("ignoreleapdays","parameter");
x.t("ignoreleapdays","plugin");
x.t("ignoreleapdays","value");
x.t("configuration","parameter");
x.t("configuration","includes");
x.t("configuration","guide");
x.t("configuration","parameters");
x.t("configuration","financialdaysbetween");
x.t("configuration","config");
x.t("configuration","proration");
x.t("configuration","computeamount");
x.t("amount","money");
x.t("amount","prorate");
x.t("amount","bigdecimal");
x.t("amount","rounding");
x.t("instances","change");
x.t("instances","represents");
x.t("prorated","premium");
x.t("prorated","premiums");
x.t("value","scaleamount");
x.t("value","method");
x.t("value","field");
x.t("value","override");
x.t("value","returns");
x.t("running","code");
x.t("interacts","prorater");
x.t("computeamount","method");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","method");
x.t("implementation","plugin");
x.t("implementation","declare");
x.t("implementation","monetaryamount");
x.t("implementation","override");
x.t("implementation","proration");
x.t("implementation","gw.plugin.policyperiod.impl.prorationplugin");
x.t("extends","prorater");
x.t("takes","start");
x.t("takes","monetaryamount");
x.t("takes","bigdecimal");
x.t("represent","entire");
x.t("page","error");
x.t("registry","open");
x.t("optional","calculates");
x.t("optional","takes");
x.t("optional","scales");
x.t("optional","returns");
x.t("correct","transaction");
x.t("data","objects");
x.t("ignores","leap");
x.t("policy","cost.actualamount");
x.t("policy","term");
x.t("policy","plugins");
x.t("values","newdate");
x.t("called","getproraterforrounding");
x.t("called","prorate");
x.t("gw.financials.prorater","recommended");
x.t("described","following");
x.t("plugins","account");
x.t("plugins","proration");
x.t("plugins","registry");
x.t("transaction","covers");
x.t("transaction","calculations");
x.t("transaction","calculation");
x.t("transaction","calculator");
x.t("date","relationship");
x.t("date","range");
x.t("date","prorate");
x.t("date","period");
x.t("date","number");
x.t("date","policy");
x.t("date","date");
x.t("iprorationplugin","prorationplugin");
x.t("iprorationplugin","plugin");
x.t("two","dates");
x.t("two","method");
x.t("prorater.findendofratedterm","date1");
x.t("optionally","override");
x.t("scales","amount");
x.t("based","configuration");
x.t("necessitates","corresponding");
x.t("typically","policycenter");
x.t("offset","transaction");
x.t("offset","onset");
x.t("subclass","implementation");
x.t("subclass","prorater");
x.t("call","super");
x.t("costs","items");
x.t("following","table");
x.t("following","uses");
x.t("following","code");
x.t("signatures","method");
x.t("corresponding","costdata");
x.t("corresponding","change");
x.t("corresponding","cost");
x.t("corresponding","end");
x.t("either","ignoreleapdays");
x.t("system","generates");
x.t("entity","instance");
x.t("entity","instances");
x.t("calculator","uses");
x.t("class","method");
x.t("class","built-in");
x.t("class","uses");
x.t("class","implements");
x.t("class","forgivenroundinglevel");
x.t("class","proration");
x.t("class","extends");
x.t("class","gw.financials.prorater");
x.t("rounding","mode");
x.t("rounding","level");
x.t("prorater","method");
x.t("prorater","subclasses");
x.t("prorater","disagree");
x.t("prorater","implementation");
x.t("prorater","optionally");
x.t("prorater","subclass");
x.t("prorater","class");
x.t("prorater","prorater");
x.t("returns","description");
x.t("returns","monetaryamount");
x.t("returns","bigdecimal");
x.t("returns","corresponding");
x.t("remainder","term");
x.t("prorates","amount");
x.t("modify","bigdecimal");
x.t("therefore","change");
x.t("var","numdays");
x.t("var","text_val=eval");
x.t("var","newdate");
x.t("days","differently");
x.t("days","calculating");
x.t("days","proration");
x.t("days","two");
x.t("days","returns");
x.t("prorater.financialdaysbetween","date1");
x.t("onset","transactions");
x.t("onset","effective");
x.t("onset","transaction");
x.t("iprorationplugin.gwp","parameters");
x.t("generates","full");
x.t("generates","cost");
x.t("gw.plugin.policyperiod.impl.prorationplugin","contains");
x.t("contains","inner");
x.t("super","proratefromstart");
x.t("proratefromstart","required");
x.t("proratefromstart","implements");
x.t("update","monetaryamount");
x.t("date1","date2");
x.t("date1","numdays");
x.t("object","type");
x.t("object","prorater");
}
