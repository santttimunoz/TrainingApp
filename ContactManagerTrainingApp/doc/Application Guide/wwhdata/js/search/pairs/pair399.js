function FileData_Pairs(x)
{
x.t("example","alternate");
x.t("example","rate");
x.t("example","pa");
x.t("example","simple");
x.t("example","cost");
x.t("example","function");
x.t("example","define");
x.t("example","step");
x.t("example","baserate");
x.t("example","prorationmethod");
x.t("supports","overrides");
x.t("zero-based","zero");
x.t("equal","equal");
x.t("equal","left");
x.t("equal","greater");
x.t("complex","conditional");
x.t("complex","calculations");
x.t("complex","type");
x.t("available","instructions");
x.t("available","operands");
x.t("available","instruction");
x.t("available","drop-down");
x.t("available","policy");
x.t("available","rounding");
x.t("properties","line");
x.t("properties","access");
x.t("properties","directly");
x.t("properties","personalvehicle");
x.t("properties","local");
x.t("properties","subobjects");
x.t("properties","cost");
x.t("properties","often");
x.t("properties","appear");
x.t("properties","instruction");
x.t("properties","baserate");
x.t("method","rate");
x.t("method","step");
x.t("method","given");
x.t("parameter","example");
x.t("parameter","parameter");
x.t("parameter","variables");
x.t("parameter","sample");
x.t("parameter","rate");
x.t("parameter","default");
x.t("parameter","fields");
x.t("parameter","sets");
x.t("parameter","cannot");
x.t("parameter","accessing");
x.t("parameter","named");
x.t("parameter","writable");
x.t("parameter","data");
x.t("parameter","policy");
x.t("parameter","maps");
x.t("parameter","comes");
x.t("parameter","following");
x.t("provide","access");
x.t("provide","comments");
x.t("else","continue");
x.t("columns","rate");
x.t("version","steps");
x.t("building","coverage");
x.t("pattern","accessing");
x.t("right","operand");
x.t("comment","available");
x.t("comment","provide");
x.t("comment","displays");
x.t("comment","text");
x.t("comment","middle");
x.t("comment","section");
x.t("comment","drop-down");
x.t("comment","applicable");
x.t("lists","instruction");
x.t("meet","criteria");
x.t("table","table:base");
x.t("table","arguments");
x.t("table","shows");
x.t("table","type");
x.t("table","rate");
x.t("table","multiple");
x.t("table","prefix");
x.t("table","definition");
x.t("table","parameters");
x.t("table","operand");
x.t("table","string");
x.t("table","select");
x.t("table","return");
x.t("table","precedes");
x.t("table","screen");
x.t("table","factor");
x.t("table","lookup");
x.t("table","returns");
x.t("business","auto");
x.t("business","select");
x.t("integration","guide");
x.t("create","complex");
x.t("create","new");
x.t("create","function");
x.t("description",".0001");
x.t("description","less");
x.t("experience","rate");
x.t("alternate","source");
x.t("studio","scale");
x.t("variables","available");
x.t("variables","variables");
x.t("variables","current");
x.t("variables","conditional");
x.t("variables","specified");
x.t("variables","functions");
x.t("variables","instruction");
x.t("variables","writable");
x.t("variables","implicitly");
x.t("variables","following");
x.t("variables","without");
x.t("source","parameter");
x.t("source","source");
x.t("source","new");
x.t("source","name");
x.t("source","argument");
x.t("source","input");
x.t("source","selected");
x.t("source","appears");
x.t("source","select");
x.t("source","multiple-factor");
x.t("source","value");
x.t("source","drop-down");
x.t("source","column");
x.t("instructions","conditional");
x.t("instructions","function");
x.t("instructions","applicable");
x.t("instructions","specify");
x.t("doing","one-pass");
x.t("always","displays");
x.t("10","add");
x.t("10","tens");
x.t("10","functions");
x.t("table:base","rate");
x.t("required","rate");
x.t("spans","remaining");
x.t("void","available");
x.t("void","items");
x.t("void","function");
x.t("two-pass","handling");
x.t("modifiers","example");
x.t("modifiers","parameter");
x.t("modifiers","parameters");
x.t("modifiers","policy");
x.t("cpschedulecredits","modifier");
x.t("arguments","panel");
x.t("user","interface");
x.t("tables","available");
x.t("tables","table");
x.t("tables","variables");
x.t("tables","rate");
x.t("tables","prefix");
x.t("tables","add");
x.t("tables","no");
x.t("tables","constants");
x.t("tables","match");
x.t("tables","appear");
x.t("current","rate");
x.t("current","step");
x.t(".001","thousandths");
x.t("shows","types");
x.t("conditional","else");
x.t("conditional","instructions");
x.t("conditional","grayed");
x.t("conditional","expressions");
x.t("conditional","follow");
x.t("conditional","instruction");
x.t("conditional","elseif");
x.t("conditional","expression");
x.t("conditional","returns");
x.t("field","example");
x.t("field","comment");
x.t("field","type");
x.t("field","change");
x.t("field","property");
x.t("field","put");
x.t("field","conditionals");
x.t("field","policycenter");
x.t("field","select");
x.t("field","appears");
x.t("field","specifies");
x.t("field","define");
x.t("field","types");
x.t("field","section");
x.t("field","screen");
x.t("field","choose");
x.t("rata","amount");
x.t("line","supports");
x.t("line","parameter");
x.t("line","business");
x.t("line","support");
x.t("line","sample");
x.t("line","rate");
x.t("line","access");
x.t("line","information");
x.t("line","coverages");
x.t("uses","parameter");
x.t("until","arrive");
x.t("text_val.select","link");
x.t("interface","working");
x.t("working","rate");
x.t("displays","variables");
x.t("displays","rate");
x.t("displays","default");
x.t("displays","operands");
x.t("displays","name");
x.t("displays","select");
x.t("displays","--");
x.t("displays","scale");
x.t("displays","two");
x.t("support","overrides");
x.t("hundredths",".1");
x.t("type","example");
x.t("type","parameter");
x.t("type","variables");
x.t("type","conditional");
x.t("type","field");
x.t("type","rate");
x.t("type","property");
x.t("type","filters");
x.t("type","entering");
x.t("type","personalvehicle");
x.t("type","parameters");
x.t("type","compatible");
x.t("type","composed");
x.t("type","entity.personalautoline");
x.t("type","cost");
x.t("type","entity.personalvehicle");
x.t("type","instruction");
x.t("type","constant");
x.t("type","call");
x.t("change","prefix");
x.t("change","operand");
x.t("sample","data");
x.t("basic","algorithm");
x.t("in-scope","object");
x.t("calculations","cannot");
x.t("explicitly","define");
x.t("packages","parameters");
x.t("left","right");
x.t("left","operand");
x.t("rate","table");
x.t("rate","alternate");
x.t("rate","modifiers");
x.t("rate","tables");
x.t("rate","rate");
x.t("rate","modifier");
x.t("rate","zero");
x.t("rate","basis");
x.t("rate","routines");
x.t("rate","routine");
x.t("rate","routine\u2019s");
x.t("rate","baserate");
x.t("rate","numeric");
x.t("rate","factor");
x.t("identify","types");
x.t("however","add");
x.t("precede","conditional");
x.t("multiple","factors");
x.t("text","field");
x.t("text","appears");
x.t("property","supports");
x.t("property","filtering");
x.t("property","subobjects");
x.t("property","cost");
x.t("property","adjustedrate");
x.t("property","object");
x.t("default","source");
x.t("default","choice");
x.t("default","argument");
x.t("default","value");
x.t("guidewire","recommends");
x.t("filters","subfields");
x.t("filters","parameters");
x.t("filters","selection");
x.t("require","access");
x.t("multiplied","prior");
x.t("gw.rating","package");
x.t("pip","nj");
x.t("put","quotes");
x.t("thousandths",".001");
x.t("thousandths",".01");
x.t("link","directly");
x.t("prefix","table");
x.t("prefix","rate");
x.t("prefix","specified");
x.t("prefix","base");
x.t("prefix","appears");
x.t("prefix","return");
x.t("prefix","distinguishes");
x.t("new","version");
x.t("new","rate");
x.t("new","argument");
x.t("new","row");
x.t("new","variable");
x.t("items","operand");
x.t("objects","basis");
x.t("objects","contain");
x.t("objects","policy");
x.t("objects","policyline");
x.t("engine","handles");
x.t("access","properties");
x.t("access","type");
x.t("access","rate");
x.t("access","property");
x.t("access","objects");
x.t("access","personalvehicle");
x.t("access","parameters");
x.t("access","coverage");
x.t("access","subobject");
x.t("access","annualmileage");
x.t("consists","two");
x.t("single","typekey");
x.t("amounts","base");
x.t("includes","parameter");
x.t("includes","two");
x.t("premium","algorithm");
x.t("usually","multiplied");
x.t("choice","operand");
x.t(".0001","ten");
x.t("messsage","policycenter");
x.t("list","right");
x.t("list","always");
x.t("list","conditional");
x.t("list","field");
x.t("list","displays");
x.t("list","access");
x.t("list","typekeys");
x.t("list","constants");
x.t("list","contain");
x.t("list","depend");
x.t("list","contains");
x.t("operands","conditional");
x.t("operands","type");
x.t("operands","rate");
x.t("operands","functions");
x.t("operands","types");
x.t("operands","constant");
x.t("operands","date");
x.t("operands","separated");
x.t("operands","using");
x.t("operands","typelist");
x.t("operands","specify");
x.t("grayed","conditional");
x.t("grayed","indicating");
x.t("lets","select");
x.t("entering","parameters");
x.t("nj","parameter");
x.t("nj","basic");
x.t("determines","choices");
x.t("braces","example");
x.t("add","change");
x.t("add","productmodifierfactor");
x.t("add","function");
x.t("add","row");
x.t("add","section");
x.t("add","variable");
x.t("add","parentheses");
x.t("add","value");
x.t("assignment","operator");
x.t("recommends","rate");
x.t("subfields","field");
x.t("subfields","vehicle1.annualmileage");
x.t("pa","coverage");
x.t("pipnjcoverage","parameter");
x.t("assign","value");
x.t("around","string");
x.t("guide","properties");
x.t("guide","rate");
x.t("guide","parameters");
x.t("guide","rating");
x.t("go","new");
x.t("go","administration");
x.t("rate_modifier","cases");
x.t("simple","conditional");
x.t("configuring","prefixes");
x.t("flat","default");
x.t("flat","costs");
x.t("large","sample");
x.t("false","no");
x.t("directly","operand");
x.t("directly","page");
x.t("directly","attached");
x.t("specified","properties");
x.t("specified","type");
x.t("specified","default");
x.t("specified","instruction");
x.t("termamount","correspond");
x.t("termamount","term");
x.t("termamount","similarly");
x.t("personalvehicle","objects");
x.t("personalvehicle","notice");
x.t("personalvehicle","object");
x.t("personalvehicle","contains");
x.t("true","type");
x.t("true","false");
x.t("covterm","coverage");
x.t("covterm","value");
x.t("text_val.focus","text_val.select");
x.t("name","rate");
x.t("name","selected");
x.t("name","cannot");
x.t("name","code");
x.t("name","valid");
x.t("no","new");
x.t("no","modification");
x.t("no","quotes");
x.t("no","return");
x.t("actualadjrate","standardadjrate");
x.t("definition","specified");
x.t("definition","screen");
x.t("definition","contains");
x.t("creating","using");
x.t("typelists","defined");
x.t("typed","therefore");
x.t("previously","defined");
x.t("gosu","variable");
x.t("gosu","class");
x.t("ends","conditional");
x.t("typekeys","typelist");
x.t("base","rate");
x.t("base","configuration");
x.t("argument","source");
x.t("argument","sources");
x.t("handles","particular");
x.t("modifier","zero-based");
x.t("modifier","rate");
x.t("modifier","usually");
x.t("modifier","instead");
x.t("modifier","value");
x.t("avoid","multiplying");
x.t("commercialpropertylineenhancement.gsx","gw.rating");
x.t("comparison","left");
x.t("comparison","operators");
x.t("comparison","operator");
x.t(".1","tenths");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("parameters","parameter");
x.t("parameters","provide");
x.t("parameters","variables");
x.t("parameters","type");
x.t("parameters","rate");
x.t("parameters","access");
x.t("parameters","lets");
x.t("parameters","parameters");
x.t("parameters","subobjects");
x.t("parameters","functions");
x.t("parameters","instruction");
x.t("parameters","choose");
x.t("parameters","policyline");
x.t("boolean","simple");
x.t("boolean","operand");
x.t("boolean","string");
x.t("boolean","functions");
x.t("boolean","constant");
x.t("boolean","date");
x.t("compatible","arithmetic");
x.t("filtering","parameter");
x.t("filtering","pa");
x.t("prior","rating");
x.t("prior","expression");
x.t("zero","rate_modifier");
x.t("zero","indicating");
x.t("zero","setting");
x.t("operand","parameter");
x.t("operand","field");
x.t("operand","type");
x.t("operand","text");
x.t("operand","single");
x.t("operand","determines");
x.t("operand","list");
x.t("operand","simple");
x.t("operand","fields");
x.t("operand","choices");
x.t("operand","select");
x.t("operand","types");
x.t("operand","typekey");
x.t("operand","enter");
x.t("operand","drop-down");
x.t("operand","constant");
x.t("operand","choose");
x.t("operand","member");
x.t("operand","checked");
x.t("constants","example");
x.t("constants","available");
x.t("constants","left");
x.t("constants","constants");
x.t("constants","date");
x.t("constants","numeric");
x.t("constants","typelist");
x.t("pro","rata");
x.t("standard","amounts");
x.t("standard","override");
x.t("determine","experience");
x.t("determine","parameters");
x.t("continue","conditional");
x.t("basis","basis");
x.t("basis","prorationmethod");
x.t("enhancement","property");
x.t("modification","rate");
x.t("selection","code");
x.t("composed","factors");
x.t("tens","100");
x.t("fields","properties");
x.t("fields","variables");
x.t("fields","current");
x.t("fields","type");
x.t("fields","subfields");
x.t("fields","parameters");
x.t("fields","instruction");
x.t("fields","distinguish");
x.t("string","operand");
x.t("string","null");
x.t("string","constant");
x.t("string","integer");
x.t("local","variables");
x.t("local","variable");
x.t("accessed","array");
x.t("array","list");
x.t("productmodifierfactor","modifier");
x.t("sets","small");
x.t("sets","include");
x.t("conditionals","begin");
x.t("ten","thousandths");
x.t("contain","integration");
x.t("contain","functions");
x.t("coverage","parameter");
x.t("coverage","pattern");
x.t("coverage","field");
x.t("coverage","rate");
x.t("coverage","premium");
x.t("coverage","coverage");
x.t("coverage","term");
x.t("coverage","information");
x.t("coverage","terms");
x.t("personal","auto");
x.t("subobjects","parameter");
x.t("subobjects","properties");
x.t("subobjects","accessed");
x.t("entity.personalautoline","maps");
x.t("input","parameters");
x.t("policycenter","displays");
x.t("policycenter","filters");
x.t("policycenter","adds");
x.t("policycenter","value");
x.t("policycenter","application");
x.t("rating","available");
x.t("rating","engine");
x.t("rating","management");
x.t("rating","overrides");
x.t("functions","complex");
x.t("functions","available");
x.t("functions","rate");
x.t("functions","specified");
x.t("functions","gosu");
x.t("functions","functions");
x.t("functions","return");
x.t("auto","support");
x.t("auto","costs");
x.t("small","large");
x.t("begin","conditional");
x.t("selected","source");
x.t("selected","base");
x.t("quotes","around");
x.t("quotes","otherwise");
x.t("ones","10");
x.t("1000","thousands");
x.t("preceding","rows");
x.t("error","occurred");
x.t("calculate","properties");
x.t("choices","available");
x.t("choices","information");
x.t("choices","limited");
x.t("notice","policycenter");
x.t("review","past");
x.t("tenths","ones");
x.t("delegate","bacost");
x.t("next","until");
x.t("operators","rate");
x.t("operators","comparison");
x.t("operators","operators");
x.t("operators","returns");
x.t(".01","hundredths");
x.t("appears","rate");
x.t("appears","step");
x.t("appears","curly");
x.t("appears","bold");
x.t("depend","upon");
x.t("select","properties");
x.t("select","rate");
x.t("select","default");
x.t("select","pa");
x.t("select","previously");
x.t("select","parameters");
x.t("select","factors");
x.t("select","code");
x.t("select","return");
x.t("select","value");
x.t("select","writable");
x.t("select","constant");
x.t("select","policy");
x.t("select","date");
x.t("select","numeric");
x.t("select","factor");
x.t("select","append");
x.t("adjusted","rate");
x.t("commercial","property");
x.t("options","packages");
x.t("guidewire_selectall","var");
x.t("number","boolean");
x.t("number","types");
x.t("cost","properties");
x.t("cost","variables");
x.t("cost","rate");
x.t("cost","objects");
x.t("cost","specified");
x.t("cost","base");
x.t("cost","parameters");
x.t("cost","delegate");
x.t("cost","whether");
x.t("cost","correspond");
x.t("cost","instruction");
x.t("cost","adjustedrate");
x.t("cost","data");
x.t("cost","choose");
x.t("cost","object");
x.t("datetime","value");
x.t("thousands","information");
x.t("function","no");
x.t("function","enhancement");
x.t("function","local");
x.t("function","review");
x.t("function","guidewire_selectall");
x.t("function","step");
x.t("function","return");
x.t("function","configuration");
x.t("function","call");
x.t("indicating","type");
x.t("indicating","no");
x.t("one-pass","two-pass");
x.t("vehicle1.annualmileage","access");
x.t("endif","ends");
x.t("endif","follow");
x.t("combining","two");
x.t("comments","following");
x.t("expressions","available");
x.t("expressions","conditional");
x.t("expressions","boolean");
x.t("expressions","functions");
x.t("expressions","separated");
x.t("particular","type");
x.t("whether","doing");
x.t("whether","override");
x.t("cannot","in-scope");
x.t("cannot","access");
x.t("cannot","add");
x.t("cannot","select");
x.t("cannot","defined");
x.t("padriverassignmentparamset","driverassignmentinfo");
x.t("entity.personalvehicle","maps");
x.t("define","parameter");
x.t("define","functions");
x.t("define","variable");
x.t("specifies","coverage");
x.t("middle","series");
x.t("step","required");
x.t("step","rate");
x.t("step","guidewire");
x.t("step","filters");
x.t("step","access");
x.t("step","policycenter");
x.t("step","select");
x.t("step","instruction");
x.t("step","information");
x.t("step","arithmetic");
x.t("step","rounding");
x.t("step","specify");
x.t("row","table");
x.t("row","operand");
x.t("row","policycenter");
x.t("row","end");
x.t("accessing","rate");
x.t("accessing","coverage");
x.t("accessing","coverages");
x.t("instead","productmodifierfactor");
x.t("policy\u2019s","claims");
x.t("types","available");
x.t("types","properties");
x.t("types","rate");
x.t("types","prefix");
x.t("types","parameters");
x.t("types","operand");
x.t("types","string");
x.t("types","function");
x.t("types","instruction");
x.t("types","constant");
x.t("types","specify");
x.t("section","comment");
x.t("handling","overrides");
x.t("arrive","page");
x.t("match","rate");
x.t("scope","variables");
x.t("factors","constants");
x.t("factors","select");
x.t("factors","return");
x.t("factors","information");
x.t("factors","matching");
x.t("typekey","list");
x.t("typekey","string");
x.t("typekey","value");
x.t("typekey","constant");
x.t("typekey","scale");
x.t("steps","filtering");
x.t("steps","select");
x.t("steps","section");
x.t("steps","instruction");
x.t("steps","configuration");
x.t("correspond","properties");
x.t("correspond","standard");
x.t("follow","conditional");
x.t("follow","steps");
x.t("follow","elseif");
x.t("end","rate");
x.t("code","covterm");
x.t("code","coverage");
x.t("code","typelist");
x.t("rows","cannot");
x.t("return","void");
x.t("return","value");
x.t("often","numeric");
x.t("term","sample");
x.t("term","select");
x.t("term","code");
x.t("term","amount");
x.t("term","object");
x.t("override","properties");
x.t("override","default");
x.t("override","cost");
x.t("vehicle","parameter");
x.t("vehicle","type");
x.t("adds","cpschedulecredits");
x.t("adds","row");
x.t("multiple-factor","rate");
x.t("appear","table");
x.t("appear","choices");
x.t("appear","similar");
x.t("given","coverage");
x.t("previous","expression");
x.t("100","hundreds");
x.t("instruction","void");
x.t("instruction","field");
x.t("instruction","conditional");
x.t("instruction","type");
x.t("instruction","precede");
x.t("instruction","new");
x.t("instruction","assignment");
x.t("instruction","base");
x.t("instruction","operand");
x.t("instruction","endif");
x.t("instruction","step");
x.t("instruction","types");
x.t("instruction","section");
x.t("instruction","drop-down");
x.t("instruction","op");
x.t("prefixes","identify");
x.t("upon","instruction");
x.t("proration","method");
x.t("actual","standard");
x.t("click","create");
x.t("click","next");
x.t("variable","left");
x.t("variable","name");
x.t("variable","operand");
x.t("variable","scope");
x.t("variable","code");
x.t("variable","instruction");
x.t("accesses","coverage");
x.t("greater","equal");
x.t("greater","less");
x.t("parentheses","conditional");
x.t("parentheses","balanced");
x.t("enter","true");
x.t("enter","constant");
x.t("enter","specific");
x.t("occurred","messsage");
x.t("null","constant");
x.t("null","date");
x.t("less","equal");
x.t("curly","braces");
x.t("configuration","parameter");
x.t("configuration","rate");
x.t("configuration","prefix");
x.t("configuration","guide");
x.t("configuration","personal");
x.t("configuration","commercial");
x.t("adjustedrate","adjusted");
x.t("adjustedrate","baserate");
x.t("amount","properties");
x.t("amount","flat");
x.t("amount","proration");
x.t("include","policy");
x.t("elseif","continue");
x.t("elseif","endif");
x.t("sources","tab");
x.t("routines","calculate");
x.t("routines","select");
x.t("routines","instruction");
x.t("value","complex");
x.t("value","properties");
x.t("value","right");
x.t("value","description");
x.t("value","type");
x.t("value","rate");
x.t("value","avoid");
x.t("value","operand");
x.t("value","coverage");
x.t("value","select");
x.t("value","define");
x.t("value","typekey");
x.t("value","appear");
x.t("value","previous");
x.t("value","instruction");
x.t("value","variable");
x.t("value","value");
x.t("value","drop-down");
x.t("value","column");
x.t("value","factor");
x.t("value","optionally");
x.t("value","day-based");
x.t("value","calculated");
x.t("value","typelist");
x.t("similar","variables");
x.t("prorated","flat");
x.t("named","pip");
x.t("named","actual");
x.t("driverassignmentinfo","parameter");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("drop-down","lists");
x.t("drop-down","list");
x.t("writable","parameter");
x.t("writable","properties");
x.t("writable","list");
x.t("writable","operand");
x.t("writable","select");
x.t("constant","right");
x.t("constant","default");
x.t("constant","text");
x.t("constant","directly");
x.t("constant","boolean");
x.t("constant","operand");
x.t("constant","select");
x.t("constant","number");
x.t("constant","enter");
x.t("constant","numeric");
x.t("constant","returns");
x.t("depending","rating");
x.t("selecting","parameters");
x.t("multiplying","zero");
x.t("balanced","example");
x.t("specific","date");
x.t("--","instruction");
x.t("precedes","name");
x.t("expression","consists");
x.t("expression","combining");
x.t("expression","step");
x.t("expression","parentheses");
x.t("expression","adjustedrate");
x.t("expression","scale");
x.t("expression","cases");
x.t("expression","returns");
x.t("expression","compare");
x.t("screen","select");
x.t("screen","click");
x.t("valid","gosu");
x.t("third-party","system");
x.t("panel","displays");
x.t("page","error");
x.t("page","displaying");
x.t("applicable","conditional");
x.t("applicable","rate");
x.t("specifying","flat-rated");
x.t("personalautoline","object");
x.t("bold","spans");
x.t("routine","example");
x.t("routine","uses");
x.t("routine","however");
x.t("routine","includes");
x.t("routine","add");
x.t("routine","go");
x.t("routine","termamount");
x.t("routine","determine");
x.t("routine","function");
x.t("routine","step");
x.t("routine","steps");
x.t("routine","adds");
x.t("routine","proration");
x.t("routine","accesses");
x.t("routine","selecting");
x.t("routine","day-based");
x.t("routine","contains");
x.t("information","rate");
x.t("information","configuring");
x.t("information","creating");
x.t("information","rating");
x.t("information","rounding");
x.t("information","adding");
x.t("information","flat-rated");
x.t("data","field");
x.t("data","rate");
x.t("data","pip");
x.t("data","objects");
x.t("data","includes");
x.t("data","sets");
x.t("data","padriverassignmentparamset");
x.t("data","types");
x.t("data","cp");
x.t("attached","parameter");
x.t("routine\u2019s","line");
x.t("distinguishes","rate");
x.t("baserate","create");
x.t("baserate","10");
x.t("baserate","conditional");
x.t("baserate","termamount");
x.t("baserate","base");
x.t("baserate","adjustedrate");
x.t("examples","two");
x.t("defined","right");
x.t("defined","studio");
x.t("defined","rate");
x.t("defined","policycenter");
x.t("defined","variable");
x.t("application","guide");
x.t("values","available");
x.t("values","typekey");
x.t("values","scale");
x.t("values","typelist");
x.t("scale","available");
x.t("scale","operands");
x.t("scale","section");
x.t("scale","value");
x.t("scale","scale");
x.t("scale","numeric");
x.t("policy","line");
x.t("policy","data");
x.t("policy","including");
x.t("displaying","vehicle1");
x.t("implicitly","typed");
x.t("selections","instruction");
x.t("choose","properties");
x.t("choose","parameters");
x.t("choose","enter");
x.t("choose","operator");
x.t("subobject","meet");
x.t("maps","personalvehicle");
x.t("maps","personalautoline");
x.t("maps","personalvehicle.licenseplate");
x.t("integer","decimal");
x.t("date","constants");
x.t("date","select");
x.t("date","constant");
x.t("date","typelist");
x.t("varies","depending");
x.t("two","conditional");
x.t("two","operands");
x.t("two","parameters");
x.t("two","fields");
x.t("two","types");
x.t("administration","rate");
x.t("note","base");
x.t("predefined","function");
x.t("history","determine");
x.t("column","displays");
x.t("column","step");
x.t("otherwise","constant");
x.t("numeric","type");
x.t("numeric","boolean");
x.t("numeric","section");
x.t("numeric","types");
x.t("numeric","value");
x.t("numeric","date");
x.t("algorithm","rate");
x.t("algorithm","click");
x.t("cases","rate");
x.t("factor","function");
x.t("factor","factors");
x.t("factor","data");
x.t("comes","argument");
x.t("optionally","specify");
x.t("costs","cost");
x.t("costs","specifying");
x.t("standardadjrate","overrideadjrate");
x.t("package","note");
x.t("call","third-party");
x.t("call","predefined");
x.t("management","user");
x.t("management","rating");
x.t("following","table");
x.t("following","true");
x.t("following","comparison");
x.t("following","preceding");
x.t("vehicle1","vehicle2");
x.t("separated","example");
x.t("separated","comparison");
x.t("system","compute");
x.t("compute","value");
x.t("rounded","value");
x.t("typelist","field");
x.t("typelist","left");
x.t("typelist","typelists");
x.t("typelist","value");
x.t("typelist","defined");
x.t("typelist","values");
x.t("arithmetic","expression");
x.t("arithmetic","operator");
x.t("rounding","operators");
x.t("rounding","operator");
x.t("day-based","pro");
x.t("similarly","named");
x.t("vehicle2","type");
x.t("setting","rate");
x.t("calculated","commercialpropertylineenhancement.gsx");
x.t("calculated","prior");
x.t("using","rate");
x.t("using","following");
x.t("lookup","function");
x.t("class","information");
x.t("remaining","columns");
x.t("decimal","boolean");
x.t("op","policycenter");
x.t("op","selections");
x.t("returns","boolean");
x.t("returns","datetime");
x.t("returns","value");
x.t("returns","rounded");
x.t("prorationmethod","property");
x.t("prorationmethod","proration");
x.t("prorationmethod","typelist");
x.t("overrideadjrate","properties");
x.t("overrides","line");
x.t("overrides","base");
x.t("overrides","cost");
x.t("overrides","adjustedrate");
x.t("overrides","information");
x.t("overrides","behavior");
x.t("criteria","create");
x.t("personalvehicle.licenseplate","follow");
x.t("annualmileage","vehicle");
x.t("adding","new");
x.t("adding","policy");
x.t("terms","pipnjcoverage");
x.t("terms","options");
x.t("compare","two");
x.t("tab","rate");
x.t("series","steps");
x.t("without","prefix");
x.t("operator","description");
x.t("operator","left");
x.t("operator","policycenter");
x.t("flat-rated","coverage");
x.t("flat-rated","coverages");
x.t("bacost","business");
x.t("behavior","varies");
x.t("policyline","parameter");
x.t("policyline","type");
x.t("policyline","policycenter");
x.t("policyline","cannot");
x.t("append","add");
x.t("therefore","assign");
x.t("member","right");
x.t("member","defined");
x.t("limited","single");
x.t("past","policy\u2019s");
x.t("var","text_val=eval");
x.t("including","rate");
x.t("claims","history");
x.t("hundreds","1000");
x.t("specify","source");
x.t("specify","conditional");
x.t("specify","number");
x.t("specify","override");
x.t("specify","instruction");
x.t("distinguish","rate");
x.t("contains","properties");
x.t("contains","parameter");
x.t("contains","source");
x.t("contains","require");
x.t("contains","parameters");
x.t("contains","examples");
x.t("checked","grayed");
x.t("coverages","parameters");
x.t("coverages","instruction");
x.t("coverages","prorated");
x.t("object","example");
x.t("object","explicitly");
x.t("object","rate");
x.t("object","actualadjrate");
x.t("object","vehicle");
x.t("object","value");
x.t("object","baserate");
x.t("object","policyline");
x.t("cp","building");
x.t("matching","row");
}
