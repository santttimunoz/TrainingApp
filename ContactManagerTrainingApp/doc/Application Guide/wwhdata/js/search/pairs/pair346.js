function FileData_Pairs(x)
{
x.t("root","complex");
x.t("root","revisioned");
x.t("root","property");
x.t("root","graph");
x.t("root","policyperiod");
x.t("root","entity");
x.t("root","class");
x.t("complex","graph");
x.t("example","version");
x.t("example","workers");
x.t("example","autolineexpiration");
x.t("example","assumes");
x.t("example","access");
x.t("example","policydriver");
x.t("example","name");
x.t("example","personal");
x.t("example","policycenter");
x.t("example","rating");
x.t("example","suppose");
x.t("example","drivers");
x.t("example","out-of-sequence");
x.t("example","car");
x.t("example","code");
x.t("example","vehicle");
x.t("example","policylineunsliced");
x.t("example","policy");
x.t("example","date");
x.t("example","costs");
x.t("example","relies");
x.t("example","entity");
x.t("example","following");
x.t("example","versions");
x.t("example","var");
x.t("example","removed");
x.t("example","gets");
x.t("example","object");
x.t("happen","automatically");
x.t("happen","effective");
x.t("happen","slice");
x.t("getslice","root");
x.t("getslice","method");
x.t("getslice","original");
x.t("getslice","effective");
x.t("getslice","know");
x.t("getslice","policyperiod");
x.t("getslice","slice");
x.t("getslice","individual");
x.t("coding","errors");
x.t("coding","rule");
x.t("hidden","type");
x.t("safely","accessing");
x.t("moment","expiration");
x.t("moment","car\u2019s");
x.t("moment","particular");
x.t("looks","notallcosts");
x.t("looks","similar");
x.t("passed","method");
x.t("passed","property");
x.t("label","version");
x.t("active","time");
x.t("v2","vehiclevl.availabledriversasof");
x.t("unlike","slice");
x.t("dates","insurance");
x.t("dates","handled");
x.t("dates","original");
x.t("dates","stored");
x.t("dates","subobjects");
x.t("dates","effective");
x.t("dates","resolve");
x.t("dates","reference");
x.t("dates","unsliced");
x.t("dates","entity");
x.t("properties","related");
x.t("properties","entities");
x.t("properties","objects");
x.t("properties","mirror");
x.t("properties","gosu");
x.t("properties","methods");
x.t("properties","enhancement");
x.t("properties","string");
x.t("properties","thus");
x.t("properties","slice");
x.t("properties","vehicle.driversasof");
x.t("properties","entity");
x.t("properties","object");
x.t("exist","point");
x.t("exist","database-backed");
x.t("exist","policy");
x.t("method","method");
x.t("method","detect");
x.t("method","property");
x.t("method","want");
x.t("method","combines");
x.t("method","converts");
x.t("method","desired");
x.t("method","gosu");
x.t("method","argument");
x.t("method","unslicedvehicle.versionlist.asof");
x.t("method","validation");
x.t("method","instead");
x.t("method","slightly");
x.t("method","vehicle");
x.t("method","whose");
x.t("method","similar");
x.t("method","invocation");
x.t("method","takes");
x.t("method","result");
x.t("method","implicitly");
x.t("method","date");
x.t("method","//");
x.t("method","returns");
x.t("method","names");
x.t("method","var");
x.t("method","even");
x.t("method","gets");
x.t("unchanged","properties");
x.t("unchanged","note");
x.t("notes","mark");
x.t("transactions","forms");
x.t("autosplit","false");
x.t("vehiclevl.asof","(asofdate)");
x.t("vehiclevl.asof","(date)");
x.t("effdatedbean","specific");
x.t("effdatedbean","typical");
x.t("effdatedbean","getversionasof");
x.t("effdatedbean","following");
x.t("effdatedbean","pass");
x.t("effdatedbean","gets");
x.t("possible","example");
x.t("flatmap","enhancement");
x.t("flatmap","collection");
x.t("available","drivers");
x.t("slicemodevehicle","myvehicle.getslice");
x.t("provide","amount");
x.t("multi-version","quoting");
x.t("version","root");
x.t("version","lists");
x.t("version","covvl");
x.t("version","bound");
x.t("version","segregated");
x.t("version","list");
x.t("version","versionlist.asof");
x.t("version","common");
x.t("version","exists");
x.t("version","effective");
x.t("version","list\u2019s");
x.t("version","car");
x.t("version","vehicle");
x.t("version","garage");
x.t("version","correct");
x.t("version","entity");
x.t("version","policyline");
x.t("version","object");
x.t("anything","special");
x.t("ever","array");
x.t("ever","drivers");
x.t("ever","policy");
x.t("right","version");
x.t("day","slice");
x.t("rare","exemption");
x.t("rare","typical");
x.t("policydriverversionlist","contents");
x.t("easy","read");
x.t("just","want");
x.t("just","ones");
x.t("just","end");
x.t("every","version");
x.t("every","property");
x.t("every","policy");
x.t("effectivedate","property");
x.t("quoting","job");
x.t("lists","version");
x.t("lists","lists");
x.t("lists","always");
x.t("lists","however");
x.t("lists","property");
x.t("lists","typed");
x.t("lists","cars");
x.t("lists","unique");
x.t("lists","powerful");
x.t("lists","important");
x.t("lists","represent");
x.t("lists","slice");
x.t("lists","additionally");
x.t("ask","cars");
x.t("files","detect");
x.t("files","offer");
x.t("files","instead");
x.t("files","pcf");
x.t("scalable","field");
x.t("within","couple");
x.t("within","effective");
x.t("within","policy");
x.t("overlapping","duplicates");
x.t("cast","version");
x.t("cast","list");
x.t("cast","item");
x.t("needs","cast");
x.t("full","effective");
x.t("insurance","industry");
x.t("february","15");
x.t("revisioned","entities");
x.t("revisioned","objects");
x.t("revisioned","list");
x.t("revisioned","subobject");
x.t("revisioned","entity");
x.t("contact","public");
x.t("contact","driver");
x.t("table","uses");
x.t("table","assumes");
x.t("table","row");
x.t("table","whose");
x.t("table","contains");
x.t("built-in","validation");
x.t("autopolicyline.pacosts","//");
x.t("vv","vehiclevl.asof");
x.t("business","includes");
x.t("instance","root");
x.t("instance","unchanged");
x.t("instance","version");
x.t("instance","revisioned");
x.t("instance","type");
x.t("instance","automatically");
x.t("instance","property");
x.t("instance","original");
x.t("instance","access");
x.t("instance","secondly");
x.t("instance","navigate");
x.t("instance","no");
x.t("instance","common");
x.t("instance","gosu");
x.t("instance","typed");
x.t("instance","edit");
x.t("instance","window");
x.t("instance","accessed");
x.t("instance","contrast");
x.t("instance","period");
x.t("instance","split");
x.t("instance","retrieve");
x.t("instance","different");
x.t("instance","represents");
x.t("instance","particular");
x.t("instance","words");
x.t("instance","simply");
x.t("instance","reference");
x.t("instance","least");
x.t("instance","data");
x.t("instance","appropriate");
x.t("instance","shared");
x.t("instance","slice");
x.t("instance","date");
x.t("instance","unsliced");
x.t("instance","preserved");
x.t("instance","entity");
x.t("instance","across");
x.t("instance","versions");
x.t("instance","even");
x.t("instance","remains");
x.t("august","customer");
x.t("august","expiration");
x.t("august","typically");
x.t("painted","today");
x.t("persistent","database");
x.t("10","sells");
x.t("related","job");
x.t("related","original");
x.t("related","objects");
x.t("related","discussion");
x.t("related","information");
x.t("key","properties");
x.t("key","references");
x.t("key","fields");
x.t("key","array");
x.t("key","links");
x.t("required","range");
x.t("workers","within");
x.t("workers","compensation");
x.t("various","information");
x.t("normal","gosu");
x.t("always","begin");
x.t("always","return");
x.t("always","happens");
x.t("always","case");
x.t("always","returns");
x.t("capitalizes","first");
x.t("arrayofpid","vehiclevl.driversasof");
x.t("keep","track");
x.t("source","property");
x.t("source","object");
x.t("variables","variables");
x.t("variables","contain");
x.t("variables","unsliced");
x.t("once","just");
x.t("scaling","splitting");
x.t("effective_date","specified_date");
x.t(".policyline.policyperiod.expirationdate","foreign");
x.t("foreign","key");
x.t("foreign","keys");
x.t("apply","changes");
x.t("improve","gosu");
x.t("likely","due");
x.t("void","following");
x.t("arguments","gosu");
x.t("arguments","compile");
x.t("vehicledriverversionlist","advanced");
x.t("covvl","vehiclevl.coverages");
x.t("job","happen");
x.t("job","version");
x.t("job","files");
x.t("job","standard");
x.t("job","policycenter");
x.t("job","sometimes");
x.t("job","changes");
x.t("job","non-bound");
x.t("job","process");
x.t("job","probably");
x.t("job","work");
x.t("job","typically");
x.t("tables","bound");
x.t("referenced","policyperiod");
x.t("try","pass");
x.t("situations","out-of-sequence");
x.t("user","chance");
x.t("contacts","following");
x.t("discussed","earlier");
x.t("topic","version");
x.t("topic","although");
x.t("current","version");
x.t("gaps","hasgaps");
x.t("creates","array");
x.t("improving","code");
x.t("until","exact");
x.t("shows","up");
x.t("shows","represents");
x.t("contexts","policycenter");
x.t("autolineexpiration","vehicle.getslice");
x.t("handled","automatically");
x.t("later","edit");
x.t("later","expiration");
x.t("later","effective");
x.t("uses","example");
x.t("uses","type");
x.t("uses","feature");
x.t("field","scales");
x.t("snapshot","array");
x.t("snapshot","entity");
x.t("line","example");
x.t("line","business");
x.t("line","last");
x.t("line","desired");
x.t("line","important");
x.t("line","return");
x.t("line","as-of");
x.t("line","date");
x.t("line","implicit");
x.t("last","moment");
x.t("last","second");
x.t("last","perhaps");
x.t("basically","asof");
x.t("(obj)","method");
x.t("text_val.select","link");
x.t("year","august");
x.t("year","march");
x.t("today","blue");
x.t("today","var");
x.t("specified_date","expiration_date");
x.t("specified_date","following");
x.t("mode","example");
x.t("mode","notes");
x.t("mode","version");
x.t("mode","just");
x.t("mode","related");
x.t("mode","change");
x.t("mode","delete");
x.t("mode","apis");
x.t("mode","automatically");
x.t("mode","property");
x.t("mode","entities");
x.t("mode","certain");
x.t("mode","items");
x.t("mode","think");
x.t("mode","access");
x.t("mode","objects");
x.t("mode","status");
x.t("mode","add");
x.t("mode","api");
x.t("mode","unless");
x.t("mode","overview");
x.t("mode","remember");
x.t("mode","viewed");
x.t("mode","common");
x.t("mode","no");
x.t("mode","edit");
x.t("mode","window");
x.t("mode","determine");
x.t("mode","accessed");
x.t("mode","subobjects");
x.t("mode","policycenter");
x.t("mode","effective");
x.t("mode","edits");
x.t("mode","car\u2019s");
x.t("mode","(unsliced)");
x.t("mode","changes");
x.t("mode","important");
x.t("mode","reference");
x.t("mode","vehicle");
x.t("mode","given");
x.t("mode","null");
x.t("mode","include");
x.t("mode","specific");
x.t("mode","typical");
x.t("mode","assuming");
x.t("mode","read-only");
x.t("mode","cases");
x.t("mode","typically");
x.t("mode","object\u2019s");
x.t("mode","unsliced");
x.t("mode","disables");
x.t("mode","call");
x.t("mode","order");
x.t("mode","following");
x.t("mode","entity");
x.t("mode","versions");
x.t("mode","naming");
x.t("mode","object");
x.t("working","window");
x.t("working","sliced");
x.t("working","policyperiod");
x.t("necessary","example");
x.t("potentially","different");
x.t("{cov.effectivedate}","expdate");
x.t("errors","consistently");
x.t("split-on-edit","approach");
x.t("people","need");
x.t("change","amounts");
x.t("change","technically");
x.t("change","existing");
x.t("change","made");
x.t("change","result");
x.t("change","slice");
x.t("change","across");
x.t("change","merged");
x.t("customer","calls");
x.t("customer","requests");
x.t("15","policy");
x.t("best","convert");
x.t("best","slice");
x.t("best","call");
x.t("capital","letter");
x.t("type","example");
x.t("type","source");
x.t("type","original");
x.t("type","policydriver");
x.t("type","list");
x.t("type","results");
x.t("type","reflection");
x.t("type","personalvehicle");
x.t("type","personalautolineversionlist");
x.t("type","returned");
x.t("type","compile");
x.t("type","return");
x.t("type","declaration");
x.t("type","result");
x.t("type","system");
x.t("type","entity");
x.t("type","contained");
x.t("type","item");
x.t("thing","notice");
x.t("vary","effective");
x.t("{g.city}","{g.state}");
x.t("time","flatmap");
x.t("time","version");
x.t("time","every");
x.t("time","job");
x.t("time","change");
x.t("time","however");
x.t("time","list");
x.t("time","exactly");
x.t("time","gosu");
x.t("time","object.slicedate");
x.t("time","expiration");
x.t("time","showing");
x.t("time","hasoverlaps");
x.t("time","begin");
x.t("time","sometimes");
x.t("time","period");
x.t("time","getarrayasof");
x.t("time","function");
x.t("time","car");
x.t("time","row");
x.t("time","getarray");
x.t("time","vehicle");
x.t("time","database");
x.t("time","extremely");
x.t("time","view");
x.t("time","information");
x.t("time","contractual");
x.t("time","structure");
x.t("time","date");
x.t("time","two");
x.t("time","ranges");
x.t("time","versions");
x.t("time","var");
x.t("time","object");
x.t("calls","getslice");
x.t("calls","begin");
x.t("calls","says");
x.t("december","31");
x.t("hierarchy","always");
x.t("hierarchy","entity");
x.t("hierarchy","without");
x.t("delete","subobject");
x.t("explicitly","example");
x.t("public","ids");
x.t("addtodrivers","(obj)");
x.t("(propname)","method");
x.t("(propname)","argument");
x.t("expdate","{cov.expirationdate}");
x.t("however","uses");
x.t("however","depends");
x.t("however","policycenter");
x.t("however","split");
x.t("however","may");
x.t("however","ways");
x.t("however","call");
x.t("however","adding");
x.t("however","object");
x.t("bound","job");
x.t("bound","rescinded");
x.t("bound","revisions");
x.t("bound","unbound");
x.t("regardless","whether");
x.t("down","hierarchy");
x.t("down","object");
x.t("editing","objects");
x.t("editing","window");
x.t("editing","data");
x.t("sort","order");
x.t("navigating","down");
x.t("total","price");
x.t("property","example");
x.t("property","method");
x.t("property","version");
x.t("property","source");
x.t("property","last");
x.t("property","type");
x.t("property","however");
x.t("property","checks");
x.t("property","original");
x.t("property","promoted");
x.t("property","list");
x.t("property","mostrecentmodel");
x.t("property","reflection");
x.t("property","reverted");
x.t("property","name");
x.t("property","gosu");
x.t("property","iterate");
x.t("property","argument");
x.t("property","window");
x.t("property","expiration");
x.t("property","array");
x.t("property","effective");
x.t("property","drivers");
x.t("property","first");
x.t("property","different");
x.t("property","particular");
x.t("property","real-world");
x.t("property","unclear");
x.t("property","explicit");
x.t("property","reference");
x.t("property","thus");
x.t("property","return");
x.t("property","whose");
x.t("property","null");
x.t("property","database-backed");
x.t("property","value");
x.t("property","policyperiod");
x.t("property","result");
x.t("property","slice");
x.t("property","policy");
x.t("property","contractual");
x.t("property","called");
x.t("property","note");
x.t("property","unsliced");
x.t("property","mentioned");
x.t("property","following");
x.t("property","returns");
x.t("property","pass");
x.t("property","names");
x.t("property","paths");
x.t("property","gets");
x.t("property","contains");
x.t("property","object");
x.t("rescinded","cancellations");
x.t("entities","hidden");
x.t("entities","effdatedbean");
x.t("entities","version");
x.t("entities","foreign");
x.t("entities","referenced");
x.t("entities","type");
x.t("entities","property");
x.t("entities","results");
x.t("entities","window");
x.t("entities","commonly");
x.t("entities","returned");
x.t("entities","database");
x.t("entities","information");
x.t("entities","slice");
x.t("entities","entity");
x.t("entities","using");
x.t("entities","getallversionsuntyped");
x.t("entities","across");
x.t("removes","policy");
x.t("automatically","properties");
x.t("automatically","splits");
x.t("automatically","gosu");
x.t("automatically","expiration");
x.t("automatically","effective");
x.t("automatically","split");
x.t("automatically","redundant");
x.t("automatically","slice");
x.t("automatically","gets");
x.t("apis","version");
x.t("apis","list");
x.t("apis","gosu");
x.t("apis","know");
x.t("apis","syntax");
x.t("apis","return");
x.t("apis","prevent");
x.t("apis","cases");
x.t("original","property");
x.t("original","in-memory");
x.t("original","drivers");
x.t("original","reference");
x.t("original","entity");
x.t("original","object");
x.t("needed","happens");
x.t("detect","certain");
x.t("detect","issue");
x.t("lowercase","character");
x.t("convert","window");
x.t("convert","item");
x.t("assumes","example");
x.t("assumes","vehicle");
x.t("checks","means");
x.t("typesafe","apis");
x.t("allcosts","autopolicyline.versionlist.pacosts.flatmap");
x.t("{g.addressline2}","{g.city}");
x.t("default","split-on-edit");
x.t("default","objects");
x.t("link","directly");
x.t("objects","ever");
x.t("objects","referenced");
x.t("objects","automatically");
x.t("objects","original");
x.t("objects","property");
x.t("objects","objects");
x.t("objects","access");
x.t("objects","includes");
x.t("objects","window");
x.t("objects","enhancement");
x.t("objects","array");
x.t("objects","effective");
x.t("objects","policycenter");
x.t("objects","split");
x.t("objects","fixed");
x.t("objects","approach");
x.t("objects","whole");
x.t("objects","reference");
x.t("objects","return");
x.t("objects","database");
x.t("objects","ensure");
x.t("objects","include");
x.t("objects","fixedid");
x.t("objects","slice");
x.t("objects","unsliced");
x.t("objects","links");
x.t("objects","across");
x.t("objects","object");
x.t("new","fixed");
x.t("new","car");
x.t("new","row");
x.t("new","vehicle");
x.t("new","date");
x.t("new","entity");
x.t("new","object");
x.t("single","list");
x.t("single","car");
x.t("single","vehicle");
x.t("single","driver");
x.t("promoted","property");
x.t("branch","window");
x.t("branch","effective");
x.t("branch","highest");
x.t("branch","contractual");
x.t("branch","called");
x.t("branch","choose");
x.t("access","properties");
x.t("access","rare");
x.t("access","every");
x.t("access","related");
x.t("access","foreign");
x.t("access","automatically");
x.t("access","objects");
x.t("access","simple");
x.t("access","different");
x.t("access","branch\u2019s");
x.t("access","policyperiod");
x.t("access","links");
x.t("access","run");
x.t("access","policyline");
x.t("want","access");
x.t("want","list");
x.t("want","personal");
x.t("want","display");
x.t("want","car\u2019s");
x.t("want","instead");
x.t("want","code");
x.t("want","show");
x.t("want","typical");
x.t("want","work");
x.t("want","costs");
x.t("details","time");
x.t("details","list");
x.t("details","window");
x.t("certain","changes");
x.t("certain","types");
x.t("certain","date");
x.t("offer","user");
x.t("differences","window");
x.t("items","list");
x.t("getting","version");
x.t("getting","property");
x.t("getting","first");
x.t("getting","versionlist");
x.t("think","snapshot");
x.t("extracts","data");
x.t("speaking","window");
x.t("engine","important");
x.t("contents","property");
x.t("advanced","version");
x.t("advanced","versionlist");
x.t("==","null");
x.t("includes","workers");
x.t("includes","advanced");
x.t("includes","special");
x.t("sells","old");
x.t("color","change");
x.t("color","request");
x.t("color","car\u2019s");
x.t("license","number");
x.t("usually","last");
x.t("usually","want");
x.t("usually","correct");
x.t("price","policy");
x.t("block","takes");
x.t("block","case");
x.t("segregated","unique");
x.t("amounts","change");
x.t("amounts","applies");
x.t("messsage","policycenter");
x.t("31","note");
x.t("found","easily");
x.t("need","provide");
x.t("need","anything");
x.t("need","cast");
x.t("need","edit");
x.t("need","send");
x.t("need","worry");
x.t("need","date");
x.t("status","stored");
x.t("list","example");
x.t("list","getslice");
x.t("list","properties");
x.t("list","method");
x.t("list","effdatedbean");
x.t("list","version");
x.t("list","policydriverversionlist");
x.t("list","various");
x.t("list","vehicledriverversionlist");
x.t("list","type");
x.t("list","sort");
x.t("list","property");
x.t("list","apis");
x.t("list","access");
x.t("list","differences");
x.t("list","details");
x.t("list","objects");
x.t("list","list");
x.t("list","policydriver");
x.t("list","api");
x.t("list","personalvehicle");
x.t("list","no");
x.t("list","follows");
x.t("list","exactly");
x.t("list","gosu");
x.t("list","argument");
x.t("list","methods");
x.t("list","array");
x.t("list","three");
x.t("list","effective");
x.t("list","cars");
x.t("list","effdatedversionlist");
x.t("list","drivers");
x.t("list","members");
x.t("list","cost");
x.t("list","car");
x.t("list","represents");
x.t("list","unique");
x.t("list","vehicledriver");
x.t("list","driverasof");
x.t("list","specially");
x.t("list","code");
x.t("list","return");
x.t("list","variable");
x.t("list","specific");
x.t("list","personalautoline");
x.t("list","correct");
x.t("list","policyperiod");
x.t("list","result");
x.t("list","examples");
x.t("list","typically");
x.t("list","vehicle\u2019s");
x.t("list","call");
x.t("list","entity");
x.t("list","using");
x.t("list","containing");
x.t("list","returns");
x.t("list","member");
x.t("list","vehicle.allversions");
x.t("list","suffix");
x.t("list","var");
x.t("list","contains");
x.t("list","object");
x.t("vehicle.versionlist","three");
x.t("vehiclevl.driversasof","(thedate)");
x.t("vehiclevl.driversasof","(date)");
x.t("policydriver","version");
x.t("policydriver","change");
x.t("policydriver","property");
x.t("policydriver","add");
x.t("combines","single");
x.t("vehiclesliced","vehicleversion.getslice");
x.t("couple","separate");
x.t("revisioning","details");
x.t("revisioning","structure");
x.t("revisioning","across");
x.t("id","shows");
x.t("id","versions");
x.t("mostrecentmodel","slice");
x.t("editeffectivedate","changes");
x.t("beginning","year");
x.t("add","asof");
x.t("add","subobject");
x.t("add","object");
x.t("during","entire");
x.t("during","period");
x.t("versionlist.asof","(date)");
x.t("expansion","gosu");
x.t("expansion","operator");
x.t("vehicleunsliced.garagelocation","property");
x.t("secondly","getslice");
x.t("track","entity");
x.t("incorrect","manipulation");
x.t("guide","safely");
x.t("guide","related");
x.t("guide","drivers");
x.t("guide","additional");
x.t("guide","information");
x.t("entry","car");
x.t("api","overview");
x.t("api","reference");
x.t("results","list");
x.t("results","window");
x.t("results","single-dimension");
x.t("results","code");
x.t("results","inherent");
x.t("unless","otherwise");
x.t("assume","variable");
x.t(".publicid","driversasof");
x.t("vehicledriver.policydriver","property");
x.t("simple","properties");
x.t("check","object");
x.t("due","incorrect");
x.t("due","removed");
x.t("applies","directly");
x.t("applies","entire");
x.t("propname","date");
x.t("splitting","behaviors");
x.t("normally","happen");
x.t("features","policycenter");
x.t("overview","version");
x.t("overview","view");
x.t("overview","information");
x.t("overview","slice");
x.t("overview","two");
x.t("remember","return");
x.t("remember","save");
x.t("navigate","related");
x.t("navigate","down");
x.t("navigate","up");
x.t("sure","slice");
x.t("throws","null");
x.t("throws","exception");
x.t("splits","two");
x.t("false","scalable");
x.t("mirror","original");
x.t("mirror","property");
x.t("unslicedvehicle.policyline.getslice","(date)");
x.t("reflection","property");
x.t("reflection","apis");
x.t("reflection","dynamic");
x.t("reflection","specify");
x.t("collections","gosu");
x.t("autopolicyline.versionlist.pacosts.flatmap","costvl");
x.t("depends","context");
x.t("directly","edit");
x.t("directly","accessing");
x.t("directly","database-backed");
x.t("directly","page");
x.t("directly","partway");
x.t("true","effective_date");
x.t("true","almost");
x.t("true","code");
x.t("true","made");
x.t("unselected","versions");
x.t("desired","property");
x.t("desired","subtype");
x.t("desired","date");
x.t("viewed","february");
x.t("viewed","march");
x.t("viewed","april");
x.t("handle","situations");
x.t("handle","policyperiod");
x.t("converts","returns");
x.t("personalvehicle","example");
x.t("personalvehicle","version");
x.t("personalvehicle","property");
x.t("personalvehicle","check");
x.t("specified","date");
x.t("origdrivers","firstversion.getslice");
x.t("text_val.focus","text_val.select");
x.t("stored","effectivedate");
x.t("stored","in-memory");
x.t("stored","expirationdate");
x.t("stored","database");
x.t("stored","policyperiod");
x.t("common","version");
x.t("common","policycenter");
x.t("common","reference");
x.t("common","mistake");
x.t("common","case");
x.t("no","version");
x.t("no","car");
x.t("no","return");
x.t("no","vehicle");
x.t("no","defined");
x.t("no","slice");
x.t("no","sense");
x.t("no","implicit");
x.t("no","child");
x.t("range","dates");
x.t("range","forward");
x.t("range","gosu");
x.t("range","code");
x.t("range","policy");
x.t("range","unsliced");
x.t("range","individual");
x.t("range","covered");
x.t("range","object");
x.t("outside","required");
x.t("reverted","split");
x.t("forward","unlike");
x.t("forward","later");
x.t("forward","window");
x.t("forward","effective");
x.t("forward","future");
x.t("forward","object");
x.t("conflicts","information");
x.t("name","example");
x.t("name","passed");
x.t("name","method");
x.t("name","variables");
x.t("name","original");
x.t("name","property");
x.t("name","exactly");
x.t("name","drivers");
x.t("name","important");
x.t("name","matches");
x.t("name","date");
x.t("name","using");
x.t("overlap","entity");
x.t("edit","example");
x.t("edit","window");
x.t("edit","separately");
x.t("edit","policyperiod");
x.t("edit","date");
x.t("edit","numbers");
x.t("edit","entity");
x.t("edit","using");
x.t("gosu","coding");
x.t("gosu","always");
x.t("gosu","creates");
x.t("gosu","type");
x.t("gosu","time");
x.t("gosu","block");
x.t("gosu","throws");
x.t("gosu","checking");
x.t("gosu","array");
x.t("gosu","policycenter");
x.t("gosu","blocks");
x.t("gosu","know");
x.t("gosu","specially");
x.t("gosu","code");
x.t("gosu","reference");
x.t("gosu","enhancements");
x.t("gosu","returns");
x.t("gosu","generates");
x.t("changed","effective");
x.t("changed","twice");
x.t("changed","often");
x.t("changed","entity");
x.t("iterate","across");
x.t("exactly","three");
x.t("exactly","independent");
x.t("exactly","row");
x.t("exactly","matches");
x.t("follows","entities");
x.t("tasks","version");
x.t("vehiclevl.allversions","car");
x.t("references","access");
x.t("references","array");
x.t("typed","root");
x.t("typed","property");
x.t("typed","match");
x.t("part","official");
x.t("annual","policy");
x.t("old","car");
x.t("object.slicedate","property");
x.t("argument","example");
x.t("argument","argument");
x.t("argument","driversasof");
x.t("argument","effective");
x.t("argument","important");
x.t("argument","code");
x.t("argument","slightly");
x.t("argument","takes");
x.t("vehiclevl.drivers","result");
x.t("concrete","example");
x.t("payroll","amounts");
x.t("payroll","class");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("boolean","property");
x.t("boolean","check");
x.t("boolean","boolean");
x.t("boolean","versions");
x.t("window","mode");
x.t("window","edit");
x.t("window","feature");
x.t("none","effective");
x.t("methods","version");
x.t("methods","type");
x.t("methods","property");
x.t("methods","mirror");
x.t("methods","common");
x.t("methods","driverasof");
x.t("methods","algorithms");
x.t("methods","easier");
x.t("rule","method");
x.t("driversasof","method");
x.t("driversasof","(date)");
x.t("mirrored","property");
x.t("exists","asof");
x.t("checking","correctness");
x.t("mycostversionlists","autopolicyline.versionlist.pacosts");
x.t("firstversion.getslice","(firstversion.effectivedate)");
x.t("cloned","new");
x.t("up","until");
x.t("up","down");
x.t("up","policycenter");
x.t("up","policyperiod");
x.t("official","legally-binding");
x.t("standard","foreign");
x.t("standard","application");
x.t("find","right");
x.t("find","version");
x.t("determine","version");
x.t("determine","slice");
x.t("manipulation","entities");
x.t("firstversionunsliced","vehiclevl.allversions.first");
x.t("industry","calls");
x.t("withdraw","policy");
x.t("insured","buys");
x.t("jurisdictions","mark");
x.t("arrays","example");
x.t("arrays","entities");
x.t("arrays","entity");
x.t("enhancement","properties");
x.t("enhancement","method");
x.t("enhancement","property");
x.t(".availabledrivers","although");
x.t("lines","code");
x.t("lines","vehicle");
x.t("lines","entirely");
x.t("lines","vehicles");
x.t("expiration","dates");
x.t("expiration","december");
x.t("expiration","window");
x.t("expiration","date");
x.t("expiration","including");
x.t("showing","single");
x.t("accessed","gosu");
x.t("accessed","slice");
x.t("sets","up");
x.t("sets","slice");
x.t("slicedpolicyperiod","apolicyperiod.getslice");
x.t("local","memory");
x.t("entire","policy");
x.t("entire","contractual");
x.t("array","properties");
x.t("array","property");
x.t("array","entities");
x.t("array","objects");
x.t("array","list");
x.t("array","expansion");
x.t("array","no");
x.t("array","references");
x.t("array","empty");
x.t("array","effective");
x.t("array","drivers");
x.t("array","return");
x.t("array","null");
x.t("array","policy");
x.t("array","choose");
x.t("array","entity");
x.t("array","similarly");
x.t("array","driver");
x.t("array","extract");
x.t("string","number");
x.t("fields","window-mode");
x.t("fix","binding");
x.t("empty","list");
x.t("empty","array");
x.t("impossible","typesafe");
x.t("subobjects","policycenter");
x.t("subobjects","effective");
x.t("subobjects","policy");
x.t("subobjects","slice");
x.t("subobjects","typically");
x.t("second","example");
x.t("second","window");
x.t("second","expiration");
x.t("second","row");
x.t("second","accesses");
x.t("expiration_date","effective");
x.t("three","different");
x.t("three","rows");
x.t("three","entity");
x.t("three","versions");
x.t("attribute","autosplit");
x.t("personal","auto");
x.t("personal","vehicle");
x.t("rely","feature");
x.t("rely","order");
x.t("understand","method");
x.t("understand","window");
x.t("earlier","topic");
x.t("hasoverlaps","true");
x.t("problems","fix");
x.t("addto","source");
x.t("in-line","functions");
x.t("coverage","display");
x.t("(asofdate)",".availabledrivers");
x.t("(asofdate)","vehicleunsliced");
x.t("(asofdate)","//");
x.t("contain","sliced");
x.t("contain","unsliced");
x.t("effective","dates");
x.t("effective","time");
x.t("effective","desired");
x.t("effective","specified");
x.t("effective","up");
x.t("effective","expiration");
x.t("effective","period");
x.t("effective","particular");
x.t("effective","given");
x.t("effective","specific");
x.t("effective","dated");
x.t("effective","march");
x.t("effective","slice");
x.t("effective","date");
x.t("policycenter","built-in");
x.t("policycenter","capitalizes");
x.t("policycenter","job");
x.t("policycenter","uses");
x.t("policycenter","automatically");
x.t("policycenter","objects");
x.t("policycenter","includes");
x.t("policycenter","list");
x.t("policycenter","sets");
x.t("policycenter","edits");
x.t("policycenter","hide");
x.t("policycenter","represents");
x.t("policycenter","stores");
x.t("policycenter","code");
x.t("policycenter","accesses");
x.t("policycenter","application");
x.t("policycenter","policy");
x.t("policycenter","returns");
x.t("policycenter","overrides");
x.t("policycenter","gets");
x.t("begin","lowercase");
x.t("begin","end");
x.t("auto","auto");
x.t("auto","effective");
x.t("auto","policy");
x.t("auto","costs");
x.t("in-memory","version");
x.t("in-memory","policyperiod");
x.t("in-memory","copy");
x.t("cars","exist");
x.t("cars","ever");
x.t("cars","effective");
x.t("cars","slice");
x.t("cars","policy");
x.t("request","cars");
x.t("vehicle.drivers","property");
x.t("rating","engine");
x.t("rating","code");
x.t("effdatedversionlist","contents");
x.t("functions","powerful");
x.t("pacosts","property");
x.t("ones","effective");
x.t("error","working");
x.t("error","occurred");
x.t("error","var");
x.t("notice","first");
x.t("notice","policy");
x.t("notice","two");
x.t("sometimes","want");
x.t("sometimes","split");
x.t("sometimes","changes");
x.t("sometimes","view");
x.t("sometimes","called");
x.t("contrast","ask");
x.t("contrast","sometimes");
x.t("contrast","slice");
x.t("contrast","adding");
x.t("point","policy");
x.t("display","name");
x.t("display","pcf");
x.t("display","page");
x.t("display","coverages");
x.t("colors","three");
x.t("vehondate","vehiclevl.asof");
x.t("allversions","property");
x.t(".policydriver",".publicid");
x.t("window-mode","reference");
x.t("window-mode","entity");
x.t("respect","policy");
x.t("unslicedvehicle.versionlist.asof","(date)");
x.t("review","gosu");
x.t("independent","properties");
x.t("blocks","gosu");
x.t("blocks","in-line");
x.t("queries","typical");
x.t("separately","note");
x.t("revision","policyperiod");
x.t("suppose","want");
x.t("suppose","window");
x.t("suppose","personalautoline");
x.t("suppose","march");
x.t("suppose","policy");
x.t("red","car");
x.t("period","example");
x.t("period","people");
x.t("period","branch");
x.t("period","color");
x.t("period","found");
x.t("period","list");
x.t("period","need");
x.t("period","gosu");
x.t("period","boolean");
x.t("period","allversions");
x.t("period","different");
x.t("period","represents");
x.t("period","instead");
x.t("period","important");
x.t("period","result");
x.t("period","case");
x.t("period","slice");
x.t("period","following");
x.t("period","entity");
x.t("automatic","scaling");
x.t("automatic","changes");
x.t("drivers","method");
x.t("drivers","ever");
x.t("drivers","version");
x.t("drivers","type");
x.t("drivers","however");
x.t("drivers","property");
x.t("drivers","license");
x.t("drivers","vehiclevl.driversasof");
x.t("drivers","applies");
x.t("drivers","vehiclevl.drivers");
x.t("drivers","firstversion.getslice");
x.t("drivers","vehicle.drivers");
x.t("drivers","drivers");
x.t("drivers","car");
x.t("drivers","vehicle");
x.t("drivers","gw.entity.iarraypropertyinfo");
x.t("drivers","specific");
x.t("drivers","date");
x.t("drivers","driver");
x.t("vehicleunsliced","vehiclevl.asof");
x.t("vehicleunsliced","==");
x.t("vehicleunsliced","vehicleunsliced.garagelocation");
x.t("vehicleunsliced","object");
x.t("know","type");
x.t("know","property");
x.t("know","whether");
x.t("personalautolineversionlist","every");
x.t("explanation","mirrored");
x.t("validation","code");
x.t("validation","routines");
x.t("members","every");
x.t("syntax","getarrayasof");
x.t("syntax","getarray");
x.t("finally","flatmap");
x.t("consistently","name");
x.t("behaviors","normally");
x.t("first","example");
x.t("first","car");
x.t("first","row");
x.t("first","accesses");
x.t("first","character");
x.t("first","date");
x.t("first","item");
x.t("means","first");
x.t("means","entity");
x.t("split","transactions");
x.t("split","shows");
x.t("split","explicitly");
x.t("split","editing");
x.t("split","needed");
x.t("split","edit");
x.t("split","split");
x.t("split","slice");
x.t("split","date");
x.t("split","entity");
x.t("split","occur");
x.t("split","object");
x.t("fixed","id");
x.t("fixed","ids");
x.t("kept","series");
x.t("out-of-sequence","changes");
x.t("out-of-sequence","policy");
x.t("out-of-sequence","jobs");
x.t("resolve","conflicts");
x.t("feature","discussed");
x.t("feature","objects");
x.t("feature","navigate");
x.t("list\u2019s","allversions");
x.t("getarrayasof","propname");
x.t("throw","no");
x.t("throw","exception");
x.t("concise","possible");
x.t("collection","enhancement");
x.t("collection","enhancements");
x.t("vehicleversion.getslice","vehicleunsliced.expirationdate");
x.t("guidewire_selectall","var");
x.t("expirationdate","property");
x.t("unfinished","jobs");
x.t("number","gosu");
x.t("number","enforced");
x.t("number","generally");
x.t("edits","editing");
x.t("edits","directly");
x.t("edits","window");
x.t("edits","made");
x.t("edits","slice");
x.t("edits","merge");
x.t("setup","policyperiod");
x.t("worrying","revisioning");
x.t("cost","version");
x.t("cost","vary");
x.t("cost","entities");
x.t("cost","objects");
x.t("cost","finally");
x.t("cost","costs");
x.t("1-dimensional","array");
x.t("function","guidewire_selectall");
x.t("car","example");
x.t("car","version");
x.t("car","painted");
x.t("car","regardless");
x.t("car","removes");
x.t("car","want");
x.t("car","details");
x.t("car","vehicle.versionlist");
x.t("car","list");
x.t("car","during");
x.t("car","reflection");
x.t("car","personalvehicle");
x.t("car","specified");
x.t("car","range");
x.t("car","iterate");
x.t("car","changed");
x.t("car","annual");
x.t("car","three");
x.t("car","effective");
x.t("car","period");
x.t("car","car");
x.t("car","different");
x.t("car","represents");
x.t("car","adds");
x.t("car","effectively");
x.t("car","variable");
x.t("car","specific");
x.t("car","slice");
x.t("car","policy");
x.t("car","called");
x.t("car","note");
x.t("car","across");
x.t("car","versions");
x.t("car","var");
x.t("car","object");
x.t("equation","true");
x.t("hide","subobjects");
x.t("apolicyperiod.getslice","(slicedate)");
x.t("quote","time");
x.t("vehiclevl","//");
x.t("vehiclevl","var");
x.t("vehiclevl","contains");
x.t("car\u2019s","version");
x.t("car\u2019s","effective");
x.t("car\u2019s","garage");
x.t("commonly","represents");
x.t("retrieve","database");
x.t("approach","improving");
x.t("approach","changes");
x.t("represents","change");
x.t("represents","navigating");
x.t("represents","total");
x.t("represents","property");
x.t("represents","new");
x.t("represents","single");
x.t("represents","exactly");
x.t("represents","car");
x.t("represents","different");
x.t("represents","unique");
x.t("represents","changes");
x.t("represents","policyperiod");
x.t("represents","slice");
x.t("represents","structure");
x.t("represents","versions");
x.t("different","version");
x.t("different","type");
x.t("different","color");
x.t("different","effective");
x.t("different","colors");
x.t("different","return");
x.t("different","previous");
x.t("different","fixedid");
x.t("different","result");
x.t("different","policy");
x.t("different","object");
x.t("may","version");
x.t("may","access");
x.t("may","period");
x.t("may","return");
x.t("may","confused");
x.t("whether","current");
x.t("whether","working");
x.t("whether","changed");
x.t("particular","window");
x.t("particular","car");
x.t("particular","date");
x.t("(slicedate)",".policyline.policyperiod.expirationdate");
x.t("(slicedate)","however");
x.t("(slicedate)","returned");
x.t("words","call");
x.t("words","entity");
x.t("workflow","files");
x.t("unique","objects");
x.t("unique","coverage");
x.t("unique","drivers");
x.t("unique","entity");
x.t("unique","driver");
x.t("carefully","review");
x.t("canceled","added");
x.t("canceled","return");
x.t("canceled","pass");
x.t("cannot","access");
x.t("edited","window");
x.t("row","label");
x.t("row","effective");
x.t("row","contrast");
x.t("row","means");
x.t("row","database");
x.t("row","policyperiod");
x.t("row","following");
x.t("row","object");
x.t("requests","auto");
x.t("stores","in-memory");
x.t("stores","database");
x.t("stores","revisions");
x.t("ways","access");
x.t("ways","window-mode");
x.t("almost","code");
x.t("instead","version");
x.t("instead","property");
x.t("instead","suppose");
x.t("instead","print");
x.t("instead","typically");
x.t("twice","during");
x.t("vehicledriver","objects");
x.t("vehicledriver","drivers");
x.t("java.util.list","vehicledriver");
x.t("accessing","foreign");
x.t("mind","notice");
x.t("detailed","explanation");
x.t("technically","always");
x.t("powerful","gosu");
x.t("(unsliced)","objects");
x.t("changes","happen");
x.t("changes","job");
x.t("changes","later");
x.t("changes","bound");
x.t("changes","forward");
x.t("changes","sometimes");
x.t("changes","out-of-sequence");
x.t("changes","particular");
x.t("changes","affect");
x.t("changes","withdrawn");
x.t("changes","future");
x.t("changes","policy");
x.t("changes","slice");
x.t("changes","date");
x.t("changes","merge");
x.t("changes","across");
x.t("returned","window");
x.t("returned","slice");
x.t("returned","object");
x.t("redundant","call");
x.t("pcf","files");
x.t("driverasof","rare");
x.t("driverasof","(date)");
x.t("real-world","tasks");
x.t("real-world","policycenter");
x.t("real-world","code");
x.t("single-dimension","array");
x.t("match","entity");
x.t("types","problems");
x.t("compile","time");
x.t("compile","error");
x.t("earliest","effective");
x.t("simply","access");
x.t("simply","unsliced");
x.t("simply","deleted");
x.t("persist","policycenter");
x.t("specially","typed");
x.t("specially","marks");
x.t("marks","slice");
x.t("important","method");
x.t("important","version");
x.t("important","keep");
x.t("important","thing");
x.t("important","apis");
x.t("important","overview");
x.t("important","reflection");
x.t("important","understand");
x.t("important","important");
x.t("important","note");
x.t("important","returns");
x.t("important","generally");
x.t("versionlist.allversions","property");
x.t("initial","capital");
x.t("unclear","respect");
x.t("explicit","date");
x.t("added","policy");
x.t("algorithms","impossible");
x.t("driversarray","vehiclevl.getarray");
x.t("works","compile");
x.t("end","active");
x.t("end","dates");
x.t("end","year");
x.t("rows","red");
x.t("rows","database");
x.t("rows","represent");
x.t("reference","unchanged");
x.t("reference","revisioned");
x.t("reference","job");
x.t("reference","guide");
x.t("reference","no");
x.t("reference","edit");
x.t("reference","window-mode");
x.t("reference","task");
x.t("reference","policyperiod");
x.t("reference","following");
x.t("reference","entity");
x.t("code","example");
x.t("code","looks");
x.t("code","easy");
x.t("code","cast");
x.t("code","needs");
x.t("code","calls");
x.t("code","want");
x.t("code","list");
x.t("code","navigate");
x.t("code","iterate");
x.t("code","gosu");
x.t("code","boolean");
x.t("code","methods");
x.t("code","mycostversionlists");
x.t("code","arrays");
x.t("code","rely");
x.t("code","display");
x.t("code","concise");
x.t("code","may");
x.t("code","works");
x.t("code","vehicle.versionlist.allversions.first");
x.t("code","examples");
x.t("code","probably");
x.t("code","readability");
x.t("code","work");
x.t("code","slices");
x.t("code","created");
x.t("code","costs");
x.t("code","var");
x.t("code","gets");
x.t("whole","branch");
x.t("thedate","new");
x.t("task","property");
x.t("hasgaps","property");
x.t("invalid","data");
x.t("invalid","date");
x.t("getarray","(propname)");
x.t("effdate","{cov.effectivedate}");
x.t("vehicle","version");
x.t("vehicle","change");
x.t("vehicle","property");
x.t("vehicle","new");
x.t("vehicle","items");
x.t("vehicle","effective");
x.t("vehicle","drivers");
x.t("vehicle","earliest");
x.t("vehicle","unbound");
x.t("vehicle","along");
x.t("vehicle","subobject");
x.t("vehicle","print");
x.t("vehicle","two");
x.t("vehicle","slices");
x.t("vehicle","entity");
x.t("vehicle","object");
x.t("vehicle","gets");
x.t("vehicle","specify");
x.t("cancellations","changes");
x.t("adds","policy");
x.t("return","lists");
x.t("return","contact");
x.t("return","type");
x.t("return","entities");
x.t("return","window");
x.t("return","empty");
x.t("return","1-dimensional");
x.t("return","different");
x.t("return","ready");
x.t("return","null");
x.t("return","value");
x.t("return","result");
x.t("return","returns");
x.t("thus","default");
x.t("thus","vehicle");
x.t("thus","seem");
x.t("thus","vehicle\u2019s");
x.t("ids","contacts");
x.t("ids","list");
x.t("ids","costs");
x.t("slightly","different");
x.t("gw.entity.iarraypropertyinfo","var");
x.t("often","just");
x.t("{g.addressline1}","{g.addressline2}");
x.t("sliced","version");
x.t("sliced","unsliced");
x.t("database","version");
x.t("database","tables");
x.t("database","however");
x.t("database","queries");
x.t("database","row");
x.t("database","represent");
x.t("database","query");
x.t("database","differing");
x.t("database","contains");
x.t("exact","date");
x.t("newer","car");
x.t("given","effective");
x.t("given","date");
x.t("memory","gosu");
x.t("merging","changes");
x.t("issue","quote");
x.t("matches","property");
x.t("asof","method");
x.t("asof","returns");
x.t("asof","suffix");
x.t("asof","(date)");
x.t("exemption","normal");
x.t("ready","slice");
x.t("previous","example");
x.t("least","amount");
x.t("affect","full");
x.t("affect","entity");
x.t("periodend","property");
x.t("branches","unfinished");
x.t("branches","include");
x.t("legally","binding");
x.t("accesses","second");
x.t("accesses","policy");
x.t("effectively","list");
x.t("ensure","access");
x.t("whose","name");
x.t("variable","vehiclevl");
x.t("variable","called");
x.t("actual","contact");
x.t("vehicle.versionlist.allversions.first","collection");
x.t("notallcosts","autopolicyline.pacosts");
x.t("seem","following");
x.t("bundle","usually");
x.t("occurred","messsage");
x.t("null","no");
x.t("null","none");
x.t("null","throw");
x.t("null","code");
x.t("null","value");
x.t("null","throwing");
x.t("null","implicitly");
x.t("null","pointer");
x.t("null","tolerant");
x.t("existing","vehicle");
x.t("existing","subobject");
x.t("existing","object");
x.t("made","job");
x.t("made","first");
x.t("made","legally");
x.t("made","date");
x.t("extremely","common");
x.t("ratingperiodstartdates","wccoveredemployees");
x.t("include","branches");
x.t("include","ratingperiodstartdates");
x.t("include","suffix");
x.t("non-bound","revisions");
x.t("amount","time");
x.t("amount","payroll");
x.t("amount","non-effective");
x.t("instances","version");
x.t("instances","gosu");
x.t("instances","window");
x.t("instances","represents");
x.t("subtopics","describe");
x.t("null-safety","properties");
x.t("keys","arrays");
x.t("keys","slice");
x.t("database-backed","properties");
x.t("database-backed","property");
x.t("variety","policycenter");
x.t("vehiclevl.allversions.first","var");
x.t("cov","covvl.allversions");
x.t("discussion","available");
x.t("additional","features");
x.t("value","getslice");
x.t("value","instance");
x.t("value","property");
x.t("value","new");
x.t("value","list");
x.t("value","true");
x.t("value","slicedpolicyperiod");
x.t("value","second");
x.t("value","note");
x.t("easier","understand");
x.t("easier","code");
x.t("unslicedvehicle.getslice","(date)");
x.t("similar","property");
x.t("similar","allversions");
x.t("similar","code");
x.t("routines","method");
x.t("vehiclevl.availabledriversasof","(asofdate)");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("revisions","stored");
x.t("revisions","part");
x.t("revisions","database");
x.t("revisions","withdrawn");
x.t("revisions","in-progress");
x.t("revisions","legally-binding");
x.t("revisions","differing");
x.t("selecting","withdraw");
x.t("enforced","branch");
x.t("branch\u2019s","subobjects");
x.t("specific","effective");
x.t("specific","subtype");
x.t("specific","slice");
x.t("specific","date");
x.t("specific","subclass");
x.t("specific","entity");
x.t("already","effective");
x.t("already","slice");
x.t("preempted","jobs");
x.t(".getslice","(date)");
x.t("invocation","null");
x.t("as-of","date");
x.t("send","rating");
x.t("declaration","method");
x.t("throwing","exception");
x.t("mistake","code");
x.t("meaningless","usually");
x.t("vehiclesliced.garagelocation","//");
x.t("unbound","branches");
x.t("unbound","policy");
x.t("unbound","versions");
x.t("view","branch");
x.t("view","objects");
x.t("view","policy");
x.t("view","called");
x.t("view","versions");
x.t("exception","example");
x.t("exception","effdatedbean");
x.t("exception","auto");
x.t("exception","asof");
x.t("exception","condition");
x.t("worry","unavailable");
x.t("process","workflow");
x.t("forms","objects");
x.t("generated","methods");
x.t("garage","{g.addressline1}");
x.t("garage","location");
x.t("garage","slice");
x.t("garage","date");
x.t("condition","list");
x.t("flattened","list");
x.t("perhaps","particular");
x.t("builder","apis");
x.t("convention","variables");
x.t("says","car");
x.t("represent","cost");
x.t("represent","car");
x.t("represent","object");
x.t("withdrawn","selecting");
x.t("withdrawn","policy");
x.t("takes","gosu");
x.t("takes","cost");
x.t("takes","date");
x.t("takes","entity");
x.t("although","looks");
x.t("although","personalvehicle.availabledrivers");
x.t("subtype","list");
x.t("subtype","empty");
x.t("subtype","compile");
x.t("read","information");
x.t("myvehicle.getslice","(slicedate)");
x.t("page","lists");
x.t("page","error");
x.t("diagram","represents");
x.t("fixedid","value");
x.t("fixedid","values");
x.t("in-progress","revisions");
x.t("location","usually");
x.t("location","changed");
x.t("location","second");
x.t("location","specific");
x.t("location","location");
x.t("location","real");
x.t("personalautoline","want");
x.t("personalautoline","object");
x.t("dynamic","access");
x.t("along","display");
x.t("show","location");
x.t("inherent","context");
x.t("context","determine");
x.t("context","cases");
x.t("separate","date");
x.t("graph","root");
x.t("graph","revisioned");
x.t("graph","hierarchy");
x.t("graph","however");
x.t("graph","objects");
x.t("graph","subobjects");
x.t("graph","automatic");
x.t("graph","slice");
x.t("graph","note");
x.t("policyperiod.periodstart","property");
x.t("legally-binding","history");
x.t("legally-binding","versions");
x.t("data","version");
x.t("data","likely");
x.t("data","effective");
x.t("data","edits");
x.t("data","model");
x.t("data","item");
x.t("typical","edit");
x.t("typical","window");
x.t("typical","code");
x.t("dated","entities");
x.t("information","persistent");
x.t("information","window");
x.t("information","blocks");
x.t("information","out-of-sequence");
x.t("information","collection");
x.t("information","database");
x.t("information","null-safety");
x.t("information","object");
x.t("correct","version");
x.t("correct","convert");
x.t("correct","window");
x.t("noted","versionlist.allversions");
x.t("versionlist","example");
x.t("versionlist","version");
x.t("versionlist","property");
x.t("versionlist","apis");
x.t("duplicates","across");
x.t("vehicleunsliced.expirationdate","sec");
x.t("query","results");
x.t("query","return");
x.t("query","builder");
x.t("query","query");
x.t("policyperiod","related");
x.t("policyperiod","job");
x.t("policyperiod","necessary");
x.t("policyperiod","original");
x.t("policyperiod","new");
x.t("policyperiod","editeffectivedate");
x.t("policyperiod","navigate");
x.t("policyperiod","changed");
x.t("policyperiod","sets");
x.t("policyperiod","subobjects");
x.t("policyperiod","simply");
x.t("policyperiod","reference");
x.t("policyperiod","periodend");
x.t("policyperiod","specific");
x.t("policyperiod","graph");
x.t("policyperiod","policyperiod");
x.t("policyperiod","slice");
x.t("policyperiod","subobject");
x.t("policyperiod","note");
x.t("policyperiod","typically");
x.t("policyperiod","work");
x.t("policyperiod","entity");
x.t("policyperiod","contains");
x.t("policyperiod","object");
x.t("march","10");
x.t("march","customer");
x.t("march","insured");
x.t("march","expiration");
x.t("march","end");
x.t("march","policy");
x.t("examples","topic");
x.t("examples","assume");
x.t("examples","variety");
x.t("examples","unbound");
x.t("examples","following");
x.t("in-process","policy");
x.t("probably","need");
x.t("probably","slice");
x.t("save","return");
x.t("happens","window");
x.t("happens","immediately");
x.t("future","effective");
x.t("future","renewals");
x.t("result","method");
x.t("result","void");
x.t("result","potentially");
x.t("result","type");
x.t("result","original");
x.t("result","single");
x.t("result","list");
x.t("result","split");
x.t("result","first");
x.t("result","represents");
x.t("result","java.util.list");
x.t("result","asof");
x.t("result","result");
x.t("result","typically");
x.t("defined","order");
x.t("assuming","car");
x.t("appropriate","call");
x.t("shared","fixed");
x.t("personalvehicle.type.typeinfo.getproperty","drivers");
x.t("costvl","costvl.allversions");
x.t("{cov.expirationdate}","car\u2019s");
x.t("read-only","bundle");
x.t("confused","whether");
x.t("policylineunsliced","convention");
x.t("application","contexts");
x.t("application","guide");
x.t("policy","line");
x.t("policy","last");
x.t("policy","change");
x.t("policy","objects");
x.t("policy","revisioning");
x.t("policy","entry");
x.t("policy","personalvehicle");
x.t("policy","window");
x.t("policy","lines");
x.t("policy","notice");
x.t("policy","revision");
x.t("policy","red");
x.t("policy","period");
x.t("policy","kept");
x.t("policy","car");
x.t("policy","changes");
x.t("policy","amount");
x.t("policy","revisions");
x.t("policy","data");
x.t("policy","examples");
x.t("policy","march");
x.t("policy","slice");
x.t("policy","transaction");
x.t("policy","starts");
x.t("policy","entity");
x.t("policy","covered");
x.t("policy","contains");
x.t("policy","object");
x.t("policy","extract");
x.t("blue","policycenter");
x.t("blue","car");
x.t("implicitly","expiration");
x.t("implicitly","effective");
x.t("implicitly","slice");
x.t("values","represent");
x.t("highest","model");
x.t("contractual","period");
x.t("slice","root");
x.t("slice","mode");
x.t("slice","editing");
x.t("slice","need");
x.t("slice","edits");
x.t("slice","explicit");
x.t("slice","date");
x.t("case","example");
x.t("case","version");
x.t("case","improve");
x.t("case","today");
x.t("case","block");
x.t("unavailable","effective");
x.t("letter","important");
x.t("(thedate)","result");
x.t("effective-date","gaps");
x.t("prevent","gosu");
x.t("comparing","window");
x.t("structure","revisioning");
x.t("subobject","effectivedate");
x.t("subobject","expiration");
x.t("subobject","effective");
x.t("subobject","auto");
x.t("subobject","expirationdate");
x.t("subobject","policyperiod");
x.t("ordered","effective");
x.t("ordered","revisions");
x.t("called","version");
x.t("called","window");
x.t("called","addto");
x.t("called","vehicleunsliced");
x.t("called","drivers");
x.t("called","vehiclevl");
x.t("called","slice");
x.t("called","draft");
x.t("called","returns");
x.t("renewals","slice");
x.t("character","policycenter");
x.t("character","case");
x.t("character","capitalized");
x.t("choose","method");
x.t("choose","date");
x.t("enhancements","arguments");
x.t("enhancements","collections");
x.t(".drivers","list");
x.t(".drivers","comparing");
x.t("print","garage");
x.t("print","location");
x.t("print","data");
x.t("print","{cov.pattern.displayname}");
x.t("reducing","coding");
x.t("date","example");
x.t("date","passed");
x.t("date","method");
x.t("date","day");
x.t("date","version");
x.t("date","within");
x.t("date","august");
x.t("date","job");
x.t("date","last");
x.t("date","specified_date");
x.t("date","working");
x.t("date","time");
x.t("date","public");
x.t("date","addtodrivers");
x.t("date","however");
x.t("date","entities");
x.t("date","want");
x.t("date","access");
x.t("date","objects");
x.t("date","getting");
x.t("date","list");
x.t("date","add");
x.t("date","due");
x.t("date","sure");
x.t("date","throws");
x.t("date","unslicedvehicle.policyline.getslice");
x.t("date","reflection");
x.t("date","true");
x.t("date","stored");
x.t("date","range");
x.t("date","outside");
x.t("date","no");
x.t("date","forward");
x.t("date","gosu");
x.t("date","typed");
x.t("date","argument");
x.t("date","window");
x.t("date","find");
x.t("date","expiration");
x.t("date","second");
x.t("date","effective");
x.t("date","policycenter");
x.t("date","cars");
x.t("date","contrast");
x.t("date","vehicleunsliced");
x.t("date","suppose");
x.t("date","first");
x.t("date","split");
x.t("date","means");
x.t("date","car");
x.t("date","words");
x.t("date","represents");
x.t("date","carefully");
x.t("date","simply");
x.t("date","persist");
x.t("date","return");
x.t("date","thus");
x.t("date","asof");
x.t("date","null");
x.t("date","unslicedvehicle.getslice");
x.t("date","already");
x.t("date","view");
x.t("date","typical");
x.t("date","march");
x.t("date","policyperiod");
x.t("date","save");
x.t("date","result");
x.t("date","slice");
x.t("date","policy");
x.t("date","subobject");
x.t("date","called");
x.t("date","cases");
x.t("date","typically");
x.t("date","entity");
x.t("date","following");
x.t("date","//");
x.t("date","pass");
x.t("date","ranges");
x.t("date","var");
x.t("date","job\u2019s");
x.t("date","generally");
x.t("date","object");
x.t("date","coverages");
x.t("two","version");
x.t("two","entities");
x.t("two","objects");
x.t("two","lines");
x.t("two","cars");
x.t("two","ways");
x.t("two","rows");
x.t("two","code");
x.t("two","ranges");
x.t("note","version");
x.t("note","editing");
x.t("note","getting");
x.t("note","expiration");
x.t("note","view");
x.t("note","generated");
x.t("note","information");
x.t("note","policyperiod");
x.t("note","slice");
x.t("note","policy");
x.t("note","date");
x.t("note","cases");
x.t("history","policy");
x.t("jobs","example");
x.t("jobs","merging");
x.t("jobs","preempted");
x.t("jobs","in-process");
x.t("jobs","applying");
x.t("transaction","changes");
x.t("vehicle.getslice","(slicedate)");
x.t("chance","apply");
x.t("otherwise","noted");
x.t("readability","methods");
x.t("readability","reducing");
x.t("capitalized","pass");
x.t("vehicle.driversasof","(date)");
x.t("sense","merge");
x.t("typically","version");
x.t("typically","best");
x.t("typically","want");
x.t("typically","need");
x.t("typically","easier");
x.t("typically","already");
x.t("typically","meaningless");
x.t("typically","12:00am");
x.t("easily","using");
x.t("cases","job");
x.t("cases","best");
x.t("cases","access");
x.t("cases","want");
x.t("work","branch");
x.t("work","graph");
x.t("work","typically");
x.t("work","object");
x.t("copy","effective");
x.t("copy","entity");
x.t("buys","new");
x.t("implicit","slice");
x.t("implicit","date");
x.t("mark","entity");
x.t("scales","result");
x.t("val","vehiclevl.allversions");
x.t("object\u2019s","effective");
x.t("slices","window");
x.t("slices","result");
x.t("slices","policy");
x.t("unsliced","example");
x.t("unsliced","mode");
x.t("unsliced","property");
x.t("unsliced","objects");
x.t("unsliced","window");
x.t("unsliced","car");
x.t("unsliced","entity");
x.t("unsliced","suffix");
x.t("getversionasof","(date)");
x.t("correctness","arguments");
x.t("mentioned","table");
x.t("costvl.allversions","result");
x.t("vehiclevl.coverages","cov");
x.t("sec","var");
x.t("disables","automatic");
x.t("entirely","new");
x.t("entirely","first");
x.t("call","getslice");
x.t("call","asof");
x.t("immediately","in-memory");
x.t("costs","workers");
x.t("costs","auto");
x.t("costs","pacosts");
x.t("costs","cost");
x.t("costs","flattened");
x.t("costs","policy");
x.t("costs","across");
x.t("costs","associated");
x.t("costs","gets");
x.t("order","list");
x.t("order","gosu");
x.t("order","rely");
x.t("order","effective");
x.t("order","note");
x.t("vehicle\u2019s","version");
x.t("vehicle\u2019s","drivers");
x.t("relies","window");
x.t("created","invalid");
x.t("preserved","contrast");
x.t("subclass","list");
x.t("(firstversion.effectivedate)",".drivers");
x.t("real","world");
x.t("merge","change");
x.t("merge","forward");
x.t("merge","changes");
x.t("numbers","directly");
x.t("partway","period");
x.t("entity","instance");
x.t("entity","type");
x.t("entity","property");
x.t("entity","personalvehicle");
x.t("entity","array");
x.t("entity","reference");
x.t("entity","instances");
x.t("entity","subtype");
x.t("entity","following");
x.t("entity","contains");
x.t("model","time");
x.t("model","automatically");
x.t("model","attribute");
x.t("model","number");
x.t("following","table");
x.t("following","gosu");
x.t("following","methods");
x.t("following","equation");
x.t("following","code");
x.t("following","subtopics");
x.t("following","diagram");
x.t("following","examples");
x.t("following","two");
x.t("draft","revisions");
x.t("special","setup");
x.t("special","view");
x.t("special","slice");
x.t("starts","beginning");
x.t("individual","version");
x.t("individual","revisioned");
x.t("links","getslice");
x.t("links","entities");
x.t("links","actual");
x.t("pointer","exception");
x.t("tolerant","gosu");
x.t("system","automatically");
x.t("system","reflection");
x.t("contained","array");
x.t("run","time");
x.t("{cov.pattern.displayname}","effdate");
x.t("differing","promoted");
x.t("differing","effective");
x.t("using","example");
x.t("using","default");
x.t("using","reflection");
x.t("using","boolean");
x.t("using","standard");
x.t("//","version");
x.t("//","handle");
x.t("//","find");
x.t("//","compile");
x.t("//","garage");
x.t("//","print");
x.t("//","date");
x.t("//","generally");
x.t("containing","vehicledriver");
x.t("similarly","pass");
x.t(".policyline","important");
x.t(".policyline","following");
x.t("additionally","gosu");
x.t("class","revisioned");
x.t("class","workers");
x.t("covvl.allversions","print");
x.t("across","dates");
x.t("across","effective");
x.t("across","changes");
x.t("across","versions");
x.t("vehicles","coverages");
x.t("adding","entities");
x.t("adding","entirely");
x.t("series","ordered");
x.t("returns","snapshot");
x.t("returns","list");
x.t("returns","results");
x.t("returns","empty");
x.t("returns","array");
x.t("returns","cars");
x.t("returns","return");
x.t("returns","null");
x.t("returns","value");
x.t("returns","garage");
x.t("returns","ordered");
x.t("returns","entity");
x.t("pass","getslice");
x.t("pass","method");
x.t("pass","property");
x.t("pass","list");
x.t("pass","invalid");
x.t("pass","date");
x.t("deleted","handle");
x.t("compare","following");
x.t("getallversionsuntyped","similar");
x.t("overrides","effective");
x.t("ranges","once");
x.t("ranges","objects");
x.t("ranges","need");
x.t("ranges","overlap");
x.t("ranges","effective");
x.t("ranges","car");
x.t("covered","version");
x.t("covered","car");
x.t("april","policy");
x.t("without","worrying");
x.t("policyline","property");
x.t("policyline","note");
x.t("occur","split");
x.t("applying","changes");
x.t("compensation","line");
x.t("compensation","payroll");
x.t("compensation","jurisdictions");
x.t("driver","version");
x.t("driver","type");
x.t("driver","getting");
x.t("driver","objects");
x.t("driver","vehicledriver.policydriver");
x.t("driver","name");
x.t("driver","particular");
x.t("driver","vehicle");
x.t("names","version");
x.t("names","always");
x.t("names","source");
x.t("names","concrete");
x.t("names","compile");
x.t("names","initial");
x.t("paths","null");
x.t("operator","extracts");
x.t("child","objects");
x.t("member","desired");
x.t("driversprop","personalvehicle.type.typeinfo.getproperty");
x.t("autopolicyline.versionlist.pacosts","returns");
x.t("associated","slice");
x.t("vehicle.allversions","returns");
x.t("world","code");
x.t("merged","forward");
x.t("var","v2");
x.t("var","slicemodevehicle");
x.t("var","vv");
x.t("var","arrayofpid");
x.t("var","allcosts");
x.t("var","vehiclesliced");
x.t("var","origdrivers");
x.t("var","text_val=eval");
x.t("var","firstversionunsliced");
x.t("var","vehondate");
x.t("var","drivers");
x.t("var","vehicleunsliced");
x.t("var","driversarray");
x.t("var","thedate");
x.t("var","vehiclesliced.garagelocation");
x.t("var","val");
x.t("var","driversprop");
x.t("var","vehslicedondate");
x.t("including","exact");
x.t("versions","multi-version");
x.t("versions","entities");
x.t("versions","unselected");
x.t("versions","desired");
x.t("versions","period");
x.t("versions","cost");
x.t("versions","car");
x.t("versions","particular");
x.t("versions","unique");
x.t("versions","policy");
x.t("versions","entity");
x.t("versions","object");
x.t("suffix","name");
x.t("suffix","contain");
x.t("suffix","asof");
x.t("suffix","versionlist");
x.t("suffix","unsliced");
x.t("describe","real-world");
x.t("non-effective","time");
x.t("(driversprop)","costs");
x.t("removed","auto");
x.t("removed","canceled");
x.t("even","property");
x.t("even","first");
x.t("generates","version");
x.t("generates","two");
x.t("vehslicedondate","vehiclevl.asof");
x.t("careful","directly");
x.t("{g.state}","safely");
x.t("personalvehicle.availabledrivers","returns");
x.t("naming","conventions");
x.t("conventions","reading");
x.t("reading","code");
x.t("coverages","time");
x.t("coverages","objects");
x.t("coverages","vehicle");
x.t("object","example");
x.t("object","method");
x.t("object","version");
x.t("object","within");
x.t("object","overlapping");
x.t("object","try");
x.t("object","later");
x.t("object","type");
x.t("object","however");
x.t("object","access");
x.t("object","getting");
x.t("object","need");
x.t("object","results");
x.t("object","navigate");
x.t("object","typed");
x.t("object","window");
x.t("object","cloned");
x.t("object","expiration");
x.t("object","local");
x.t("object","second");
x.t("object","effective");
x.t("object","sometimes");
x.t("object","drivers");
x.t("object","different");
x.t("object","represents");
x.t("object","may");
x.t("object","cannot");
x.t("object","edited");
x.t("object","mind");
x.t("object","detailed");
x.t("object","changes");
x.t("object","returned");
x.t("object","vehicle");
x.t("object","policyperiod.periodstart");
x.t("object","graph");
x.t("object","typical");
x.t("object","policyperiod");
x.t("object","case");
x.t("object","slice");
x.t("object","effective-date");
x.t("object","two");
x.t("object","date");
x.t("object","note");
x.t("object","model");
x.t("object","across");
x.t("object","compare");
x.t("object","suffix");
x.t("object","careful");
x.t("object","removed");
x.t("object","contains");
x.t("contains","version");
x.t("contains","list");
x.t("contains","arrays");
x.t("contains","array");
x.t("contains","three");
x.t("contains","auto");
x.t("contains","drivers");
x.t("contains","first");
x.t("contains","row");
x.t("contains","newer");
x.t("contains","two");
x.t("contains","driver");
x.t("contains","object");
x.t("12:00am","blue");
x.t("binding","however");
x.t("binding","branch");
x.t("job\u2019s","effective");
x.t("generally","speaking");
x.t("generally","want");
x.t("generally","slice");
x.t("gets","version");
x.t("gets","list");
x.t("gets","correct");
x.t("gets","policy");
x.t("gets","costs");
x.t("gets","entity");
x.t("gets","policyline");
x.t("gets","versions");
x.t("gets","item");
x.t("remains","split");
x.t("(date)","method");
x.t("(date)","exist");
x.t("(date)","basically");
x.t("(date)",".policydriver");
x.t("(date)","important");
x.t("(date)",".getslice");
x.t("(date)","result");
x.t("(date)",".policyline");
x.t("item","root");
x.t("item","list");
x.t("item","array");
x.t("item","earliest");
x.t("item","specific");
x.t("item","slice");
x.t("specify","property");
x.t("vehiclevl.getarray","(driversprop)");
x.t("extract","cost");
x.t("extract","costs");
}
