function FileData_Pairs(x)
{
x.t("extensions","entity");
x.t("looks","similar");
x.t("gw.pc.policy.period.entity.policylocation","return");
x.t("example","note");
x.t("properties","create");
x.t("properties","cases");
x.t("construct","owner");
x.t("method","single");
x.t("defines","adapter");
x.t("gsrc","gw.lob");
x.t("owner","entity.homeownersline");
x.t("owner","code");
x.t("owner","override");
x.t("implement","dialog");
x.t("business","example");
x.t("business","creating");
x.t("business","step");
x.t("business","adding");
x.t("create","coverage");
x.t("create","coverable");
x.t("studio","helps");
x.t("studio","navigate");
x.t("studio","entity");
x.t("adapters","lines");
x.t("adapters","homeownersline");
x.t("adapters","coverable");
x.t("allcoverages","gw.pc.coverage.entity.coverage");
x.t("addcondition","p0");
x.t("instructions","verifying");
x.t("topic","declare");
x.t("gw.pc.policy.lines.entity.policyline","return");
x.t("line","business");
x.t("line","studio");
x.t("line","examine");
x.t("line","node");
x.t("line","homeownerslinecoverableadapter");
x.t("line","package");
x.t("shows","coverable");
x.t("helps","write");
x.t("uses","entity.homeownersline");
x.t("uses","java.util.date");
x.t("uses","gw.api.domain.coverableadapter");
x.t("coverableadapter","press");
x.t("coverableadapter","var");
x.t("dialog","box");
x.t("text_val.select","link");
x.t("interface","homeownersline");
x.t("statement","references");
x.t("statement","fix");
x.t("press","alt-enter");
x.t("state","gw.pl.geodata.zone.typekey.jurisdiction");
x.t("removecondition","p0");
x.t("entity.homeownersline","construct");
x.t("entity.homeownersline","uses");
x.t("entity.homeownersline","_owner");
x.t("entity.homeownersline","class");
x.t("open","select");
x.t("java.util.date","class");
x.t("allowedcurrencies","list");
x.t("policylocations","gw.pc.policy.period.entity.policylocation");
x.t("product","model");
x.t("property","allcoverages");
x.t("property","state");
x.t("property","allowedcurrencies");
x.t("property","policylocations");
x.t("property","value");
x.t("property","allexclusions");
x.t("property","referencedateinternal");
x.t("property","defaultcurrency");
x.t("property","allconditions");
x.t("property","policyline");
x.t("listed","methods");
x.t("addcoverage","p0");
x.t("link","directly");
x.t("new","line");
x.t("new","gosu");
x.t("new","methods");
x.t("element","homeownersline");
x.t("element","coverable");
x.t("element","entity");
x.t("_owner","owner");
x.t("_owner","entity.homeownersline");
x.t("single","line");
x.t("homeowners","create");
x.t("homeowners","line");
x.t("homeowners","navigate");
x.t("homeowners","homeownerslinecoverableadapter");
x.t("command","pops");
x.t("messsage","policycenter");
x.t("list","gw.pl.currency.typekey.currency");
x.t("add","remove");
x.t("add","implementsentity");
x.t("add","coverages");
x.t("guide","configuring");
x.t("remove","coverages");
x.t("configuring","lines");
x.t("navigate","gw.lob.ho");
x.t("navigate","configuration");
x.t("directly","page");
x.t("declare","define");
x.t("declare","coverable");
x.t("specified","name");
x.t("creating","coverage");
x.t("creating","coverable");
x.t("text_val.focus","text_val.select");
x.t("connects","coverage");
x.t("definition","homeownersline.eti");
x.t("name","coverable");
x.t("name","adapter");
x.t("box","listed");
x.t("references","gosu");
x.t("gosu","error");
x.t("gosu","class");
x.t("constructor","similar");
x.t("gw.pc.coverage.entity.coverage","return");
x.t("gw.pc.coverage.entity.coverage","override");
x.t("homeownerslinecov","coverage");
x.t("gw.pl.geodata.zone.typekey.jurisdiction","return");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","properties");
x.t("methods","implement");
x.t("methods","add");
x.t("methods","selected");
x.t("methods","code");
x.t("methods","coverable");
x.t("window","studio");
x.t("hodwelling","project");
x.t("place","insertion");
x.t("up","open");
x.t("gw.lob.ho","uses");
x.t("gw.lob.ho","right-click");
x.t("lines","business");
x.t("write","constructor");
x.t("write","code");
x.t("fix","next");
x.t("empty","methods");
x.t("examine","coverable");
x.t("coverage","declare");
x.t("coverage","coverable");
x.t("coverage","adapter");
x.t("policycenter","product");
x.t("selected","click");
x.t("error","coverableadapter");
x.t("error","occurred");
x.t("error","class");
x.t("config","extensions");
x.t("point","error");
x.t("point","verify");
x.t("gw.lob.ho.homeownerslinecoverableadapter","statement");
x.t("next","step");
x.t("select","new");
x.t("select","methods");
x.t("p0","gw.pc.coverage.entity.coverage");
x.t("p0","gw.pc.coverage.entity.policycondition");
x.t("p0","date");
x.t("p0","gw.pc.coverage.entity.exclusion");
x.t("guidewire_selectall","var");
x.t("function","addcondition");
x.t("function","removecondition");
x.t("function","addcoverage");
x.t("function","guidewire_selectall");
x.t("function","removecoverage");
x.t("function","addexclusion");
x.t("function","removeexclusion");
x.t("implements","coverableadapter");
x.t("define","coverable");
x.t("editor","add");
x.t("insertion","point");
x.t("step","add");
x.t("step","place");
x.t("gw.pc.coverage.entity.policycondition","return");
x.t("gw.pc.coverage.entity.policycondition","override");
x.t("verify","work");
x.t("node","select");
x.t("homeownersline","hodwelling");
x.t("homeownersline","coverable");
x.t("homeownersline","entity");
x.t("code","method");
x.t("code","create");
x.t("code","new");
x.t("code","homeowners");
x.t("code","produces");
x.t("code","adapter");
x.t("override","property");
x.t("override","function");
x.t("return","null");
x.t("previous","topics");
x.t("gw.lob","line");
x.t("produces","gosu");
x.t("enter","name");
x.t("click","ok");
x.t("click","implementmethods");
x.t("pops","up");
x.t("occurred","messsage");
x.t("implementsentity","element");
x.t("project","window");
x.t("null","write");
x.t("null","override");
x.t("configuration","gsrc");
x.t("configuration","config");
x.t("alt-enter","click");
x.t("value","name");
x.t("right-click","line");
x.t("similar","following");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("gw.api.domain.coverableadapter","uses");
x.t("removecoverage","p0");
x.t("allexclusions","gw.pc.coverage.entity.exclusion");
x.t("homeownerslinecoverableadapter","looks");
x.t("homeownerslinecoverableadapter","new");
x.t("homeownerslinecoverableadapter","implements");
x.t("homeownerslinecoverableadapter","package");
x.t("homeownerslinecoverableadapter","adapter");
x.t("auto-complete","studio");
x.t("addexclusion","p0");
x.t("page","error");
x.t("referencedateinternal","p0");
x.t("referencedateinternal","date");
x.t("defined","coverable");
x.t("removeexclusion","p0");
x.t("defaultcurrency","gw.pl.currency.typekey.currency");
x.t("topics","defined");
x.t("note","create");
x.t("note","point");
x.t("illustration","shows");
x.t("ok","insert");
x.t("date","return");
x.t("date","override");
x.t("coverable","adapters");
x.t("coverable","creating");
x.t("coverable","homeownerslinecov");
x.t("coverable","methods");
x.t("coverable","entity");
x.t("coverable","adapter");
x.t("coverable","object");
x.t("homeownersline.eti","configuration");
x.t("allconditions","gw.pc.coverage.entity.policycondition");
x.t("cases","code");
x.t("work","instructions");
x.t("package","homeowners");
x.t("package","gw.lob.ho");
x.t("model","guide");
x.t("entity","topic");
x.t("entity","property");
x.t("entity","homeowners");
x.t("entity","add");
x.t("entity","definition");
x.t("entity","name");
x.t("entity","editor");
x.t("entity","coverable");
x.t("following","homeownerslinecoverableadapter");
x.t("following","illustration");
x.t("following","package");
x.t("class","defines");
x.t("class","statement");
x.t("class","write");
x.t("class","enter");
x.t("class","homeownerslinecoverableadapter");
x.t("adding","new");
x.t("gw.pl.currency.typekey.currency","return");
x.t("policyline","gw.pc.policy.lines.entity.policyline");
x.t("gw.pc.coverage.entity.exclusion","return");
x.t("gw.pc.coverage.entity.exclusion","override");
x.t("adapter","homeowners");
x.t("adapter","declare");
x.t("adapter","specified");
x.t("adapter","creating");
x.t("adapter","connects");
x.t("adapter","methods");
x.t("adapter","write");
x.t("adapter","gw.lob.ho.homeownerslinecoverableadapter");
x.t("adapter","function");
x.t("adapter","previous");
x.t("adapter","implementsentity");
x.t("adapter","auto-complete");
x.t("adapter","homeownerslinecoverableadapter");
x.t("adapter","coverable");
x.t("adapter","entity");
x.t("adapter","following");
x.t("adapter","contains");
x.t("adapter","establishes");
x.t("var","_owner");
x.t("var","text_val=eval");
x.t("insert","empty");
x.t("coverages","new");
x.t("coverages","note");
x.t("contains","methods");
x.t("establishes","interface");
x.t("object","homeowners");
x.t("implementmethods","command");
x.t("verifying","work");
}
