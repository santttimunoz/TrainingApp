function FileData_Pairs(x)
{
x.t("example","boplinepropertydv");
x.t("example","configuring");
x.t("example","bopscreen");
x.t("example","rendering");
x.t("example","boppropertyrequiredcatiterator");
x.t("included","card");
x.t("available","example");
x.t("properties","boplinepropertydv.pcf");
x.t("parameter","coveragepattern");
x.t("method","boplineenhancement");
x.t("pattern","exists");
x.t("files","rendering");
x.t("within","included");
x.t("within","coverage");
x.t("def","property");
x.t("studio","boplinepropertydv.pcf");
x.t("studio","bopscreen.pcf");
x.t("bopline","currentlocation.ineditmode");
x.t("inputsetref","iterator");
x.t("inputsetref","render");
x.t("variables","tab");
x.t("builds","interface");
x.t("uses","method");
x.t("uses","inputsetref");
x.t("uses","input");
x.t("line","panelref");
x.t("text_val.select","link");
x.t("press","ctrl");
x.t("interface","passes");
x.t("interface","policycenter");
x.t("interface","rendering");
x.t("categories","coverageinputset");
x.t("categories","common");
x.t("categories","selected");
x.t("categories","less");
x.t("categories","additional");
x.t("type","file");
x.t("change","additional");
x.t("initialvalue","determines");
x.t("boplineenhancement","determine");
x.t("policyperiod.bopline.getadditionalcoveragecategories","true");
x.t("boplinepropertydv","within");
x.t("boplinepropertydv","policycenter");
x.t("boplinepropertydv","detail");
x.t("addedcoviterator","iterates");
x.t("product","model");
x.t("property","bop");
x.t("property","sets");
x.t("bop","line");
x.t("link","directly");
x.t("card","policycenter");
x.t("card","named");
x.t("card","cards");
x.t("among","others");
x.t("passes","categories");
x.t("messsage","policycenter");
x.t("determines","card");
x.t("determines","whether");
x.t("coverageinputset","parameter");
x.t("coverageinputset","iterates");
x.t("file","press");
x.t("file","name");
x.t("file","governs");
x.t("list","returned");
x.t("id","id");
x.t("id","boppropertyrequiredcatiterator");
x.t("add","def");
x.t("panelref","illustrates");
x.t("guide","policycenter");
x.t("iterator","addedcoviterator");
x.t("iterator","coverageinputset");
x.t("iterator","policycenter");
x.t("iterator","following");
x.t("check","check");
x.t("check","box");
x.t("configuring","additional");
x.t("configuring","policy");
x.t("configuring","coverages");
x.t("selects","coverages");
x.t("directly","page");
x.t("true","note");
x.t("common","categories");
x.t("common","coverages");
x.t("text_val.focus","text_val.select");
x.t("resulting","coverage");
x.t("resulting","coverages");
x.t("name","define");
x.t("box","value");
x.t("(businessownersline)","whereselectedoravailable");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("exists","particular");
x.t("exists","bit");
x.t("illustrates","additional");
x.t("additionalcoveragespanelset","policyperiod.bopline");
x.t("provides","example");
x.t("determine","coverages");
x.t("whereselectedoravailable","bopline");
x.t("lines","configuring");
x.t("sets","whether");
x.t("coverage","pattern");
x.t("coverage","categories");
x.t("coverage","check");
x.t("coverage","screen");
x.t("coverage","boppropertyrequiredcat.coveragepatternsforentity");
x.t("coverage","category");
x.t("input","iterator");
x.t("policycenter","example");
x.t("policycenter","builds");
x.t("policycenter","uses");
x.t("policycenter","interface");
x.t("policycenter","product");
x.t("policycenter","passes");
x.t("policycenter","iterates");
x.t("policycenter","renders");
x.t("selected","available");
x.t("error","occurred");
x.t("occurs","iterator");
x.t("select","coverage");
x.t("guidewire_selectall","var");
x.t("others","detail");
x.t("iterates","across");
x.t("function","guidewire_selectall");
x.t("whether","coverage");
x.t("whether","include");
x.t("define","behavior");
x.t("particular","lob");
x.t("pcf","files");
x.t("pcf","file");
x.t("bopscreen","policycenter");
x.t("returned","coverages");
x.t("added","additionalcoveragespanelset");
x.t("boplinepropertydv.pcf","variables");
x.t("boplinepropertydv.pcf","boppropertyrequiredcatcov");
x.t("boplineenhancement.getadditionalcoveragecategories","studio");
x.t("toggles","example");
x.t("variable","selects");
x.t("occurred","messsage");
x.t("less","common");
x.t("include","coverage");
x.t("include","policycenter");
x.t("named","boplinepropertydv");
x.t("coverageinputset.bopbuildingcov","pcf");
x.t("value","toggles");
x.t("additional","less");
x.t("additional","coverages");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("coveragepattern","boplinepropertydv");
x.t("policyperiod.bopline","policyperiod.bopline.getadditionalcoveragecategories");
x.t("view","card");
x.t("view","file");
x.t("view","panel");
x.t("currentlocation.ineditmode","within");
x.t("bopscreen.pcf","provides");
x.t("bopscreen.pcf","view");
x.t("panel","policycenter");
x.t("screen","exists");
x.t("screen","modify");
x.t("page","example");
x.t("page","error");
x.t("page","define");
x.t("page","containing");
x.t("ctrl","type");
x.t("allowtoggle","property");
x.t("allowtoggle","setting");
x.t("rendering","interface");
x.t("rendering","common");
x.t("rendering","less");
x.t("bit","allowtoggle");
x.t("bit","coverable");
x.t("policy","lines");
x.t("render","resulting");
x.t("render","page");
x.t("boppropertyrequiredcat.coveragepatternsforentity","(businessownersline)");
x.t("note","change");
x.t("renders","among");
x.t("renders","coverage");
x.t("renders","screen");
x.t("renders","page");
x.t("renders","coverages");
x.t("boppropertyrequiredcatcov","variable");
x.t("coverable","allowtoggle");
x.t("model","guide");
x.t("model","configuring");
x.t("following","initialvalue");
x.t("following","determines");
x.t("following","id");
x.t("following","occurs");
x.t("cards","render");
x.t("boppropertyrequiredcatiterator","iterator");
x.t("boppropertyrequiredcatiterator","contains");
x.t("lob","select");
x.t("containing","common");
x.t("containing","additional");
x.t("setting","coverageinputset.bopbuildingcov");
x.t("across","resulting");
x.t("across","coverage");
x.t("tab","properties");
x.t("behavior","studio");
x.t("governs","bit");
x.t("modify","list");
x.t("var","text_val=eval");
x.t("category","iterator");
x.t("category","renders");
x.t("coverages","add");
x.t("coverages","policycenter");
x.t("coverages","function");
x.t("coverages","pcf");
x.t("coverages","added");
x.t("coverages","boplineenhancement.getadditionalcoveragecategories");
x.t("coverages","include");
x.t("coverages","panel");
x.t("coverages","page");
x.t("coverages","rendering");
x.t("coverages","following");
x.t("detail","view");
x.t("contains","inputsetref");
}
