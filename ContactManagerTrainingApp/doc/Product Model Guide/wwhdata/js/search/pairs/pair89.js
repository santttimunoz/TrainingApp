function FileData_Pairs(x)
{
x.t("passed-in","productmodelsyncissue");
x.t("provide","initial");
x.t("method","action");
x.t("method","creates");
x.t("method","calls");
x.t("method","wraps");
x.t("method","checks");
x.t("method","checkanswersagainstproductmodel");
x.t("exist","coverable.synccoverages");
x.t("updatemodifiers","method");
x.t("suggested","coverages");
x.t("related","availability");
x.t("required","suggested");
x.t("modifiers","questions");
x.t("action","issues");
x.t("questions","reports");
x.t("questions","displaying");
x.t("questions","answers");
x.t("creates","initial");
x.t("uses","following");
x.t("text_val.select","link");
x.t("missing","unavailable");
x.t("calls","method");
x.t("calls","updatemodifiers");
x.t("calls","either");
x.t("identify","missing");
x.t("rate","factor");
x.t("product","model");
x.t("wraps","passed-in");
x.t("wraps","productmodelsyncissuewrapper");
x.t("wraps","resultant");
x.t("wraps","issues");
x.t("checks","questions");
x.t("checks","modifier");
x.t("checks","coverage");
x.t("modifiable.syncmodifiers","entity");
x.t("link","directly");
x.t("objects","method");
x.t("objects","productmodelsyncissuewrapper");
x.t("messsage","policycenter");
x.t("productmodelsyncissue","objects");
x.t("productmodelsyncissue","object");
x.t("list","productmodelsyncissues");
x.t("list","productmodelsyncissue");
x.t("during","standard");
x.t("guide","policycenter");
x.t("entry","point");
x.t("results","policycenter");
x.t("availability","checking");
x.t("availability","issues");
x.t("availability","important");
x.t("throws","exception");
x.t("createcoverages","initial");
x.t("modifiable.updatemodifiers","entity");
x.t("directly","page");
x.t("helper","methods");
x.t("text_val.focus","text_val.select");
x.t("productmodelsyncissuewrapper","classes");
x.t("productmodelsyncissuewrapper","class");
x.t("gosu","method");
x.t("gosu","classes");
x.t("gosu","entity");
x.t("gosu","class");
x.t("modifier","rate");
x.t("methods","related");
x.t("methods","gosu");
x.t("methods","productmodelsyncissuewrapper.wrapissue");
x.t("methods","answercontainer.checkanswersagainstproductmodel");
x.t("methods","synchronizing");
x.t("checking","uses");
x.t("checking","product");
x.t("checking","function");
x.t("checking","important");
x.t("checking","returns");
x.t("checking","productmodelsyncissueshandler");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("standard","availability");
x.t("issuewrapper","gosu");
x.t("issuewrapper","classes");
x.t("checkanswersagainstproductmodel","wraps");
x.t("resultant","issue");
x.t("coverage","coverage");
x.t("coverage","issues");
x.t("coverage","term");
x.t("policycenter","product");
x.t("policycenter","gosu");
x.t("error","occurred");
x.t("point","product");
x.t("issues","wraps");
x.t("issues","issuewrapper");
x.t("issues","fixed");
x.t("issues","coverable.createcoverages");
x.t("issues","reports");
x.t("issues","fixes");
x.t("issues","answercontainer.syncquestions");
x.t("fixed","during");
x.t("fixed","result");
x.t("coverable.createcoverages","entity");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("option/package","availability");
x.t("synccoverages","initial");
x.t("important","classes");
x.t("initial","required");
x.t("initial","entry");
x.t("initial","coverages");
x.t("reports","list");
x.t("term","option/package");
x.t("issue","objects");
x.t("gw.web.productmodel","provide");
x.t("gw.web.productmodel","contains");
x.t("occurred","messsage");
x.t("wrappers","modifiable.syncmodifiers");
x.t("wrappers","coverable.checkcoveragesagainstproductmodel");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("coverable.createorsynccoverages","entity");
x.t("already","exist");
x.t("fixes","issues");
x.t("fixes","reports");
x.t("exception","coverages");
x.t("page","error");
x.t("appropriate","productmodelsyncissuewrapper");
x.t("result","standard");
x.t("displaying","results");
x.t("unavailable","questions");
x.t("answercontainer.syncquestions","entity");
x.t("classes","modifiable.updatemodifiers");
x.t("classes","methods");
x.t("classes","gw.web.productmodel");
x.t("classes","fixes");
x.t("classes","availabilityissue");
x.t("productmodelsyncissuewrapper.wrapissue","gosu");
x.t("answers","identify");
x.t("coverable.checkcoveragesagainstproductmodel","entity");
x.t("coverable","throws");
x.t("factor","availability");
x.t("availabilityissue","issuewrapper");
x.t("created","synccoverages");
x.t("created","coverable.createorsynccoverages");
x.t("model","guide");
x.t("model","availability");
x.t("model","checking");
x.t("following","classes");
x.t("entity","method");
x.t("entity","methods");
x.t("either","createcoverages");
x.t("coverable.synccoverages","entity");
x.t("class","gosu");
x.t("class","methods");
x.t("class","gw.web.productmodel");
x.t("answercontainer.checkanswersagainstproductmodel","entity");
x.t("returns","wrappers");
x.t("var","text_val=eval");
x.t("productmodelsyncissueshandler","gosu");
x.t("synchronizing","coverages");
x.t("contains","helper");
x.t("coverages","modifiers");
x.t("coverages","already");
x.t("coverages","coverable");
x.t("coverages","created");
x.t("object","appropriate");
}
