function FileData_Pairs(x)
{
x.t("notecopier","policyperiod");
x.t("example","checks");
x.t("example","simple");
x.t("example","assume");
x.t("example","personalvehicle");
x.t("example","developing");
x.t("complex","example");
x.t("included","therefore");
x.t("removingclausepatterncopier","extends");
x.t("method","handle");
x.t("method","base");
x.t("method","abstract");
x.t("method","copy");
x.t("method","call");
x.t("method","returns");
x.t("parameter","type");
x.t("parameter","certain");
x.t("parameter","varies");
x.t("properties","directly");
x.t("notes","coverage");
x.t("exist","source");
x.t("allexistingcoveragecopier","adds");
x.t("allexistingcoveragecopier","extends");
x.t("business","configuring");
x.t("business","copier");
x.t("describes","copier");
x.t("description","addresscopier");
x.t("description","concrete");
x.t("description","abstract");
x.t("table","shows");
x.t("tree","addcopier");
x.t("tree","copiers");
x.t("addresscopier","extends");
x.t("source","target");
x.t("source","policy");
x.t("source","coverable");
x.t("source","entity");
x.t("always","included");
x.t("modifiers","modifiercopier");
x.t("modifiers","appear");
x.t("modifiers","copiers");
x.t("topic","describes");
x.t("line","business");
x.t("line","level");
x.t("shows","types");
x.t("comprehensive","coverage");
x.t("text_val.select","link");
x.t("copying","line");
x.t("copying","data");
x.t("copying","child");
x.t("copying","coverages");
x.t("type","notecopier");
x.t("type","target");
x.t("allremovingcoveragecopier","removes");
x.t("allremovingcoveragecopier","extends");
x.t("addallcopiers","adds");
x.t("calls","copiers");
x.t("extend","copier");
x.t("extend","simplify");
x.t("extend","abstract");
x.t("copied","twice");
x.t("copied","individual");
x.t("copied","grouping");
x.t("multiple","copiers");
x.t("product","model");
x.t("entities","compositecopier");
x.t("entities","personalvehiclecopier");
x.t("entities","copies");
x.t("entities","copiers");
x.t("checks","matching");
x.t("compositecopier","abstract");
x.t("compositecopier","groupingcompositecopier");
x.t("compositecopier","class");
x.t("automatically","calls");
x.t("removes","comprehensive");
x.t("removes","coverages");
x.t("link","directly");
x.t("access","source");
x.t("certain","copiers");
x.t("personalvehiclecopier","constructor");
x.t("personalvehiclecopier","delegates");
x.t("personalvehiclecopier","personalautoline");
x.t("personalvehiclecopier","subclass");
x.t("single","method");
x.t("single","note");
x.t("new","coverages");
x.t("includes","description");
x.t("messsage","policycenter");
x.t("policydriver","preventing");
x.t("file","policycenter");
x.t("file","additional");
x.t("file","coverages");
x.t("determines","whether");
x.t("group","similar");
x.t("api","compositecopier");
x.t("api","generic");
x.t("api","copier");
x.t("api","composite");
x.t("api","abstract");
x.t("api","groupingcompositecopier");
x.t("api","classes");
x.t("api","grouping");
x.t("guide","configuring");
x.t("simple","example");
x.t("simple","copier");
x.t("simple","grouping");
x.t("assume","matching");
x.t("configuring","lines");
x.t("configuring","copy");
x.t("duplicate","drivers");
x.t("directly","page");
x.t("directly","policyperiod");
x.t("directly","associated");
x.t("personalvehicle","composite");
x.t("personalvehicle","entity");
x.t("true","pcf");
x.t("handle","copy");
x.t("text_val.focus","text_val.select");
x.t("functionality","access");
x.t("functionality","adds");
x.t("creating","duplicate");
x.t("vehiclecopier.alladdlinterestdetailscopier.shouldcopyall","true");
x.t("constructor","initializes");
x.t("concrete","classes");
x.t("base","method");
x.t("base","configuration");
x.t("(vehiclecopier.allcoveragecopier.allexistingcoveragecopier.copiers)","additional");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","determines");
x.t("provides","generic");
x.t("provides","following");
x.t("methods","constructing");
x.t("generic","copier");
x.t("copier","example");
x.t("copier","tree");
x.t("copier","description");
x.t("copier","personalvehiclecopier");
x.t("copier","group");
x.t("copier","api");
x.t("copier","simple");
x.t("copier","creating");
x.t("copier","provides");
x.t("copier","target");
x.t("copier","copies");
x.t("copier","composite");
x.t("copier","templates");
x.t("copier","abstract");
x.t("copier","adds");
x.t("copier","allconditioncopier");
x.t("copier","policy");
x.t("copier","note");
x.t("copier","classes");
x.t("copier","following");
x.t("copier","allnotecopier");
x.t("copier","used");
x.t("copier","grouping");
x.t("copier","matching");
x.t("copier","allcoveragecopier");
x.t("selection","select");
x.t("destination","policy");
x.t("lines","business");
x.t("lines","copying");
x.t("composite","tree");
x.t("composite","copier");
x.t("copies","properties");
x.t("copies","source");
x.t("copies","single");
x.t("copies","directly");
x.t("copies","non-revisioned");
x.t("copies","note");
x.t("copies","entity");
x.t("copies","following");
x.t("copies","coverages");
x.t("target","parameter");
x.t("target","type");
x.t("target","copier");
x.t("target","copies");
x.t("target","policy");
x.t("target","coverable");
x.t("gw.api.copy.copier","class");
x.t("personal","auto");
x.t("personal","vehicle");
x.t("marked","shouldcopy");
x.t("vehiclecopier.allcoveragecopier.shouldcopyall","true");
x.t("coverage","removes");
x.t("coverage","generic");
x.t("coverage","copier");
x.t("coverage","selected");
x.t("coverage","shouldcopy");
x.t("policycenter","product");
x.t("policycenter","iterates");
x.t("developing","copiers");
x.t("selected","copying");
x.t("selected","destination");
x.t("selected","coverage");
x.t("request","note");
x.t("auto","example");
x.t("simplify","copy");
x.t("error","occurred");
x.t("shouldcopy","true");
x.t("shouldcopy","personal");
x.t("overwrites","existing");
x.t("period","note");
x.t("drivers","composite");
x.t("drivers","policydrivercopier");
x.t("appears","twice");
x.t("select","include");
x.t("select","data");
x.t("select","coverages");
x.t("executing","following");
x.t("guidewire_selectall","var");
x.t("control","whether");
x.t("initializes","copiers");
x.t("iterates","individual");
x.t("function","guidewire_selectall");
x.t("templates","base");
x.t("templates","copier");
x.t("whether","copy");
x.t("non-revisioned","entity");
x.t("twice","target");
x.t("twice","note");
x.t("types","target");
x.t("pcf","file");
x.t("code","selectindividualcoverageslv");
x.t("shouldcopyall","method");
x.t("enable","single");
x.t("abstract","compositecopier");
x.t("abstract","gw.api.copy.copier");
x.t("abstract","classes");
x.t("abstract","class");
x.t("vehicle","source");
x.t("vehicle","personalvehiclecopier");
x.t("vehicle","copier");
x.t("adds","multiple");
x.t("adds","new");
x.t("adds","collision");
x.t("adds","specific");
x.t("adds","coverages");
x.t("collision","coverage");
x.t("level","coverages");
x.t("modifiercopier","always");
x.t("modifiercopier","modifiable");
x.t("appear","selection");
x.t("policydrivercopier","personalautoline");
x.t("policydrivercopier","overrides");
x.t("together","child");
x.t("occurred","messsage");
x.t("constructing","copier");
x.t("existing","coverages");
x.t("include","additional");
x.t("include","coverages");
x.t("groupingcompositecopier","allexistingcoveragecopier");
x.t("groupingcompositecopier","allremovingcoveragecopier");
x.t("groupingcompositecopier","provides");
x.t("groupingcompositecopier","composite");
x.t("groupingcompositecopier","extends");
x.t("groupingcompositecopier","allexclusioncopier");
x.t("groupingcompositecopier","allexposurecopier");
x.t("groupingcompositecopier","allnotecopier");
x.t("groupingcompositecopier","clausepatterncopier");
x.t("groupingcompositecopier","allcoveragecopier");
x.t("configuration","extend");
x.t("configuration","provides");
x.t("additional","interests");
x.t("similar","copiers");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("delegates","copying");
x.t("delegates","two");
x.t("delegates","work");
x.t("specific","copier");
x.t("selectindividualcoverageslv","(vehiclecopier.allcoveragecopier.allexistingcoveragecopier.copiers)");
x.t("implementation","copiers");
x.t("allconditioncopier","extends");
x.t("extends","compositecopier");
x.t("extends","copier");
x.t("extends","groupingcompositecopier");
x.t("screen","coverages");
x.t("page","error");
x.t("personalautoline","policydrivercopier");
x.t("personalautoline","note");
x.t("interests","modifiers");
x.t("interests","copied");
x.t("interests","vehiclecopier.alladdlinterestdetailscopier.shouldcopyall");
x.t("interests","select");
x.t("interests","vehicle");
x.t("allexclusioncopier","extends");
x.t("data","source");
x.t("data","line");
x.t("data","personal");
x.t("data","implementation");
x.t("data","copy");
x.t("optional","matching");
x.t("findmatch","method");
x.t("preventing","copier");
x.t("policyperiod","modifiercopier");
x.t("policyperiod","matching");
x.t("addcopier","adds");
x.t("policy","source");
x.t("policy","comprehensive");
x.t("policy","target");
x.t("policy","lines");
x.t("policy","period");
x.t("policy","collision");
x.t("policy","screen");
x.t("policy","driver");
x.t("copiers","allexistingcoveragecopier");
x.t("copiers","tree");
x.t("copiers","addallcopiers");
x.t("copiers","entities");
x.t("copiers","compositecopier");
x.t("copiers","base");
x.t("copiers","copier");
x.t("copiers","personal");
x.t("copiers","marked");
x.t("copiers","shouldcopyall");
x.t("copiers","abstract");
x.t("copiers","note");
x.t("copiers","allcoveragescopier");
x.t("classes","description");
x.t("classes","topic");
x.t("classes","extend");
x.t("classes","generic");
x.t("classes","copier");
x.t("classes","function");
x.t("varies","copier");
x.t("note","copied");
x.t("note","copier");
x.t("note","appears");
x.t("note","policy");
x.t("note","entity");
x.t("two","copiers");
x.t("allexposurecopier","extends");
x.t("copy","notes");
x.t("copy","source");
x.t("copy","copies");
x.t("copy","request");
x.t("copy","data");
x.t("copy","policy");
x.t("copy","individual");
x.t("copy","child");
x.t("work","copying");
x.t("coverable","exist");
x.t("coverable","removes");
x.t("coverable","overwrites");
x.t("coverable","allcoveragescopier");
x.t("subclass","compositecopier");
x.t("call","copy");
x.t("model","guide");
x.t("following","table");
x.t("following","modifiers");
x.t("following","functionality");
x.t("following","methods");
x.t("following","code");
x.t("entity","copier");
x.t("entity","copies");
x.t("entity","control");
x.t("entity","together");
x.t("entity","optional");
x.t("entity","note");
x.t("entity","copy");
x.t("individual","copiers");
x.t("individual","child");
x.t("individual","coverages");
x.t("allnotecopier","enable");
x.t("allnotecopier","extends");
x.t("clausepatterncopier","extends");
x.t("used","policy");
x.t("class","automatically");
x.t("class","includes");
x.t("class","provides");
x.t("class","copier");
x.t("class","copies");
x.t("class","delegates");
x.t("class","extends");
x.t("class","findmatch");
x.t("using","copy");
x.t("grouping","composite");
x.t("overrides","findmatch");
x.t("returns","matching");
x.t("modifiable","personalvehiclecopier");
x.t("child","entities");
x.t("driver","complex");
x.t("driver","copier");
x.t("associated","personalvehicle");
x.t("therefore","modifiers");
x.t("var","text_val=eval");
x.t("allcoveragescopier","executing");
x.t("allcoveragescopier","delegates");
x.t("matching","method");
x.t("matching","policydriver");
x.t("matching","drivers");
x.t("matching","vehicle");
x.t("matching","note");
x.t("matching","entity");
x.t("coverages","removingclausepatterncopier");
x.t("coverages","allremovingcoveragecopier");
x.t("coverages","copied");
x.t("coverages","target");
x.t("coverages","vehiclecopier.allcoveragecopier.shouldcopyall");
x.t("coverages","selected");
x.t("coverages","select");
x.t("coverages","additional");
x.t("coverages","individual");
x.t("coverages","using");
x.t("allcoveragecopier","extends");
}
