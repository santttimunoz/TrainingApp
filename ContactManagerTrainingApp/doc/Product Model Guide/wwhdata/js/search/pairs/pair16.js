function FileData_Pairs(x)
{
x.t("example","consider");
x.t("example","coverages");
x.t("wcline.wcempliabcov","however");
x.t("wcline.wcempliabcov","//comes");
x.t("states","option");
x.t("possible","required");
x.t("available","java");
x.t("pattern","example");
x.t("pattern","referenced");
x.t("pattern","clicking");
x.t("pattern","policycenter");
x.t("pattern","code");
x.t("pattern","whose");
x.t("pattern","policy");
x.t("pattern","administration");
x.t("needs","know");
x.t("within","policy");
x.t("within","policyline");
x.t("files","therefore");
x.t("files","var");
x.t("home","page");
x.t("instance","therefore");
x.t("instance","policyline");
x.t("always","ties");
x.t("workers","compensation");
x.t("workers","comp");
x.t("required","policy");
x.t("businessowners","inland");
x.t("businessowners","policy");
x.t("name=","otherstatesopt");
x.t("otherstates","desc=");
x.t("creates","policy");
x.t("creates","following");
x.t("liability","businessowners");
x.t("referenced","instance");
x.t("line","pattern");
x.t("line","instance");
x.t("line","subtypes");
x.t("line","include");
x.t("line","subtype");
x.t("line","policy");
x.t("line","patterns");
x.t("working","policy");
x.t("text_val.select","link");
x.t("provided","configuration");
x.t("type","error");
x.t("type","information");
x.t("type","workerscomp");
x.t("compiler","merges");
x.t("merges","type");
x.t("form","pattern");
x.t("form","final");
x.t("form","patterns");
x.t("multiple","subtypes");
x.t("however","following");
x.t("product","designer");
x.t("product","configuration");
x.t("product","model");
x.t("property","workers");
x.t("guidewire","recommends");
x.t("link","directly");
x.t("link","name");
x.t("access","policy");
x.t("new","policy");
x.t("objects","java");
x.t("objects","policyline");
x.t("care","policy");
x.t("messsage","policycenter");
x.t("clicking","link");
x.t("clicking","add");
x.t("add","policy");
x.t("recommends","exercise");
x.t("guide","policycenter");
x.t("guide","information");
x.t("configuring","policy");
x.t("/subtype","therefore");
x.t("directly","page");
x.t("true","typekey");
x.t("text_val.focus","text_val.select");
x.t("name","column");
x.t("definition","product");
x.t("definition","occurs");
x.t("no","product");
x.t("gosu","compiler");
x.t("gosu","aware");
x.t("gosu","valid");
x.t("base","configuration");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("none","//comes");
x.t("supertype=","policyline");
x.t("final","type");
x.t("lines","working");
x.t("lines","function");
x.t("lines","actually");
x.t("lines","page");
x.t("lines","note");
x.t("lines","policyline");
x.t("defining","form");
x.t("personal","auto");
x.t("desc=","states");
x.t("desc=","workers");
x.t("coverage","/subtype");
x.t("extra","care");
x.t("policycenter","needs");
x.t("policycenter","always");
x.t("policycenter","creates");
x.t("policycenter","product");
x.t("designer","home");
x.t("designer","node");
x.t("auto","commercial");
x.t("error","businessowners");
x.t("error","occurred");
x.t("know","subtype");
x.t("occurs","workerscompline.eti");
x.t("typelist=","otherstates");
x.t("select","product");
x.t("select","existing");
x.t("commercial","property");
x.t("commercial","auto");
x.t("guidewire_selectall","var");
x.t("dm","files");
x.t("function","guidewire_selectall");
x.t("define","new");
x.t("subtypes","base");
x.t("subtypes","personal");
x.t("subtypes","policycenter");
x.t("aware","product");
x.t("node","named");
x.t("code","subtype");
x.t("typekey","name=");
x.t("otherstatesopt","typelist=");
x.t("option","coverage");
x.t("click","product");
x.t("inland","marine");
x.t("whose","policy");
x.t("java","information");
x.t("occurred","messsage");
x.t("existing","policy");
x.t("consider","workerscompline");
x.t("configuration","pattern");
x.t("configuration","type");
x.t("configuration","form");
x.t("configuration","gosu");
x.t("configuration","dm");
x.t("configuration","policy");
x.t("include","workers");
x.t("named","policy");
x.t("wcline.otherstatesopt","none");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("actually","working");
x.t("panel","policy");
x.t("subtype","within");
x.t("subtype","creates");
x.t("subtype","definition");
x.t("subtype","entity=");
x.t("subtype","workerscompline");
x.t("expression","valid");
x.t("expression","causes");
x.t("valid","wcline.otherstatesopt");
x.t("valid","var");
x.t("exercise","extra");
x.t("page","error");
x.t("page","select");
x.t("page","click");
x.t("ties","policy");
x.t("information","available");
x.t("information","provided");
x.t("information","defining");
x.t("information","subtype");
x.t("(bop)","line");
x.t("defined","within");
x.t("bopline.wcempliabcov","example");
x.t("policy","line");
x.t("policy","form");
x.t("policy","objects");
x.t("policy","lines");
x.t("policy","(bop)");
x.t("application","guide");
x.t("workerscomp","policyline");
x.t("note","no");
x.t("note","even");
x.t("column","define");
x.t("administration","application");
x.t("navigation","panel");
x.t("marine","policyline");
x.t("causes","type");
x.t("model","guide");
x.t("model","configuring");
x.t("model","select");
x.t("model","configuration");
x.t("model","navigation");
x.t("entity","multiple");
x.t("entity","new");
x.t("following","definition");
x.t("following","gosu");
x.t("following","expression");
x.t("//comes","product");
x.t("//comes","configuration");
x.t("general","liability");
x.t("entity=","workerscompline");
x.t("generatecode=","true");
x.t("associated","policy");
x.t("policyline","objects");
x.t("policyline","note");
x.t("policyline","entity");
x.t("policyline","generatecode=");
x.t("policyline","object");
x.t("therefore","guidewire");
x.t("therefore","policycenter");
x.t("therefore","following");
x.t("compensation","general");
x.t("compensation","coverages");
x.t("workerscompline","possible");
x.t("workerscompline","pattern");
x.t("workerscompline","displayname=");
x.t("workerscompline.eti","subtype");
x.t("displayname=","workers");
x.t("var","wcline.wcempliabcov");
x.t("var","text_val=eval");
x.t("var","bopline.wcempliabcov");
x.t("patterns","product");
x.t("patterns","access");
x.t("patterns","associated");
x.t("even","product");
x.t("object","gosu");
x.t("object","therefore");
x.t("coverages","defined");
x.t("coverages","var");
x.t("comp","supertype=");
x.t("comp","desc=");
}
