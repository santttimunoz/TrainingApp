function FileData_Pairs(x)
{
x.t("retroactive","dates");
x.t("booleanterm","type");
x.t("booleanterm","navl");
x.t("example","name");
x.t("example","coverable");
x.t("effdatedbranchtype=","policyperiod");
x.t("precision","value=");
x.t("booleanterm1avl","type=");
x.t("extensions","entity");
x.t("columns","deploy");
x.t("columns","needed");
x.t("columns","coverage");
x.t("columns","define");
x.t("dates","forth");
x.t("condominiums","coverage");
x.t("condominiums","terms");
x.t("provide","enough");
x.t("hodwellingcov","coverage");
x.t("available","last");
x.t("properties","property");
x.t("defines","coverage");
x.t("pattern","exceeds");
x.t("pattern","coverables");
x.t("every","coverable");
x.t("needs","two");
x.t("business","creating");
x.t("business","step");
x.t("business","adding");
x.t("create","new");
x.t("create","homeownerslinecov");
x.t("create","coverage");
x.t("table","table");
x.t("table","limits");
x.t("table","homeownerslinecov");
x.t("table","coverage");
x.t("table","attribute");
x.t("table","maximum");
x.t("table","two");
x.t("table","restricts");
x.t("description","column");
x.t("studio","open");
x.t("key","coverable");
x.t("required","add");
x.t("instructions","verifying");
x.t("limits","add");
x.t("limits","deductibles");
x.t("limits","number");
x.t("foreign","key");
x.t("name=","precision");
x.t("name=","booleanterm1avl");
x.t("name=","holine");
x.t("name=","choiceterm1avl");
x.t("name=","directterm1");
x.t("name=","directterm2");
x.t("name=","directterm1avl");
x.t("name=","directterm1av2");
x.t("name=","booleanterm1");
x.t("name=","scale");
x.t("name=","choiceterm1");
x.t("topic","create");
x.t("topic","explained");
x.t("topic","coverable");
x.t("liability","line");
x.t("liability","coverage");
x.t("liability","terms");
x.t("choiceterm","type");
x.t("choiceterm","navl");
x.t("effdated","effdatedbranchtype");
x.t("effdated","foreignkey");
x.t("effdatedbranchtype","attribute");
x.t("effdatedbranchtype","policyperiod");
x.t("version=","1.0");
x.t("line","effdatedbranchtype=");
x.t("line","needs");
x.t("line","business");
x.t("line","open");
x.t("line","navigating");
x.t("line","add");
x.t("line","homeownersline");
x.t("line","coverage--");
x.t("line","policy");
x.t("line","two");
x.t("line","coverable");
x.t("line","created");
x.t("line","coverages");
x.t("dialog","box");
x.t("shows","coverages");
x.t("last","time");
x.t("http://guidewire.com/datamodel","desc=");
x.t("field","available");
x.t("field","getterscriptability=");
x.t("text_val.select","link");
x.t("deploy","data");
x.t("patterncode","name");
x.t("patterncode","desc=");
x.t("type","description");
x.t("type","effdated");
x.t("type","patterncode");
x.t("type","applies");
x.t("type","handle");
x.t("type","definition");
x.t("type","name");
x.t("type","coverage");
x.t("type","attribute");
x.t("type","shorttext");
x.t("type","datetime");
x.t("type","stores");
x.t("type","added");
x.t("type","important");
x.t("type","bit");
x.t("type","column");
x.t("type","used");
x.t("type","decimal");
x.t("open","coverable");
x.t("open","homeownersline.eti");
x.t("holinecoverages","arrayentity");
x.t("time","availability");
x.t("time","policycenter");
x.t("xmlns=","http://guidewire.com/datamodel");
x.t("setterscriptability=","doesnotexist");
x.t("external","note");
x.t("navigating","policy");
x.t("however","define");
x.t("followed","avl");
x.t("product","designer");
x.t("product","model");
x.t("needed","coverage");
x.t("needed","define");
x.t("require","coverable");
x.t("exceeds","limits");
x.t("entities","coverage");
x.t("entities","respectively");
x.t("property","value");
x.t("--homeowners","line");
x.t("link","directly");
x.t("link","coverable");
x.t("new","line");
x.t("new","coverage");
x.t("new","term");
x.t("among","coverage");
x.t("single","coverage");
x.t("objects","need");
x.t("objects","homeownersline");
x.t("consists","two");
x.t("element","table");
x.t("element","selected");
x.t("element","homeownersline");
x.t("choice","covterm");
x.t("choice","coverage");
x.t("choice","option");
x.t("homeowners","create");
x.t("homeowners","line");
x.t("homeowners","add");
x.t("directterm","type");
x.t("directterm","navl");
x.t("holine","fkentity");
x.t("holine","nullok=");
x.t("fkentity=","homeownersline");
x.t("messsage","policycenter");
x.t("need","coverage");
x.t("list","empty");
x.t("add","columns");
x.t("add","foreign");
x.t("add","new");
x.t("add","add");
x.t("add","array");
x.t("add","coverage");
x.t("add","maximum");
x.t("add","term");
x.t("add","additional");
x.t("add","coveragepattern");
x.t("add","foreignkey");
x.t("add","following");
x.t("add","coverages");
x.t("complete","coverage");
x.t("table=","homeownerslinecov");
x.t("guide","configuring");
x.t("applies","single");
x.t("normally","however");
x.t("platform=","false");
x.t("configuring","lines");
x.t("availability","availability");
x.t("availability","column");
x.t("availability","checked");
x.t("false","add");
x.t("false","table=");
x.t("false","platform=");
x.t("false","value");
x.t("false","column");
x.t("stringterm","type");
x.t("stringterm","navl");
x.t("directly","coverage");
x.t("directly","page");
x.t("requires","coverage");
x.t("requires","dedicated");
x.t("handle","expected");
x.t("true","false");
x.t("true","desc");
x.t("true","final=");
x.t("covterm","field");
x.t("creating","coverage");
x.t("text_val.focus","text_val.select");
x.t("no","coverage");
x.t("no","types");
x.t("box","enables");
x.t("definition","consists");
x.t("definition","homeownerslinecov");
x.t("definition","column");
x.t("name","booleanterm");
x.t("name","choiceterm");
x.t("name","type");
x.t("name","holinecoverages");
x.t("name","directterm");
x.t("name","holine");
x.t("name","stringterm");
x.t("name","coverage");
x.t("name","second");
x.t("name","first");
x.t("name","datetimeterm");
x.t("name","dateterm");
x.t("enables","choose");
x.t("direct","choice");
x.t("direct","covterm");
x.t("direct","coverage");
x.t("direct","integer");
x.t("base","configuration");
x.t("homeownerslinecov","hodwellingcov");
x.t("homeownerslinecov","studio");
x.t("homeownerslinecov","type");
x.t("homeownerslinecov","xml");
x.t("homeownerslinecov","cascadedelete");
x.t("homeownerslinecov","type=");
x.t("homeownerslinecov","entity");
x.t("homeownerslinecov","exportable=");
x.t("textual","value");
x.t("choiceterm1avl","type=");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("zero","coverage");
x.t("boolean","true");
x.t("boolean","covterm");
x.t("boolean","string");
x.t("boolean","coverage");
x.t("provides","no");
x.t("provides","coverage");
x.t("window","entity");
x.t("hodwelling","coverable");
x.t("hodwelling","following");
x.t("doesnotexist","setterscriptability=");
x.t("doesnotexist","desc=");
x.t("doesnotexist","columnparam");
x.t("doesnotexist","column");
x.t("explained","specify");
x.t("lines","business");
x.t("lines","general");
x.t("string","textual");
x.t("string","date");
x.t("examine","coverages");
x.t("empty","cannot");
x.t("array","element");
x.t("array","coverable");
x.t("array","coverages");
x.t("coverage","example");
x.t("coverage","pattern");
x.t("coverage","product");
x.t("coverage","needed");
x.t("coverage","entities");
x.t("coverage","homeowners");
x.t("coverage","add");
x.t("coverage","requires");
x.t("coverage","no");
x.t("coverage","homeownerslinecov");
x.t("coverage","array");
x.t("coverage","coverage");
x.t("coverage","types");
x.t("coverage","homeownersline");
x.t("coverage","term");
x.t("coverage","lower");
x.t("coverage","several");
x.t("coverage","already");
x.t("coverage","entity");
x.t("coverage","terms");
x.t("coverage","returns");
x.t("coverage","patterns");
x.t("deductibles","retroactive");
x.t("second","coverage");
x.t("second","directterm2");
x.t("defining","coverage");
x.t("attribute","effdated");
x.t("attribute","name");
x.t("attribute","policyperiod");
x.t("directterm1","field");
x.t("directterm1","name");
x.t("directterm1","type=");
x.t("desc=","choice");
x.t("desc=","direct");
x.t("desc=","boolean");
x.t("desc=","line-level");
x.t("desc=","whether");
x.t("policycenter","product");
x.t("policycenter","checked");
x.t("designer","underlying");
x.t("designer","coverages");
x.t("selected","type");
x.t("selected","following");
x.t("store","positive");
x.t("shorttext","name");
x.t("directterm2","homeowners");
x.t("directterm2","type=");
x.t("/column","column");
x.t("error","occurred");
x.t("config","extensions");
x.t("point","verify");
x.t("next","select");
x.t("respectively","define");
x.t("1.0","--homeowners");
x.t("directterm1avl","type=");
x.t("select","employee");
x.t("first","direct");
x.t("/entity","link");
x.t("guidewire_selectall","var");
x.t("number","type");
x.t("number","name");
x.t("number","coverage");
x.t("number","types");
x.t("number","terms");
x.t("underlying","table");
x.t("viewing","term");
x.t("datetime","name");
x.t("line-level","coverage");
x.t("line-level","coverages");
x.t("function","guidewire_selectall");
x.t("maximum","number");
x.t("maximum","two");
x.t("enough","columns");
x.t("define","homeownerslinecov");
x.t("define","coverage");
x.t("define","second");
x.t("define","following");
x.t("particular","type");
x.t("particular","coverage");
x.t("cannot","add");
x.t("whether","directterm1");
x.t("whether","term");
x.t("whether","booleanterm1");
x.t("whether","choiceterm1");
x.t("editor","window");
x.t("unique","among");
x.t("represents","typical");
x.t("step","add");
x.t("stores","whether");
x.t("types","add");
x.t("types","coverage");
x.t("types","defined");
x.t("changes","application");
x.t("explain","define");
x.t("xml","version=");
x.t("xml","code");
x.t("directterm1av2","type=");
x.t("verify","work");
x.t("added","coverage");
x.t("important","define");
x.t("expected","coverage");
x.t("coverables","require");
x.t("typekey","boolean");
x.t("typekey","coverage");
x.t("dedicated","column");
x.t("forth","examine");
x.t("homeownersline","create");
x.t("homeownersline","name=");
x.t("homeownersline","property");
x.t("homeownersline","hodwelling");
x.t("homeownersline","coverage");
x.t("homeownersline","nullok");
x.t("homeownersline","setterscriptability");
x.t("homeownersline","entity");
x.t("steps","explain");
x.t("code","represents");
x.t("cascadedelete","true");
x.t("term","columns");
x.t("term","available");
x.t("term","table");
x.t("term","dialog");
x.t("term","type");
x.t("term","definition");
x.t("term","boolean");
x.t("term","directterm1");
x.t("term","selected");
x.t("term","unique");
x.t("term","types");
x.t("term","click");
x.t("term","foresee");
x.t("term","following");
x.t("benefits","liability");
x.t("previous","topic");
x.t("least","associated");
x.t("option","package");
x.t("database","define");
x.t("navl","type");
x.t("lower","case");
x.t("nullok","false");
x.t("click","add");
x.t("fkentity","homeownersline");
x.t("coverage--","entity");
x.t("nullok=","false");
x.t("20","/column");
x.t("occurred","messsage");
x.t("configuration","provides");
x.t("configuration","config");
x.t("configuration","define");
x.t("arrayentity","homeownerslinecov");
x.t("foresee","used");
x.t("additional","columns");
x.t("value","table");
x.t("value","name");
x.t("value","store");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("coveragepattern","coverage");
x.t("several","coverage");
x.t("already","contains");
x.t("type=","effdated");
x.t("type=","patterncode");
x.t("type=","bit");
x.t("type=","decimal");
x.t("getterscriptability=","doesnotexist");
x.t("columnparam","name=");
x.t("page","error");
x.t("booleanterm1","field");
x.t("booleanterm1","type=");
x.t("data","model");
x.t("attached","homeownerslinecov");
x.t("typical","complete");
x.t("defined","table");
x.t("avl","define");
x.t("bit","choice");
x.t("bit","name");
x.t("bit","boolean");
x.t("bit","string");
x.t("bit","defining");
x.t("bit","desc=");
x.t("bit","getterscriptability=");
x.t("bit","date");
x.t("policyperiod","homeowners");
x.t("policyperiod","add");
x.t("policyperiod","entity=");
x.t("foreignkey","element");
x.t("foreignkey","fkentity=");
x.t("desc","line-level");
x.t("policy","line");
x.t("policy","lines");
x.t("employee","benefits");
x.t("application","server");
x.t("case","letters");
x.t("scale","value=");
x.t("choiceterm1","field");
x.t("choiceterm1","type=");
x.t("choose","among");
x.t("date","base");
x.t("date","value");
x.t("date","date");
x.t("two","direct");
x.t("two","boolean");
x.t("two","option");
x.t("two","column");
x.t("two","coverable");
x.t("column","name=");
x.t("column","followed");
x.t("column","list");
x.t("column","name");
x.t("column","direct");
x.t("column","database");
x.t("column","column");
x.t("column","elements");
x.t("illustration","shows");
x.t("integer","value");
x.t("setterscriptability","external");
x.t("note","point");
x.t("coverable","every");
x.t("coverable","create");
x.t("coverable","topic");
x.t("coverable","objects");
x.t("coverable","homeowners");
x.t("coverable","requires");
x.t("coverable","coverage");
x.t("coverable","define");
x.t("coverable","least");
x.t("coverable","policy");
x.t("coverable","coverable");
x.t("coverable","following");
x.t("coverable","entity");
x.t("coverable","object");
x.t("positive","number");
x.t("letters","type");
x.t("homeownersline.eti","configuration");
x.t("work","instructions");
x.t("created","previous");
x.t("package","coverage");
x.t("package","typekey");
x.t("entity","provide");
x.t("entity","defines");
x.t("entity","table");
x.t("entity","xmlns=");
x.t("entity","element");
x.t("entity","homeowners");
x.t("entity","add");
x.t("entity","normally");
x.t("entity","definition");
x.t("entity","zero");
x.t("entity","provides");
x.t("entity","coverage");
x.t("entity","editor");
x.t("entity","previous");
x.t("entity","policy");
x.t("entity","coverable");
x.t("entity","entity");
x.t("entity","following");
x.t("entity","per");
x.t("model","product");
x.t("model","guide");
x.t("model","changes");
x.t("used","coverage");
x.t("used","particular");
x.t("used","coverable");
x.t("following","properties");
x.t("following","coverage");
x.t("following","xml");
x.t("following","steps");
x.t("following","illustration");
x.t("elements","defines");
x.t("datetimeterm","navl");
x.t("general","liability");
x.t("entity=","homeownerslinecov");
x.t("adding","new");
x.t("terms","example");
x.t("terms","condominiums");
x.t("terms","columns");
x.t("terms","table");
x.t("terms","required");
x.t("terms","limits");
x.t("terms","choice");
x.t("terms","add");
x.t("terms","directly");
x.t("terms","name");
x.t("terms","direct");
x.t("terms","base");
x.t("terms","coverage");
x.t("terms","next");
x.t("terms","viewing");
x.t("terms","particular");
x.t("terms","employee");
x.t("terms","two");
x.t("terms","used");
x.t("terms","general");
x.t("restricts","number");
x.t("returns","coverage");
x.t("per","coverable");
x.t("decimal","name");
x.t("decimal","desc=");
x.t("exportable=","true");
x.t("associated","coverage");
x.t("var","text_val=eval");
x.t("patterns","coverage");
x.t("dateterm","type");
x.t("value=","20");
x.t("value=","columnparam");
x.t("object","creating");
x.t("object","array");
x.t("object","function");
x.t("object","policy");
x.t("object","entity");
x.t("coverages","condominiums");
x.t("coverages","product");
x.t("coverages","new");
x.t("coverages","homeowners");
x.t("coverages","need");
x.t("coverages","coverage");
x.t("coverages","homeownersline");
x.t("coverages","attached");
x.t("contains","maximum");
x.t("server","number");
x.t("checked","availability");
x.t("checked","/entity");
x.t("checked","getterscriptability=");
x.t("checked","column");
x.t("specify","number");
x.t("final=","false");
x.t("verifying","work");
}
