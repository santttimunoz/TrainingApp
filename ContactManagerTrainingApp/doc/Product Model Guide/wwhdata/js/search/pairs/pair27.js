function FileData_Pairs(x)
{
x.t("example","medical");
x.t("example","bopline.newcov.packageterm");
x.t("example","identify");
x.t("example","automobile");
x.t("example","limit");
x.t("example","bopline.newcov.optionterm");
x.t("example","options");
x.t("example","bopline.newcov.directterm");
x.t("example","consider");
x.t("example","selecting");
x.t("example","date");
x.t("optioncode","values");
x.t("yyyy-mm-dd","hh:mm:ss.sss");
x.t("available","coverage");
x.t("provide","information");
x.t("pattern","types");
x.t("building","coverage");
x.t("building","value");
x.t("rather","single");
x.t("combinations","single");
x.t("combinations","values");
x.t("formatted","yyyy-mm-dd");
x.t("within","bounds");
x.t("medical","payments");
x.t("description","direct");
x.t("business","legal");
x.t("studio","configuration");
x.t("10","//false");
x.t("10","//true");
x.t("limits","10000/20000/50000");
x.t("limits","deductibles");
x.t("limits","option");
x.t("limits","permissible");
x.t("10000/20000/50000","10000/20000/100000");
x.t("user","subject");
x.t("liability","coverage");
x.t("liability","package");
x.t("bopline.newcov.packageterm","==");
x.t("bopline.newcov.packageterm","10/50/100");
x.t("subject","bounds");
x.t("text_val.select","link");
x.t("support","gosu");
x.t("payments","liability");
x.t("displays","limit");
x.t("working","typelists");
x.t("type","provide");
x.t("type","description");
x.t("type","objects");
x.t("type","filter");
x.t("type","direct");
x.t("type","generic");
x.t("type","compound");
x.t("type","select");
x.t("type","represents");
x.t("type","define");
x.t("type","typekey");
x.t("type","option");
x.t("type","numeric");
x.t("type","package");
x.t("directcoverageterm","objects");
x.t("directcoverageterm","bopline.newcov.directterm");
x.t("packages","patterns");
x.t("time","boolean");
x.t("time","value");
x.t("multiple","compound");
x.t("multiple","terms");
x.t("identify","whether");
x.t("identify","meaning");
x.t("however","combinations");
x.t("product","designer");
x.t("product","model");
x.t("text","box");
x.t("guidewire","provides");
x.t("500","1000");
x.t("claimant","bodily");
x.t("injury","accident");
x.t("property","damage");
x.t("link","directly");
x.t("objects","coverage");
x.t("objects","number");
x.t("objects","compare");
x.t("==","1000");
x.t("==","100");
x.t("==","10/50/100");
x.t("==","20/60/200");
x.t("single","list");
x.t("single","accident");
x.t("single","value");
x.t("single","numeric");
x.t("choice","optionally");
x.t("typefilters","working");
x.t("messsage","policycenter");
x.t("list","list");
x.t("list","choices");
x.t("list","options");
x.t("list","value");
x.t("list","values");
x.t("list","predefined");
x.t("numerical","value");
x.t("group","rather");
x.t("group","list");
x.t("assign","option");
x.t("assign","value");
x.t("assign","package");
x.t("25000/50000/25000","sense");
x.t("automobile","liability");
x.t("guide","generic");
x.t("guide","policycenter");
x.t("filter","typekey");
x.t("applies","compound");
x.t("20000","50000");
x.t("permitted","combination");
x.t("meaningful","combination");
x.t("configuring","policy");
x.t("freely","specify");
x.t("directly","text");
x.t("directly","numerical");
x.t("directly","policycenter");
x.t("directly","page");
x.t("directly","compare");
x.t("specified","coveragetermpattern");
x.t("relates","value");
x.t("ordinary","numbers");
x.t("text_val.focus","text_val.select");
x.t("range","coverage");
x.t("box","policycenter");
x.t("//false","typekey");
x.t("//false","bopline.newcov.directterm");
x.t("//false","package");
x.t("typelists","studio");
x.t("typelists","typefilters");
x.t("gosu","directly");
x.t("gosu","code");
x.t("enables","select");
x.t("direct","coverage");
x.t("direct","numeric");
x.t("entered","directly");
x.t("custom","value");
x.t("custom","values");
x.t("limit","building");
x.t("limit","combinations");
x.t("limit","applies");
x.t("limit","person");
x.t("limit","vehicle");
x.t("limit","accident");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("boolean","value");
x.t("provides","syntax");
x.t("compound","collection");
x.t("compound","values");
x.t("generic","custom");
x.t("generic","coverage");
x.t("lines","defining");
x.t("//assign","value");
x.t("natural","syntax");
x.t("string","date");
x.t("string","literals");
x.t("sets","limit");
x.t("25000/50000/100000","assign");
x.t("coverage","relates");
x.t("coverage","selected");
x.t("coverage","commercial");
x.t("coverage","term");
x.t("coverage","two");
x.t("coverage","terms");
x.t("defining","coverage");
x.t("deductibles","selected");
x.t("bopline.newcov.optionterm","==");
x.t("bopline.newcov.optionterm","100");
x.t("policycenter","example");
x.t("policycenter","user");
x.t("policycenter","displays");
x.t("policycenter","product");
x.t("policycenter","100000");
x.t("policycenter","predefined");
x.t("policycenter","numeric");
x.t("selected","group");
x.t("selected","unit");
x.t("selected","predefined");
x.t("selected","typelist");
x.t("designer","option");
x.t("1000","//false");
x.t("1000","enables");
x.t("auto","policy");
x.t("legal","perspective");
x.t("simplify","selecting");
x.t("error","occurred");
x.t("choices","known");
x.t("choices","package");
x.t("choices","filtered");
x.t("syntax","support");
x.t("syntax","gosu");
x.t("involved","single");
x.t("damage","permissible");
x.t("packagecode","objects");
x.t("options","coverage");
x.t("options","policycenter");
x.t("options","define");
x.t("options","100");
x.t("options","page");
x.t("options","patterns");
x.t("collection","limits");
x.t("select","single");
x.t("select","value");
x.t("select","specific");
x.t("select","package");
x.t("unit","example");
x.t("commercial","auto");
x.t("guidewire_selectall","var");
x.t("number","assign");
x.t("number","natural");
x.t("number","literals");
x.t("10000","25000");
x.t("function","guidewire_selectall");
x.t("define","multiple");
x.t("define","list");
x.t("define","generic");
x.t("whether","value");
x.t("represents","multiple");
x.t("person","10000");
x.t("25000","limit");
x.t("25000","50000");
x.t("combination","25000/50000/25000");
x.t("combination","sets");
x.t("combination","coverage");
x.t("combination","result");
x.t("cannot","customize");
x.t("customize","generic");
x.t("ineffective","coverage");
x.t("types","available");
x.t("types","type");
x.t("types","custom");
x.t("types","coverage");
x.t("types","select");
x.t("types","function");
x.t("types","enable");
x.t("types","include");
x.t("50000","limit");
x.t("50000","100000");
x.t("typekey","coverage");
x.t("typekey","value");
x.t("code","option");
x.t("code","10/50/100");
x.t("enable","choose");
x.t("hh:mm:ss.sss","cannot");
x.t("term","pattern");
x.t("term","type");
x.t("term","packages");
x.t("term","options");
x.t("term","number");
x.t("term","types");
x.t("term","bopline.newcov.directterm");
x.t("term","compare");
x.t("term","covtermopt");
x.t("thus","treat");
x.t("vehicle","20000");
x.t("vehicle","higher");
x.t("option","coverage");
x.t("option","numeric");
x.t("100","500");
x.t("100","//assign");
x.t("100","bopline.newcov.optionterm");
x.t("100","term");
x.t("100","//true");
x.t("appear","following");
x.t("known","typelist");
x.t("enter","policycenter");
x.t("bopline.newcov.directterm","10");
x.t("bopline.newcov.directterm","==");
x.t("bopline.newcov.directterm","assign");
x.t("bopline.newcov.directterm","100");
x.t("occurred","messsage");
x.t("consider","following");
x.t("accident","property");
x.t("accident","permitted");
x.t("accident","simplify");
x.t("accident","25000");
x.t("accident","bodily");
x.t("include","type");
x.t("typefilter","information");
x.t("configuration","guide");
x.t("value","example");
x.t("value","building");
x.t("value","formatted");
x.t("value","list");
x.t("value","entered");
x.t("value","limit");
x.t("value","generic");
x.t("value","selected");
x.t("value","code");
x.t("value","term");
x.t("value","100");
x.t("value","option");
x.t("value","enter");
x.t("value","actually");
x.t("value","valid");
x.t("value","predefined");
x.t("value","date");
x.t("similar","ordinary");
x.t("10/50/100","bopline.newcov.packageterm");
x.t("10/50/100","//assign");
x.t("10/50/100","//true");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("//true","bopline.newcov.packageterm");
x.t("//true","bopline.newcov.optionterm");
x.t("//true","thus");
x.t("//true","bopline.newcov.directterm");
x.t("specific","values");
x.t("specific","deductible");
x.t("selecting","combination");
x.t("selecting","valid");
x.t("bounds","specified");
x.t("actually","permissible");
x.t("valid","within");
x.t("valid","meaningful");
x.t("page","product");
x.t("page","error");
x.t("information","identify");
x.t("information","typelists");
x.t("meaning","value");
x.t("result","ineffective");
x.t("bodily","injury");
x.t("policy","lines");
x.t("policy","following");
x.t("values","example");
x.t("values","freely");
x.t("values","directly");
x.t("values","limit");
x.t("values","string");
x.t("values","coverage");
x.t("values","define");
x.t("values","sense");
x.t("values","package");
x.t("values","coverages");
x.t("treat","direct");
x.t("100000","however");
x.t("100000","1592410");
x.t("deductible","limits");
x.t("choose","specific");
x.t("coveragetermpattern","example");
x.t("coveragetermpattern","direct");
x.t("predefined","choice");
x.t("predefined","list");
x.t("predefined","range");
x.t("predefined","choices");
x.t("date","time");
x.t("date","boolean");
x.t("sense","business");
x.t("sense","combination");
x.t("perspective","example");
x.t("two","vehicles");
x.t("numeric","value");
x.t("numeric","values");
x.t("optionally","list");
x.t("optionally","filtered");
x.t("package","limits");
x.t("package","compound");
x.t("package","coverage");
x.t("package","policycenter");
x.t("package","following");
x.t("numbers","guidewire");
x.t("literals","example");
x.t("literals","optioncode");
x.t("literals","packagecode");
x.t("model","guide");
x.t("model","configuring");
x.t("following","limits");
x.t("following","directcoverageterm");
x.t("following","package");
x.t("following","coverages");
x.t("typelist","predefined");
x.t("typelist","optionally");
x.t("10000/20000/100000","25000/50000/100000");
x.t("terms","coverage");
x.t("terms","policycenter");
x.t("terms","similar");
x.t("terms","compare");
x.t("compare","directcoverageterm");
x.t("compare","directly");
x.t("compare","string");
x.t("vehicles","involved");
x.t("20/60/200","//false");
x.t("var","text_val=eval");
x.t("patterns","example");
x.t("1592410","direct");
x.t("filtered","type");
x.t("filtered","typefilter");
x.t("specify","number");
x.t("covtermopt","value");
x.t("permissible","values");
x.t("higher","value");
x.t("coverages","claimant");
x.t("coverages","appear");
}
